// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Component
{
    /// <summary>
    /// A component resource that has callable methods.
    /// </summary>
    [ComponentResourceType("component:index:ComponentCallable")]
    public partial class ComponentCallable : global::Pulumi.ComponentResource
    {
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a ComponentCallable resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ComponentCallable(string name, ComponentCallableArgs args, ComponentResourceOptions? options = null)
            : base("component:index:ComponentCallable", name, args ?? new ComponentCallableArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }

        /// <summary>
        /// The `identity` method of the `ComponentCallable` component resource. Returns the component's `value` unaltered.
        /// </summary>
        public global::Pulumi.Output<ComponentCallableIdentityResult> Identity()
            => global::Pulumi.Deployment.Instance.Call<ComponentCallableIdentityResult>("component:index:ComponentCallable/identity", CallArgs.Empty, this);

        /// <summary>
        /// The `prefixed` method of the `ComponentCallable` component resource. Accepts a string and returns the component's `value` prefixed with that string.
        /// </summary>
        public global::Pulumi.Output<ComponentCallablePrefixedResult> Prefixed(ComponentCallablePrefixedArgs args)
            => global::Pulumi.Deployment.Instance.Call<ComponentCallablePrefixedResult>("component:index:ComponentCallable/prefixed", args ?? new ComponentCallablePrefixedArgs(), this);
    }

    public sealed class ComponentCallableArgs : global::Pulumi.ResourceArgs
    {
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public ComponentCallableArgs()
        {
        }
        public static new ComponentCallableArgs Empty => new ComponentCallableArgs();
    }

    /// <summary>
    /// The results of the <see cref="ComponentCallable.Identity"/> method.
    /// </summary>
    [OutputType]
    public sealed class ComponentCallableIdentityResult
    {
        public readonly string Result;

        [OutputConstructor]
        private ComponentCallableIdentityResult(string result)
        {
            Result = result;
        }
    }

    /// <summary>
    /// The set of arguments for the <see cref="ComponentCallable.Prefixed"/> method.
    /// </summary>
    public sealed class ComponentCallablePrefixedArgs : global::Pulumi.CallArgs
    {
        [Input("prefix", required: true)]
        public Input<string> Prefix { get; set; } = null!;

        public ComponentCallablePrefixedArgs()
        {
        }
        public static new ComponentCallablePrefixedArgs Empty => new ComponentCallablePrefixedArgs();
    }

    /// <summary>
    /// The results of the <see cref="ComponentCallable.Prefixed"/> method.
    /// </summary>
    [OutputType]
    public sealed class ComponentCallablePrefixedResult
    {
        public readonly string Result;

        [OutputConstructor]
        private ComponentCallablePrefixedResult(string result)
        {
            Result = result;
        }
    }
}
