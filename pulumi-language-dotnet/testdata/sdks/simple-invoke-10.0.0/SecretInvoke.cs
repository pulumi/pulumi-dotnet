// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SimpleInvoke
{
    public static class SecretInvoke
    {
        public static Task<SecretInvokeResult> InvokeAsync(SecretInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<SecretInvokeResult>("simple-invoke:index:secretInvoke", args ?? new SecretInvokeArgs(), options.WithDefaults());

        public static Output<SecretInvokeResult> Invoke(SecretInvokeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<SecretInvokeResult>("simple-invoke:index:secretInvoke", args ?? new SecretInvokeInvokeArgs(), options.WithDefaults());

        public static Output<SecretInvokeResult> Invoke(SecretInvokeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<SecretInvokeResult>("simple-invoke:index:secretInvoke", args ?? new SecretInvokeInvokeArgs(), options.WithDefaults());
    }


    public sealed class SecretInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("secretResponse", required: true)]
        public bool SecretResponse { get; set; }

        [Input("value", required: true)]
        public string Value { get; set; } = null!;

        public SecretInvokeArgs()
        {
        }
        public static new SecretInvokeArgs Empty => new SecretInvokeArgs();
    }

    public sealed class SecretInvokeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("secretResponse", required: true)]
        public Input<bool> SecretResponse { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public SecretInvokeInvokeArgs()
        {
        }
        public static new SecretInvokeInvokeArgs Empty => new SecretInvokeInvokeArgs();
    }


    [OutputType]
    public sealed class SecretInvokeResult
    {
        public readonly string Response;
        public readonly bool Secret;

        [OutputConstructor]
        private SecretInvokeResult(
            string response,

            bool secret)
        {
            Response = response;
            Secret = secret;
        }
    }
}
