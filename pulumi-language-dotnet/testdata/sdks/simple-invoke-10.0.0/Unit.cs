// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SimpleInvoke
{
    public static class Unit
    {
        public static Task<UnitResult> InvokeAsync(UnitArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<UnitResult>("simple-invoke:index:unit", args ?? new UnitArgs(), options.WithDefaults());

        public static Output<UnitResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<UnitResult>("simple-invoke:index:unit", InvokeArgs.Empty, options.WithDefaults());

        public static Output<UnitResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<UnitResult>("simple-invoke:index:unit", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class UnitArgs : global::Pulumi.InvokeArgs
    {
        public UnitArgs()
        {
        }
        public static new UnitArgs Empty => new UnitArgs();
    }


    [OutputType]
    public sealed class UnitResult
    {
        public readonly string Result;

        [OutputConstructor]
        private UnitResult(string result)
        {
            Result = result;
        }
    }
}
