<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Pulumi</name>
    </assembly>
    <members>
        <member name="T:Pulumi.Config">
            <summary>
            <see cref="T:Pulumi.Config"/> is a bag of related configuration state.  Each bag contains any number
            of configuration variables, indexed by simple keys, and each has a name that uniquely
            identifies it; two bags with different names do not share values for variables that
            otherwise share the same key.  For example, a bag whose name is <c>pulumi:foo</c>, with keys
            <c>a</c>, <c>b</c>, and <c>c</c>, is entirely separate from a bag whose name is
            <c>pulumi:bar</c> with the same simple key names.  Each key has a fully qualified names,
            such as <c>pulumi:foo:a</c>, ..., and <c>pulumi:bar:a</c>, respectively.
            </summary>
        </member>
        <member name="F:Pulumi.Config._name">
            <summary>
            <see cref="F:Pulumi.Config._name"/> is the configuration bag's logical name and uniquely identifies it.
            The default is the name of the current project.
            </summary>
        </member>
        <member name="M:Pulumi.Config.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Pulumi.Config"/> instance. <paramref name="name"/> is the
            configuration bag's logical name and uniquely identifies it. The default is the name of
            the current project.
            </summary>
        </member>
        <member name="M:Pulumi.Config.Get(System.String)">
            <summary>
            Loads an optional configuration value by its key, or <see langword="null"/> if it doesn't exist.
            </summary>
        </member>
        <member name="M:Pulumi.Config.GetSecret(System.String)">
            <summary>
            Loads an optional configuration value by its key, marking it as a secret, or <see
            langword="null"/> if it doesn't exist.
            </summary>
        </member>
        <member name="M:Pulumi.Config.GetBoolean(System.String)">
            <summary>
            Loads an optional configuration value, as a boolean, by its key, or null if it doesn't exist.
            If the configuration value isn't a legal boolean, this function will throw an error.
            </summary>
        </member>
        <member name="M:Pulumi.Config.GetSecretBoolean(System.String)">
            <summary>
            Loads an optional configuration value, as a boolean, by its key, making it as a secret or
            null if it doesn't exist. If the configuration value isn't a legal boolean, this
            function will throw an error.
            </summary>
        </member>
        <member name="M:Pulumi.Config.GetInt32(System.String)">
            <summary>
            Loads an optional configuration value, as a number, by its key, or null if it doesn't exist.
            If the configuration value isn't a legal number, this function will throw an error.
            </summary>
        </member>
        <member name="M:Pulumi.Config.GetSecretInt32(System.String)">
            <summary>
            Loads an optional configuration value, as a number, by its key, marking it as a secret
            or null if it doesn't exist.
            If the configuration value isn't a legal number, this function will throw an error.
            </summary>
        </member>
        <member name="M:Pulumi.Config.GetDouble(System.String)">
            <summary>
            Loads an optional configuration value, as a number, by its key, or null if it doesn't exist.
            If the configuration value isn't a legal number, this function will throw an error.
            </summary>
        </member>
        <member name="M:Pulumi.Config.GetSecretDouble(System.String)">
            <summary>
            Loads an optional configuration value, as a number, by its key, making it as a secret or
            null if it doesn't exist. If the configuration value isn't a legal number, this
            function will throw an error.
            </summary>
        </member>
        <member name="M:Pulumi.Config.GetObject``1(System.String)">
            <summary>
            Loads an optional configuration value, as an object, by its key, or null if it doesn't
            exist. This works by taking the value associated with <paramref name="key"/> and passing
            it to <see cref="M:System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)"/>.
            </summary>
        </member>
        <member name="M:Pulumi.Config.GetSecretObject``1(System.String)">
            <summary>
            Loads an optional configuration value, as an object, by its key, marking it as a secret
            or null if it doesn't exist. This works by taking the value associated with <paramref
            name="key"/> and passing it to <see cref="M:System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)"/>.
            </summary>
        </member>
        <member name="M:Pulumi.Config.Require(System.String)">
            <summary>
            Loads a configuration value by its given key.  If it doesn't exist, an error is thrown.
            </summary>
        </member>
        <member name="M:Pulumi.Config.RequireSecret(System.String)">
            <summary>
            Loads a configuration value by its given key, marking it as a secret.  If it doesn't exist, an error
            is thrown.
            </summary>
        </member>
        <member name="M:Pulumi.Config.RequireBoolean(System.String)">
            <summary>
            Loads a configuration value, as a boolean, by its given key.  If it doesn't exist, or the
            configuration value is not a legal boolean, an error is thrown.
            </summary>
        </member>
        <member name="M:Pulumi.Config.RequireSecretBoolean(System.String)">
            <summary>
            Loads a configuration value, as a boolean, by its given key, marking it as a secret.
            If it doesn't exist, or the configuration value is not a legal boolean, an error is thrown.
            </summary>
        </member>
        <member name="M:Pulumi.Config.RequireInt32(System.String)">
            <summary>
            Loads a configuration value, as a number, by its given key.  If it doesn't exist, or the
            configuration value is not a legal number, an error is thrown.
            </summary>
        </member>
        <member name="M:Pulumi.Config.RequireSecretInt32(System.String)">
            <summary>
            Loads a configuration value, as a number, by its given key, marking it as a secret.
            If it doesn't exist, or the configuration value is not a legal number, an error is thrown.
            </summary>
        </member>
        <member name="M:Pulumi.Config.RequireDouble(System.String)">
            <summary>
            Loads a configuration value, as a number, by its given key.  If it doesn't exist, or the
            configuration value is not a legal number, an error is thrown.
            </summary>
        </member>
        <member name="M:Pulumi.Config.RequireSecretDouble(System.String)">
            <summary>
            Loads a configuration value, as a number, by its given key, marking it as a secret.
            If it doesn't exist, or the configuration value is not a legal number, an error is thrown.
            </summary>
        </member>
        <member name="M:Pulumi.Config.RequireObject``1(System.String)">
            <summary>
            Loads a configuration value as a JSON string and deserializes the JSON into an object.
            object. If it doesn't exist, or the configuration value cannot be converted using <see
            cref="M:System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)"/>, an error is
            thrown.
            </summary>
        </member>
        <member name="M:Pulumi.Config.RequireSecretObject``1(System.String)">
            <summary>
            Loads a configuration value as a JSON string and deserializes the JSON into a JavaScript
            object, marking it as a secret. If it doesn't exist, or the configuration value cannot
            be converted using <see cref="M:System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)"/>,
            an error is thrown.
            </summary>
        </member>
        <member name="M:Pulumi.Config.FullKey(System.String)">
            <summary>
            Turns a simple configuration key into a fully resolved one, by prepending the bag's name.
            </summary>
        </member>
        <member name="T:Pulumi.Config.ConfigTypeException">
            <summary>
            ConfigTypeException is used when a configuration value is of the wrong type.
            </summary>
        </member>
        <member name="T:Pulumi.Config.ConfigMissingException">
            <summary>
            ConfigMissingException is used when a configuration value is completely missing.
            </summary>
        </member>
        <member name="T:Pulumi.Experimental.Provider.LogSeverity">
            <summary>
            LogSeverity is the severity level of a log message.  Errors are fatal; all others are informational.
            </summary>
        </member>
        <member name="F:Pulumi.Experimental.Provider.LogSeverity.Debug">
            <summary>
            A debug-level message not displayed to end-users (the default).
            </summary>
        </member>
        <member name="F:Pulumi.Experimental.Provider.LogSeverity.Info">
            <summary>
            An informational message printed to output during resource operations.
            </summary>
        </member>
        <member name="F:Pulumi.Experimental.Provider.LogSeverity.Warning">
            <summary>
            A warning to indicate that something went wrong.
            </summary>
        </member>
        <member name="F:Pulumi.Experimental.Provider.LogSeverity.Error">
            <summary>
            A fatal error indicating that the tool should stop processing subsequent resource operations.
            </summary>
        </member>
        <member name="T:Pulumi.Experimental.Provider.LogMessage">
            <summary>
            A log message to be sent to the Pulumi engine.
            </summary>
        </member>
        <member name="F:Pulumi.Experimental.Provider.LogMessage.Severity">
            <summary>
            The logging level of this message.
            </summary>
        </member>
        <member name="F:Pulumi.Experimental.Provider.LogMessage.Message">
            <summary>
            The contents of the logged message.
            </summary>
        </member>
        <member name="F:Pulumi.Experimental.Provider.LogMessage.Urn">
            <summary>
            The (optional) resource urn this log is associated with.
            </summary>
        </member>
        <member name="F:Pulumi.Experimental.Provider.LogMessage.StreamId">
            <summary>
            The (optional) stream id that a stream of log messages can be associated with. This allows
            clients to not have to buffer a large set of log messages that they all want to be
            conceptually connected.  Instead the messages can be sent as chunks (with the same stream id)
            and the end display can show the messages as they arrive, while still stitching them together
            into one total log message.
            </summary>
            <remarks>
            0 means do not associate with any stream.
            </remarks>
        </member>
        <member name="F:Pulumi.Experimental.Provider.LogMessage.Ephemeral">
            <summary>
            Optional value indicating whether this is a status message.
            </summary>
        </member>
        <member name="T:Pulumi.Experimental.Provider.IHost">
            <summary>
            An interface to the engine host running this plugin.
            </summary>
        </member>
        <member name="M:Pulumi.Experimental.Provider.IHost.LogAsync(Pulumi.Experimental.Provider.LogMessage)">
            <summary>
            Send a log message to the host.
            </summary>
        </member>
        <member name="T:Pulumi.Experimental.Provider.PropertyValueType">
            <summary>
            Property values will be one of these types.
            </summary>
        </member>
        <member name="T:Pulumi.Alias">
            <summary>
            Alias is a description of prior named used for a resource. It can be processed in the
            context of a resource creation to determine what the full aliased URN would be.
            <para/>
            Use <see cref="P:Pulumi.Alias.Urn"/> in the case where a prior URN is known and can just be specified in
            full.  Otherwise, provide some subset of the other properties in this type to generate an
            appropriate urn from the pre-existing values of the <see cref="T:Pulumi.Resource"/> with certain
            parts overridden.
            <para/>
            The presence of a property indicates if its value should be used. If absent (i.e.
            <see langword="null"/>), then the value is not used.
            <para/>
            Note: because of the above, there needs to be special handling to indicate that the previous
            <see cref="P:Pulumi.Alias.Parent"/> of a <see cref="T:Pulumi.Resource"/> was <see langword="null"/>.  Specifically,
            pass in:
            <para/>
            <c>Aliases = { new Alias { NoParent = true } }</c>
            </summary>
        </member>
        <member name="P:Pulumi.Alias.Urn">
            <summary>
            The previous urn to alias to.  If this is provided, no other properties in this type
            should be provided.
            </summary>
        </member>
        <member name="P:Pulumi.Alias.Name">
            <summary>
            The previous name of the resource.  If <see langword="null"/>, the current name of the
            resource is used.
            </summary>
        </member>
        <member name="P:Pulumi.Alias.Type">
            <summary>
            The previous type of the resource.  If <see langword="null"/>, the current type of the
            resource is used.
            </summary>
        </member>
        <member name="P:Pulumi.Alias.Stack">
            <summary>
            The previous stack of the resource.  If <see langword="null"/>, defaults to the value of
            <see cref="P:Pulumi.IDeployment.StackName"/>.
            </summary>
        </member>
        <member name="P:Pulumi.Alias.Project">
            <summary>
            The previous project of the resource. If <see langword="null"/>, defaults to the value
            of <see cref="P:Pulumi.IDeployment.ProjectName"/>.
            </summary>
        </member>
        <member name="P:Pulumi.Alias.Parent">
            <summary>
            The previous parent of the resource. If <see langword="null"/>, the current parent of
            the resource is used.
            <para/>
            To specify no original parent, use <c>new Alias { NoParent = true }</c>.
            <para/>
            Only specify one of <see cref="P:Pulumi.Alias.Parent"/> or <see cref="P:Pulumi.Alias.ParentUrn"/> or <see cref="P:Pulumi.Alias.NoParent"/>.
            </summary>
        </member>
        <member name="P:Pulumi.Alias.ParentUrn">
            <summary>
            The previous parent of the resource. If <see langword="null"/>, the current parent of
            the resource is used.
            <para/>
            To specify no original parent, use <c>new Alias { NoParent = true }</c>.
            <para/>
            Only specify one of <see cref="P:Pulumi.Alias.Parent"/> or <see cref="P:Pulumi.Alias.ParentUrn"/> or <see cref="P:Pulumi.Alias.NoParent"/>.
            </summary>
        </member>
        <member name="P:Pulumi.Alias.NoParent">
            <summary>
            Used to indicate the resource previously had no parent.  If <see langword="false"/> this
            property is ignored.
            <para/>
            To specify no original parent, use <c>new Alias { NoParent = true }</c>.
            <para/>
            Only specify one of <see cref="P:Pulumi.Alias.Parent"/> or <see cref="P:Pulumi.Alias.ParentUrn"/> or <see cref="P:Pulumi.Alias.NoParent"/>.
            </summary>
        </member>
        <member name="M:Pulumi.Alias.Deserialize(Pulumirpc.Alias)">
            <summary>
            Deserialize a wire protocol alias to an alias object.
            </summary>
        </member>
        <member name="T:Pulumi.Archive">
            <summary>
            An Archive represents a collection of named assets.
            </summary>
        </member>
        <member name="T:Pulumi.AssetArchive">
            <summary>
            An AssetArchive is an archive created from an in-memory collection of named assets or other
            archives.
            </summary>
        </member>
        <member name="T:Pulumi.FileArchive">
            <summary>
            A FileArchive is a file-based archive, or a collection of file-based assets.  This can be a
            raw directory or a single archive file in one of the supported formats(.tar, .tar.gz,
            or.zip).
            </summary>
        </member>
        <member name="T:Pulumi.RemoteArchive">
            <summary>
            A RemoteArchive is a file-based archive fetched from a remote location.  The URI's scheme
            dictates the protocol for fetching the archive's contents: <c>file://</c> is a local file
            (just like a FileArchive), <c>http://</c> and <c>https://</c> specify HTTP and HTTPS,
            respectively, and specific providers may recognize custom schemes.
            </summary>
        </member>
        <member name="T:Pulumi.Asset">
            <summary>
            Asset represents a single blob of text or data that is managed as a first class entity.
            </summary>
        </member>
        <member name="T:Pulumi.FileAsset">
            <summary>
            FileAsset is a kind of asset produced from a given path to a file on the local filesystem.
            </summary>
        </member>
        <member name="T:Pulumi.StringAsset">
            <summary>
            StringAsset is a kind of asset produced from an in-memory UTF8-encoded string.
            </summary>
        </member>
        <member name="T:Pulumi.RemoteAsset">
            <summary>
            RemoteAsset is a kind of asset produced from a given URI string.  The URI's scheme dictates
            the protocol for fetching contents: <c>file://</c> specifies a local file, <c>http://</c>
            and <c>https://</c> specify HTTP and HTTPS, respectively.  Note that specific providers may
            recognize alternative schemes; this is merely the base-most set that all providers support.
            </summary>
        </member>
        <member name="T:Pulumi.AssetOrArchive">
            <summary>
            Base class of <see cref="T:Pulumi.Asset"/>s and <see cref="T:Pulumi.Archive"/>s.
            </summary>
        </member>
        <member name="T:Pulumi.IInput">
            <summary>
            Internal interface to allow our code to operate on inputs in an untyped manner. Necessary as
            there is no reasonable way to write algorithms over heterogeneous instantiations of generic
            types.
            </summary>
        </member>
        <member name="T:Pulumi.Input`1">
            <summary>
            <see cref="T:Pulumi.Input`1"/> is a property input for a <see cref="T:Pulumi.Resource"/>.  It may be a promptly
            available T, or the output from a existing <see cref="T:Pulumi.Resource"/>.
            </summary>
        </member>
        <member name="F:Pulumi.Input`1._outputValue">
            <summary>
            Technically, in .net we can represent Inputs entirely using the Output type (since
            Outputs can wrap values and promises).  However, it would look very weird to state that
            the inputs to a resource *had* to be Outputs. So we basically just come up with this
            wrapper type so things look sensible, even though under the covers we implement things
            using the exact same type
            </summary>
        </member>
        <member name="M:Pulumi.InputExtensions.Apply``2(Pulumi.Input{``0},System.Func{``0,``1})">
            <summary>
            <see cref="M:Pulumi.Output`1.Apply``1(System.Func{`0,Pulumi.Output{``0}})"/> for more details.
            </summary>
        </member>
        <member name="M:Pulumi.InputExtensions.Apply``2(Pulumi.Input{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>
            <see cref="M:Pulumi.Output`1.Apply``1(System.Func{`0,Pulumi.Output{``0}})"/> for more details.
            </summary>
        </member>
        <member name="M:Pulumi.InputExtensions.Apply``2(Pulumi.Input{``0},System.Func{``0,Pulumi.Input{``1}})">
            <summary>
            <see cref="M:Pulumi.Output`1.Apply``1(System.Func{`0,Pulumi.Output{``0}})"/> for more details.
            </summary>
        </member>
        <member name="M:Pulumi.InputExtensions.Apply``2(Pulumi.Input{``0},System.Func{``0,Pulumi.Output{``1}})">
            <summary>
            <see cref="M:Pulumi.Output`1.Apply``1(System.Func{`0,Pulumi.Output{``0}})"/> for more details.
            </summary>
        </member>
        <member name="T:Pulumi.InputJson">
            <summary>
            Represents an <see cref="T:Pulumi.Input`1"/> value that wraps a <see cref="T:System.Text.Json.JsonElement"/>.
            </summary>
        </member>
        <member name="T:Pulumi.InputList`1">
            <summary>
            A list of values that can be passed in as the arguments to a <see cref="T:Pulumi.Resource"/>.
            The individual values are themselves <see cref="T:Pulumi.Input`1"/>s.  i.e. the individual values
            can be concrete values or <see cref="T:Pulumi.Output`1"/>s.
            <para/>
            <see cref="T:Pulumi.InputList`1"/> differs from a normal <see cref="T:System.Collections.Generic.IList`1"/> in that it is itself
            an <see cref="T:Pulumi.Input`1"/>.  For example, a <see cref="T:Pulumi.Resource"/> that accepts an <see
            cref="T:Pulumi.InputList`1"/> will accept not just a list but an <see cref="T:Pulumi.Output`1"/>
            of a list.  This is important for cases where the <see cref="T:Pulumi.Output`1"/>
            list from some <see cref="T:Pulumi.Resource"/> needs to be passed into another <see
            cref="T:Pulumi.Resource"/>.  Or for cases where creating the list invariably produces an <see
            cref="T:Pulumi.Output`1"/> because its resultant value is dependent on other <see
            cref="T:Pulumi.Output`1"/>s.
            <para/>
            This benefit of <see cref="T:Pulumi.InputList`1"/> is also a limitation.  Because it represents a
            list of values that may eventually be created, there is no way to simply iterate over, or
            access the elements of the list synchronously.
            <para/>
            <see cref="T:Pulumi.InputList`1"/> is designed to be easily used in object and collection
            initializers.  For example, a resource that accepts a list of inputs can be written in
            either of these forms:
            <para/>
            <code>
                new SomeResource("name", new SomeResourceArgs {
                    ListProperty = { Value1, Value2, Value3 },
                });
            </code>
            <para/>
            or
            <code>
                new SomeResource("name", new SomeResourceArgs {
                    ListProperty = new [] { Value1, Value2, Value3 },
                });
            </code>
            </summary>
        </member>
        <member name="M:Pulumi.InputList`1.Add(Pulumi.InputList{`0})">
            <summary>
            Note: this is non-standard convenience for use with collection initializers.
            </summary>
        </member>
        <member name="M:Pulumi.InputList`1.Concat(Pulumi.InputList{`0})">
            <summary>
            Concatenates the values in this list with the values in <paramref name="other"/>,
            returning the concatenated sequence in a new <see cref="T:Pulumi.InputList`1"/>.
            </summary>
        </member>
        <member name="T:Pulumi.InputMap`1">
            <summary>
            A mapping of <see cref="T:System.String"/>s to values that can be passed in as the arguments to a
            <see cref="T:Pulumi.Resource"/>. The individual values are themselves <see cref="T:Pulumi.Input`1"/>s.  i.e.
            the individual values can be concrete values or <see cref="T:Pulumi.Output`1"/>s.
            <para/>
            <see cref="T:Pulumi.InputMap`1"/> differs from a normal <see cref="T:System.Collections.Generic.IDictionary`2"/> in that it is
            itself an <see cref="T:Pulumi.Input`1"/>.  For example, a <see cref="T:Pulumi.Resource"/> that accepts an
            <see cref="T:Pulumi.InputMap`1"/> will accept not just a dictionary but an <see cref="T:Pulumi.Output`1"/>
            of a dictionary as well.  This is important for cases where the <see cref="T:Pulumi.Output`1"/>
            map from some <see cref="T:Pulumi.Resource"/> needs to be passed into another <see cref="T:Pulumi.Resource"/>.
            Or for cases where creating the map invariably produces an <see cref="T:Pulumi.Output`1"/> because
            its resultant value is dependent on other <see cref="T:Pulumi.Output`1"/>s.
            <para/>
            This benefit of <see cref="T:Pulumi.InputMap`1"/> is also a limitation.  Because it represents a
            list of values that may eventually be created, there is no way to simply iterate over, or
            access the elements of the map synchronously.
            <para/>
            <see cref="T:Pulumi.InputMap`1"/> is designed to be easily used in object and collection
            initializers.  For example, a resource that accepts a map of values can be written easily in
            this form:
            <para/>
            <code>
                new SomeResource("name", new SomeResourceArgs {
                    MapProperty = {
                        { Key1, Value1 },
                        { Key2, Value2 },
                        { Key3, Value3 },
                    },
                });
            </code>
            </summary>
        </member>
        <member name="M:Pulumi.InputMap`1.Add(Pulumi.InputMap{`0})">
            <summary>
            Note: this is non-standard convenience for use with collection initializers.
            </summary>
        </member>
        <member name="M:Pulumi.InputMap`1.Merge(Pulumi.InputMap{`0},Pulumi.InputMap{`0})">
            <summary>
            Merge two instances of <see cref="T:Pulumi.InputMap`1"/>. Returns a new <see cref="T:Pulumi.InputMap`1"/>
            without modifying any of the arguments.
            <para/>If both maps contain the same key, the value from the second map takes over.
            </summary>
            <param name="first">The first <see cref="T:Pulumi.InputMap`1"/>. Has lower priority in case of
            key clash.</param>
            <param name="second">The second <see cref="T:Pulumi.InputMap`1"/>. Has higher priority in case of
            key clash.</param>
            <returns>A new instance of <see cref="T:Pulumi.InputMap`1"/> that contains the items from
            both input maps.</returns>
        </member>
        <member name="T:Pulumi.InputUnion`2">
            <summary>
            Represents an <see cref="T:Pulumi.Input`1"/> value that can be one of two different types. For
            example, it might potentially be an <see cref="T:System.Int32"/> some of the time or a <see
            cref="T:System.String"/> in other cases.
            </summary>
        </member>
        <member name="T:Pulumi.OutputJsonConverter">
            <summary>
            Internal class used for Output.JsonSerialize.
            </summary>
        </member>
        <member name="T:Pulumi.Output">
            <summary>
            Useful static utility methods for both creating and working with <see cref="T:Pulumi.Output`1"/>s.
            </summary>
            <summary>
            Useful static utility methods for both creating and working wit <see cref="T:Pulumi.Output`1"/>s.
            </summary>
        </member>
        <member name="M:Pulumi.Output.Unsecret``1(Pulumi.Output{``0})">
            <summary>
            Returns a new <see cref="T:Pulumi.Output`1"/> which is a copy of the existing output but marked as
            a non-secret. The original output is not modified in any way.
            </summary>
        </member>
        <member name="M:Pulumi.Output.IsSecretAsync``1(Pulumi.Output{``0})">
            <summary>
            Retrieves the secretness status of the given output.
            </summary>
        </member>
        <member name="M:Pulumi.Output.All``1(Pulumi.Input{``0}[])">
            <summary>
            Combines all the <see cref="T:Pulumi.Input`1"/> values in <paramref name="inputs"/>
            into a single <see cref="T:Pulumi.Output`1"/> with an <see cref="T:System.Collections.Immutable.ImmutableArray`1"/>
            containing all their underlying values.  If any of the <see cref="T:Pulumi.Input`1"/>s are not
            known, the final result will be not known.  Similarly, if any of the <see
            cref="T:Pulumi.Input`1"/>s are secrets, then the final result will be a secret.
            </summary>
        </member>
        <member name="M:Pulumi.Output.All``1(System.Collections.Generic.IEnumerable{Pulumi.Input{``0}})">
            <summary>
            <see cref="M:Pulumi.Output.All``1(Pulumi.Input{``0}[])"/> for more details.
            </summary>
        </member>
        <member name="M:Pulumi.Output.All``1(Pulumi.Output{``0}[])">
            <summary>
            Combines all the <see cref="T:Pulumi.Output`1"/> values in <paramref name="outputs"/>
            into a single <see cref="T:Pulumi.Output`1"/> with an <see cref="T:System.Collections.Immutable.ImmutableArray`1"/>
            containing all their underlying values.  If any of the <see cref="T:Pulumi.Output`1"/>s are not
            known, the final result will be not known.  Similarly, if any of the <see
            cref="T:Pulumi.Output`1"/>s are secrets, then the final result will be a secret.
            </summary>
        </member>
        <member name="M:Pulumi.Output.All``1(System.Collections.Generic.IEnumerable{Pulumi.Output{``0}})">
            <summary>
            <see cref="M:Pulumi.Output.All``1(Pulumi.Output{``0}[])"/> for more details.
            </summary>
        </member>
        <member name="M:Pulumi.Output.Format(System.FormattableString)">
            <summary>
            Takes in a <see cref="T:System.FormattableString"/> with potential <see cref="T:Pulumi.Input`1"/>s or
            <see cref="T:Pulumi.Output`1"/> in the 'placeholder holes'.  Conceptually, this method unwraps
            all the underlying values in the holes, combines them appropriately with the <see
            cref="P:System.FormattableString.Format"/> string, and produces an <see cref="T:Pulumi.Output`1"/>
            containing the final result.
            <para/>
            If any of the <see cref="T:Pulumi.Input`1"/>s or <see cref="T:Pulumi.Output`1"/>s are not known, the
            final result will be not known.  Similarly, if any of the <see cref="T:Pulumi.Input`1"/>s or
            <see cref="T:Pulumi.Output`1"/>s are secrets, then the final result will be a secret.
            </summary>
        </member>
        <member name="M:Pulumi.Output.JsonSerialize``1(Pulumi.Output{``0},System.Text.Json.JsonSerializerOptions)">
            <summary>
            Uses <see cref="M:System.Text.Json.JsonSerializer.SerializeAsync``1(System.IO.Stream,``0,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)"/>
            to serialize the given <see cref="T:Pulumi.Output`1"/> value into a JSON string.
            </summary>
        </member>
        <member name="M:Pulumi.Output.JsonDeserialize``1(Pulumi.Output{System.String},System.Text.Json.JsonSerializerOptions)">
            <summary>
            Uses <see cref="M:System.Text.Json.JsonSerializer.DeserializeAsync``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)"/>
            to deserialize the given <see cref="T:Pulumi.Output`1"/> string value into a <typeparam name="T"/>.
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})">
            <summary>
            Combines all the <see cref="T:Pulumi.Input`1"/> values in the provided parameters and combines
            them all into a single tuple containing each of their underlying values.  If any of the
            <see cref="T:Pulumi.Input`1"/>s are not known, the final result will be not known.  Similarly,
            if any of the <see cref="T:Pulumi.Input`1"/>s are secrets, then the final result will be a
            secret.
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``2(Pulumi.Input{``0},Pulumi.Input{``1})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``3(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``4(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``5(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``6(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``7(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``2(Pulumi.Output{``0},Pulumi.Output{``1})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``3(Pulumi.Output{``0},Pulumi.Output{``1},Pulumi.Output{``2})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``4(Pulumi.Output{``0},Pulumi.Output{``1},Pulumi.Output{``2},Pulumi.Output{``3})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``5(Pulumi.Output{``0},Pulumi.Output{``1},Pulumi.Output{``2},Pulumi.Output{``3},Pulumi.Output{``4})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``6(Pulumi.Output{``0},Pulumi.Output{``1},Pulumi.Output{``2},Pulumi.Output{``3},Pulumi.Output{``4},Pulumi.Output{``5})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``7(Pulumi.Output{``0},Pulumi.Output{``1},Pulumi.Output{``2},Pulumi.Output{``3},Pulumi.Output{``4},Pulumi.Output{``5},Pulumi.Output{``6})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="M:Pulumi.Output.Tuple``8(Pulumi.Output{``0},Pulumi.Output{``1},Pulumi.Output{``2},Pulumi.Output{``3},Pulumi.Output{``4},Pulumi.Output{``5},Pulumi.Output{``6},Pulumi.Output{``7})">
            <summary>
            <see cref="M:Pulumi.Output.Tuple``8(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2},Pulumi.Input{``3},Pulumi.Input{``4},Pulumi.Input{``5},Pulumi.Input{``6},Pulumi.Input{``7})"/>
            </summary>
        </member>
        <member name="T:Pulumi.IOutput">
            <summary>
            Internal interface to allow our code to operate on outputs in an untyped manner. Necessary
            as there is no reasonable way to write algorithms over heterogeneous instantiations of
            generic types.
            </summary>
        </member>
        <member name="M:Pulumi.IOutput.GetDataAsync">
            <summary>
            Returns an <see cref="T:Pulumi.Output`1"/> equivalent to this, except with our
            <see cref="F:Pulumi.Serialization.OutputData`1.Value"/> casted to an object.
            </summary>
        </member>
        <member name="T:Pulumi.Output`1">
            <summary>
            <see cref="T:Pulumi.Output`1"/>s are a key part of how Pulumi tracks dependencies between <see
            cref="T:Pulumi.Resource"/>s. Because the values of outputs are not available until resources are
            created, these are represented using the special <see cref="T:Pulumi.Output`1"/>s type, which
            internally represents two things: an eventually available value of the output and
            the dependency on the source(s) of the output value.
            In fact, <see cref="T:Pulumi.Output`1"/>s is quite similar to <see cref="T:System.Threading.Tasks.Task`1"/>.
            Additionally, they carry along dependency information.
            <para/>
            The output properties of all resource objects in Pulumi have type <see cref="T:Pulumi.Output`1"/>.
            </summary>
        </member>
        <member name="M:Pulumi.Output`1.Apply(System.Func{`0,System.Threading.Tasks.Task})">
            <summary>
            <see cref="M:Pulumi.Output`1.Apply``1(System.Func{`0,Pulumi.Output{``0}})"/> for more details.
            </summary>
        </member>
        <member name="M:Pulumi.Output`1.Apply``1(System.Func{`0,``0})">
            <summary>
            <see cref="M:Pulumi.Output`1.Apply``1(System.Func{`0,Pulumi.Output{``0}})"/> for more details.
            </summary>
        </member>
        <member name="M:Pulumi.Output`1.Apply``1(System.Func{`0,System.Threading.Tasks.Task{``0}})">
            <summary>
            <see cref="M:Pulumi.Output`1.Apply``1(System.Func{`0,Pulumi.Output{``0}})"/> for more details.
            </summary>
        </member>
        <member name="M:Pulumi.Output`1.Apply``1(System.Func{`0,Pulumi.Input{``0}})">
            <summary>
            <see cref="M:Pulumi.Output`1.Apply``1(System.Func{`0,Pulumi.Output{``0}})"/> for more details.
            </summary>
        </member>
        <member name="M:Pulumi.Output`1.Apply``1(System.Func{`0,Pulumi.Output{``0}})">
             <summary>
             Transforms the data of this <see cref="T:Pulumi.Output`1"/> with the provided <paramref
             name="func"/>. The result remains an <see cref="T:Pulumi.Output`1"/> so that dependent resources
             can be properly tracked.
             <para/>
             <paramref name="func"/> is not allowed to make resources.
             <para/>
             <paramref name="func"/> can return other <see cref="T:Pulumi.Output`1"/>s.  This can be handy if
             you have an <c>Output&lt;SomeType&gt;</c> and you want to get a transitive dependency of
             it.  i.e.:
            
             <code>
             Output&lt;SomeType&gt; d1 = ...;
             Output&lt;OtherType&gt; d2 = d1.Apply(v => v.OtherOutput); // getting an output off of 'v'.
             </code>
            
             In this example, taking a dependency on d2 means a resource will depend on all the resources
             of d1.  It will <b>not</b> depend on the resources of v.x.y.OtherDep.
             <para/>
             Importantly, the Resources that d2 feels like it will depend on are the same resources
             as d1. If you need have multiple <see cref="T:Pulumi.Output`1"/>s and a single <see
             cref="T:Pulumi.Output`1"/> is needed that combines both set of resources, then <see
             cref="M:Pulumi.Output.All``1(Pulumi.Input{``0}[])"/> or <see cref="M:Pulumi.Output.Tuple``3(Pulumi.Input{``0},Pulumi.Input{``1},Pulumi.Input{``2})"/>
             should be used instead.
             <para/>
             This function will only be called execution of a <c>pulumi up</c> request.  It will not
             run during <c>pulumi preview</c> (as the values of resources are of course not known
             then).
             </summary>
        </member>
        <member name="T:Pulumi.OutputExtensions">
            <summary>
            Extension methods for <see cref="T:Pulumi.Output`1"/>.
            </summary>
        </member>
        <member name="M:Pulumi.OutputExtensions.GetAt``1(Pulumi.Output{System.Collections.Immutable.ImmutableArray{``0}},Pulumi.Input{System.Int32})">
            <summary>
            Convert an output containing an array to an output containing the array element
            at the specified index.
            </summary>
            <typeparam name="T">The type of elements in the array.</typeparam>
            <param name="array">An array wrapped into <see cref="T:Pulumi.Output`1"/>.</param>
            <param name="index">An index to get an element at.</param>
            <returns>An <see cref="T:Pulumi.Output`1"/> containing an array element.</returns>
        </member>
        <member name="M:Pulumi.OutputExtensions.First``1(Pulumi.Output{System.Collections.Immutable.ImmutableArray{``0}})">
            <summary>
            Convert an output containing an array to an output containing its first element.
            </summary>
            <typeparam name="T">The type of elements in the array.</typeparam>
            <param name="array">An array wrapped into <see cref="T:Pulumi.Output`1"/>.</param>
            <returns>An <see cref="T:Pulumi.Output`1"/> containing the first array element.</returns>
        </member>
        <member name="M:Pulumi.OutputExtensions.Length``1(Pulumi.Output{System.Collections.Immutable.ImmutableArray{``0}})">
            <summary>
            Convert an output containing an array to an output containing the length of the array.
            </summary>
            <typeparam name="T">The type of elements in the array.</typeparam>
            <param name="array">An array wrapped into <see cref="T:Pulumi.Output`1"/>.</param>
            <returns>An <see cref="T:Pulumi.Output`1"/> containing the array length.</returns>
        </member>
        <member name="T:Pulumi.Utilities.OutputUtilities">
             <summary>
             Allows extracting some internal insights about an instance of
             <see cref="T:Pulumi.Output`1"/>.
            
             Danger: these utilities are intended for use in test and
             debugging scenarios. In normal Pulumi programs, please
             consider using `.Apply` instead to chain `Output{T}`
             transformations without unpacking the underlying T. Doing
             so preserves metadata such as resource dependencies that
             is used by Pulumi engine to operate correctly. Using
             `await output.GetValueAsync()` directly opens up a possibility
             to introduce issues with lost metadata.
             </summary>
        </member>
        <member name="M:Pulumi.Utilities.OutputUtilities.CreateUnknown``1(``0)">
            <summary>
            Create an unknown with the given value.
            Note: generally, this should never be used since an unknown never resolves during preview.
            Bearing that in mind, this can be used in combination with await for
            a program control flow to avoid deadlock situations.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Pulumi.Utilities.OutputUtilities.CreateUnknown``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Create an unknown with the given value factory.
            Note: generally, this should never be used since an unknown never resolves during preview.
            Bearing that in mind, this can be used in combination with await for
            a program control flow to avoid deadlock situations.
            In particular, the value factory will never be called during preview.
            </summary>
            <param name="valueFactory">The value factory.</param>
        </member>
        <member name="M:Pulumi.Utilities.OutputUtilities.GetIsKnownAsync``1(Pulumi.Output{``0})">
            <summary>
            Retrieve the known status of the given output.
            Note: generally, this should never be used in combination with await for
            a program control flow to avoid deadlock situations.
            </summary>
            <param name="output">The <see cref="T:Pulumi.Output`1"/> to evaluate.</param>
        </member>
        <member name="M:Pulumi.Utilities.OutputUtilities.GetValueAsync``1(Pulumi.Output{``0})">
            <summary>
            Retrieve the value of the given output.
            Note: generally, this should never be used in combination with await for
            a program control flow to avoid deadlock situations.
            </summary>
            <param name="output">The <see cref="T:Pulumi.Output`1"/> to evaluate.</param>
        </member>
        <member name="M:Pulumi.Utilities.OutputUtilities.GetDependenciesAsync``1(Pulumi.Output{``0})">
            <summary>
            Retrieve a set of resources that the given output depends on.
            </summary>
            <param name="output">The <see cref="T:Pulumi.Output`1"/> to get dependencies of.</param>
        </member>
        <member name="T:Pulumi.IUnion">
            <summary>
            Internal interface to allow our code to operate on <see cref="T:Pulumi.Union`2"/>s in an
            untyped manner. Necessary as there is no reasonable way to write algorithms over
            heterogeneous instantiations of generic types.
            </summary>
        </member>
        <member name="T:Pulumi.Union`2">
            <summary>
            Represents a <see href="https://en.wikipedia.org/wiki/Tagged_union">Tagged Union</see>.
            <para/>
            This is used to hold a value that could take on several different, but fixed, types. Only
            one of the types can be in use at any one time. It can be thought of as a type that has
            several "cases," each of which should be handled correctly when that type is manipulated.
            <para/>
            For example, a <see cref="T:Pulumi.Resource"/> property that could either store a <see cref="T:System.Int32"/>
            or a <see cref="T:System.String"/> can be represented as <c>Output&lt;int, string&gt;</c>.  The <see
            cref="T:Pulumi.Input`1"/> version of this is <see cref="T:Pulumi.InputUnion`2"/>.
            </summary>
        </member>
        <member name="T:Pulumi.Urn">
            <summary>
            An automatically generated logical URN, used to stably identify resources. These are created
            automatically by Pulumi to identify resources.  They cannot be manually constructed.
            </summary>
        </member>
        <member name="M:Pulumi.Urn.Create(Pulumi.Input{System.String},Pulumi.Input{System.String},Pulumi.Resource,Pulumi.Input{System.String},Pulumi.Input{System.String},Pulumi.Input{System.String})">
            <summary>
            Computes a URN from the combination of a resource name, resource type, optional parent,
            optional project and optional stack.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pulumi.Urn.InheritedChildAlias(System.String,System.String,Pulumi.Input{System.String},System.String)">
            <summary>
            <see cref="M:Pulumi.Urn.InheritedChildAlias(System.String,System.String,Pulumi.Input{System.String},System.String)"/> computes the alias that should be applied to a child
            based on an alias applied to it's parent. This may involve changing the name of the
            resource in cases where the resource has a named derived from the name of the parent,
            and the parent name changed.
            </summary>
        </member>
        <member name="T:Pulumi.Callback">
            <summary>
            A callback function that can be invoked by the engine to perform some operation. The input message will be a
            byte serialized protobuf message, which the callback function should deserialize and process. The return value
            is a protobuf message that the SDK will serialize and return to the engine.
            </summary>
            <param name="message">A byte serialized protobuf message.</param>
            <param name="cancellationToken">The async cancellation token.</param>
            <returns>A protobuf message to be returned to the engine.</returns>
        </member>
        <member name="T:Pulumi.Callbacks">
            <summary>
            This class implements the callbacks server used by the engine to invoke remote functions in the dotnet process.
            </summary>
        </member>
        <member name="T:Pulumi.CallOptions">
            <summary>
            Options to help control the behavior of <see cref="M:Pulumi.Deployment.Call``1(System.String,Pulumi.CallArgs,Pulumi.Resource,Pulumi.CallOptions,System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Pulumi.CallOptions.Parent">
            <summary>
            An optional parent to use for default options for this call (e.g. the default provider
            to use).
            </summary>
        </member>
        <member name="P:Pulumi.CallOptions.Provider">
            <summary>
            An optional provider to use for this call. If no provider is supplied, the default
            provider for the called function's package will be used.
            </summary>
        </member>
        <member name="P:Pulumi.CallOptions.Version">
            <summary>
            An optional version, corresponding to the version of the provider plugin that should be
            used when performing this call.
            </summary>
        </member>
        <member name="P:Pulumi.CallOptions.PluginDownloadURL">
            <summary>
            An optional URL. If provided, the provider plugin with exactly this download URL will
            be used when performing this call. This will override the URL sourced from the host
            package, and should be rarely used.
            </summary>
        </member>
        <member name="T:Pulumi.Deployment">
             <summary>
             <see cref="T:Pulumi.Deployment"/> is the entry-point to a Pulumi application. .NET applications
             should perform all startup logic they need in their <c>Main</c> method and then end with:
             <para>
             <c>
             static Task&lt;int&gt; Main(string[] args)
             {
                 // program initialization code ...
            
                 return Deployment.Run(async () =>
                 {
                     // Code that creates resources.
                 });
             }
             </c>
             </para>
             Importantly: Cloud resources cannot be created outside of the lambda passed to any of the
             <see cref="M:Pulumi.Deployment.RunAsync(System.Action)"/> overloads.  Because cloud Resource construction is
             inherently asynchronous, the result of this function is a <see cref="T:System.Threading.Tasks.Task`1"/> which should
             then be returned or awaited.  This will ensure that any problems that are encountered during
             the running of the program are properly reported.  Failure to do this may lead to the
             program ending early before all resources are properly registered.
             </summary>
        </member>
        <member name="P:Pulumi.Deployment.Instance">
            <summary>
            The current running deployment instance. This is only available from inside the function
            passed to <see cref="M:Pulumi.Deployment.RunAsync(System.Action)"/> (or its overloads).
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.#ctor(Pulumi.IEngine,Pulumi.IMonitor,Pulumi.Testing.TestOptions)">
            <summary>
            This constructor is called from <see cref="M:Pulumi.Deployment.TestAsync(Pulumi.Testing.IMocks,System.Func{Pulumi.IRunner,System.Threading.Tasks.Task{System.Int32}},Pulumi.Testing.TestOptions)"/>
            with a mocked monitor and dummy values for project and stack.
            <para/>
            This constructor is also used in deployment tests in order to
            instantiate mock deployments.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.MonitorSupportsOutputValues">
            <summary>
            Check if the monitor supports the "outputValues" feature.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.MonitorSupportsAliasSpecs">
            <summary>
            Returns whether the resource monitor we are connected to supports the "aliasSpec" feature across the RPC interface.
            In which case we no longer compute alias combinations ourselves but instead delegate the work to the engine.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.MonitorSupportsTransforms">
            <summary>
            Returns whether the resource monitor we are connected to supports the "transforms" feature across the RPC interface.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.EngineLogger.Pulumi#IEngineLogger#DebugAsync(System.String,Pulumi.Resource,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Logs a debug-level message that is generally hidden from end-users.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.EngineLogger.Pulumi#IEngineLogger#InfoAsync(System.String,Pulumi.Resource,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Logs an informational message that is generally printed to stdout during resource
            operations.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.EngineLogger.Pulumi#IEngineLogger#WarnAsync(System.String,Pulumi.Resource,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Warn logs a warning to indicate that something went wrong, but not catastrophically so.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.EngineLogger.Pulumi#IEngineLogger#ErrorAsync(System.String,Pulumi.Resource,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Logs a fatal condition. Consider raising an exception
            after calling this method to stop the Pulumi program.
            </summary>
        </member>
        <member name="F:Pulumi.Deployment.Runner._inFlightTasks">
            <summary>
            The set of tasks that we have fired off.  We issue tasks in a Fire-and-Forget manner
            to be able to expose a Synchronous <see cref="T:Pulumi.Resource"/> model for users. i.e. a
            user just synchronously creates a resource, and we asynchronously kick off the work
            to populate it.  This works well, however we have to make sure the console app
            doesn't exit because it thinks there is no work to do.
            <para/>
            To ensure that doesn't happen, we have the main entrypoint of the app just
            continuously, asynchronously loop, waiting for these tasks to complete, and only
            exiting once the set becomes empty.
            </summary>
        </member>
        <member name="P:Pulumi.Deployment.RunnerOptions.IsInlineAutomationProgram">
            <summary>
            Returns whether or not the runner is executing an inline program from the Automation API
            </summary>
        </member>
        <member name="F:Pulumi.Deployment._configEnvKey">
            <summary>
            The environment variable key that the language plugin uses to set configuration values.
            </summary>
        </member>
        <member name="F:Pulumi.Deployment._configSecretKeysEnvKey">
            <summary>
            The environment variable key that the language plugin uses to set the list of secret configuration keys.
            </summary>
        </member>
        <member name="P:Pulumi.Deployment.AllConfig">
            <summary>
            Returns a copy of the full config map.
            </summary>
        </member>
        <member name="P:Pulumi.Deployment.ConfigSecretKeys">
            <summary>
            Returns a copy of the config secret keys.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.SetConfig(System.String,System.String)">
            <summary>
            Sets a configuration variable.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.SetAllConfig(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends all provided configuration.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.Pulumi#IDeploymentInternal#GetConfig(System.String)">
            <summary>
            Returns a configuration variable's value or <see langword="null"/> if it is unset.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.Pulumi#IDeploymentInternal#IsConfigSecret(System.String)">
            <summary>
            Returns true if the key contains a secret value.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.CleanKey(System.String)">
            <summary>
            CleanKey takes a configuration key, and if it is of the form "(string):config:(string)"
            removes the ":config:" portion. Previously, our keys always had the string ":config:" in
            them, and we'd like to remove it. However, the language host needs to continue to set it
            so we can be compatible with older versions of our packages. Once we stop supporting
            older packages, we can change the language host to not add this :config: thing and
            remove this function.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.AllAliases(System.Collections.Generic.List{Pulumi.Input{Pulumi.Alias}},System.String,System.String,Pulumi.Resource)">
            <summary>
            <see cref="M:Pulumi.Deployment.AllAliases(System.Collections.Generic.List{Pulumi.Input{Pulumi.Alias}},System.String,System.String,Pulumi.Resource)"/> makes a copy of the aliases array, and add to it any
            implicit aliases inherited from its parent. If there are N child aliases, and
            M parent aliases, there will be (M+1)*(N+1)-1 total aliases, or, as calculated
            in the logic below, N+(M*(1+N)).
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.GetTransitivelyReferencedChildResourcesOfComponentResources(System.Collections.Generic.HashSet{Pulumi.Resource})">
            <summary>
            Recursively walk the resources passed in, returning them and all resources reachable from
            <see cref="P:Pulumi.Resource.ChildResources"/> through any **Component** resources we encounter.
            </summary>
        </member>
        <member name="F:Pulumi.Deployment.PrepareResult.SupportsAliasSpec">
            <summary>
            Returns whether the resource monitor we are connected to supports the "aliasSpec" feature across the RPC interface.
            When that is not the case, use only use the URNs of the aliases to populate the AliasURNs field of RegisterResourceRequest,
            otherwise we pass the full structure of the Aliases field to the resource monitor.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.CompleteResourceAsync(Pulumi.Resource,System.Boolean,System.Func{System.String,Pulumi.Resource},Pulumi.ResourceArgs,Pulumi.ResourceOptions,System.Collections.Immutable.ImmutableDictionary{System.String,Pulumi.Serialization.IOutputCompletionSource})">
            <summary>
            Calls <see cref="M:Pulumi.Deployment.ReadOrRegisterResourceAsync(Pulumi.Resource,System.Boolean,System.Func{System.String,Pulumi.Resource},Pulumi.ResourceArgs,Pulumi.ResourceOptions)"/> then completes all the
            <see cref="T:Pulumi.Serialization.IOutputCompletionSource"/> sources on the <paramref name="resource"/> with
            the results of it.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.GetRootResourceAsync(System.String)">
            <summary>
            Returns a root resource URN that will automatically become the default parent of all
            resources.  This can be used to ensure that all resources without explicit parents are
            parented to a common parent resource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pulumi.Deployment.RunAsync(System.Action)">
            <summary>
            <see cref="M:Pulumi.Deployment.RunAsync(System.Func{System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.String,System.Object}}},Pulumi.StackOptions)"/> for more details.
            </summary>
            <param name="action">Callback that creates stack resources.</param>
        </member>
        <member name="M:Pulumi.Deployment.RunAsync(System.Func{System.Collections.Generic.IDictionary{System.String,System.Object}})">
            <summary>
            <see cref="M:Pulumi.Deployment.RunAsync(System.Func{System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.String,System.Object}}},Pulumi.StackOptions)"/> for more details.
            </summary>
            <param name="func">Callback that creates stack resources.</param>
            <returns>A dictionary of stack outputs.</returns>
        </member>
        <member name="M:Pulumi.Deployment.RunAsync(System.Func{System.Threading.Tasks.Task})">
            <summary>
            <see cref="M:Pulumi.Deployment.RunAsync(System.Func{System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.String,System.Object}}},Pulumi.StackOptions)"/> for more details.
            </summary>
            <param name="func">Callback that creates stack resources.</param>
        </member>
        <member name="M:Pulumi.Deployment.RunAsync(System.Func{System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.String,System.Object}}},Pulumi.StackOptions)">
             <summary>
             <see cref="M:Pulumi.Deployment.RunAsync(System.Func{System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.String,System.Object}}},Pulumi.StackOptions)"/> is an
             entry-point to a Pulumi application. .NET applications should perform all startup logic
             they need in their <c>Main</c> method and then end with:
             <para>
             <c>
             static Task&lt;int&gt; Main(string[] args)
             {
                 // program initialization code ...
            
                 return Deployment.Run(async () =>
                 {
                     // Code that creates resources.
                 });
             }
             </c>
             </para>
             Importantly: Cloud resources cannot be created outside of the lambda passed to any of the
             <see cref="M:Pulumi.Deployment.RunAsync(System.Action)"/> overloads.  Because cloud Resource construction is
             inherently asynchronous, the result of this function is a <see cref="T:System.Threading.Tasks.Task`1"/> which should
             then be returned or awaited.  This will ensure that any problems that are encountered during
             the running of the program are properly reported.  Failure to do this may lead to the
             program ending early before all resources are properly registered.
             <para/>
             The function passed to <see cref="M:Pulumi.Deployment.RunAsync(System.Func{System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.String,System.Object}}},Pulumi.StackOptions)"/>
             can optionally return an <see cref="T:System.Collections.Generic.IDictionary`2"/>.  The keys and values
             in this dictionary will become the outputs for the Pulumi Stack that is created.
             </summary>
             <param name="func">Callback that creates stack resources.</param>
             <param name="options">Stack options.</param>
        </member>
        <member name="M:Pulumi.Deployment.RunAsync``1">
             <summary>
             <see cref="M:Pulumi.Deployment.RunAsync``1"/> is an entry-point to a Pulumi
             application. .NET applications should perform all startup logic they
             need in their <c>Main</c> method and then end with:
             <para>
             <c>
             static Task&lt;int&gt; Main(string[] args) {// program
             initialization code ...
            
                 return Deployment.Run&lt;MyStack&gt;();}
             </c>
             </para>
             <para>
             Deployment will instantiate a new stack instance based on the type
             passed as TStack type parameter. Importantly, cloud resources cannot
             be created outside of the <see cref="P:Pulumi.Deployment.Stack"/> component.
             </para>
             <para>
             Because cloud Resource construction is inherently asynchronous, the
             result of this function is a <see cref="T:System.Threading.Tasks.Task`1"/> which should then
             be returned or awaited.  This will ensure that any problems that are
             encountered during the running of the program are properly reported.
             Failure to do this may lead to the program ending early before all
             resources are properly registered.
             </para>
             </summary>
        </member>
        <member name="M:Pulumi.Deployment.RunAsync``1(System.IServiceProvider)">
             <summary>
             <see cref="M:Pulumi.Deployment.RunAsync``1"/> is an entry-point to a Pulumi
             application. .NET applications should perform all startup logic they
             need in their <c>Main</c> method and then end with:
             <para>
             <c>
             static Task&lt;int&gt; Main(string[] args) {// program
             initialization code ...
            
                 return Deployment.Run&lt;MyStack&gt;(serviceProvider);}
             </c>
             </para>
             <para>
             Deployment will instantiate a new stack instance based on the type
             passed as TStack type parameter using the serviceProvider.
             Importantly, cloud resources cannot be created outside of the
             <see cref="P:Pulumi.Deployment.Stack"/> component.
             </para>
             <para>
             Because cloud Resource construction is inherently asynchronous, the
             result of this function is a <see cref="T:System.Threading.Tasks.Task`1"/> which should then
             be returned or awaited.  This will ensure that any problems that are
             encountered during the running of the program are properly reported.
             Failure to do this may lead to the program ending early before all
             resources are properly registered.
             </para>
             </summary>
        </member>
        <member name="M:Pulumi.Deployment.TestWithServiceProviderAsync``1(Pulumi.Testing.IMocks,System.IServiceProvider,Pulumi.Testing.TestOptions)">
            <summary>
            Entry point to test a Pulumi application. Deployment will
            instantiate a new stack instance based on the type passed as TStack
            type parameter using the given service provider. This method creates
            no real resources.
            Note: Currently, unit tests that call
            <see cref="M:Pulumi.Deployment.TestWithServiceProviderAsync``1(Pulumi.Testing.IMocks,System.IServiceProvider,Pulumi.Testing.TestOptions)"/>
            must run serially; parallel execution is not supported.
            </summary>
            <param name="mocks">Hooks to mock the engine calls.</param>
            <param name="serviceProvider"></param>
            <param name="options">Optional settings for the test run.</param>
            <typeparam name="TStack">The type of the stack to test.</typeparam>
            <returns>Test result containing created resources and errors, if any.</returns>
        </member>
        <member name="M:Pulumi.Deployment.TestAsync``1(Pulumi.Testing.IMocks,Pulumi.Testing.TestOptions)">
            <summary>
            Entry point to test a Pulumi application. Deployment will
            instantiate a new stack instance based on the type passed as TStack
            type parameter. This method creates no real resources.
            Note: Currently, unit tests that call <see cref="M:Pulumi.Deployment.TestAsync``1(Pulumi.Testing.IMocks,Pulumi.Testing.TestOptions)"/>
            must run serially; parallel execution is not supported.
            </summary>
            <param name="mocks">Hooks to mock the engine calls.</param>
            <param name="options">Optional settings for the test run.</param>
            <typeparam name="TStack">The type of the stack to test.</typeparam>
            <returns>Test result containing created resources and errors, if any.</returns>
        </member>
        <member name="M:Pulumi.Deployment.TestResults(System.Collections.Immutable.ImmutableArray{Pulumi.Resource})">
             <summary>
             Used inside TestAsync overloads where users have a function that creates resources
             in which case an internal TestStack is used to create the resources.
            
             This function takes the created resources from the TestStack and filters it out of the created resources
             (since it is internal) and obtains the outputs returned, if any from that TestStack. 
             </summary>
             <param name="resources">The created resources from TestAsync</param>
             <returns>Resources and outputs</returns>
        </member>
        <member name="M:Pulumi.Deployment.TestAsync(Pulumi.Testing.IMocks,Pulumi.Testing.TestOptions,System.Func{System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.String,System.Object}}})">
            <summary>
            Entry point to test a Pulumi application. Deployment will
            run the provided function that creates resources but doesn't actually deploy them
            Note: Currently, unit tests that call this function 
            must run serially; parallel execution is not supported.
            </summary>
            <param name="testMocks">Hooks to mock the engine calls.</param>
            <param name="testOptions">Optional settings for the test run.</param>
            <param name="createResources">The function which creates resources and returns outputs.</param>
            <returns>Test result containing created resources and outputs, if any.</returns>
        </member>
        <member name="M:Pulumi.Deployment.TestAsync(Pulumi.Testing.IMocks,Pulumi.Testing.TestOptions,System.Func{System.Collections.Generic.IDictionary{System.String,System.Object}})">
            <summary>
            Entry point to test a Pulumi application. Deployment will
            run the provided function that creates resources but doesn't actually deploy them
            Note: Currently, unit tests that call this function 
            must run serially; parallel execution is not supported.
            </summary>
            <param name="testMocks">Hooks to mock the engine calls.</param>
            <param name="testOptions">Optional settings for the test run.</param>
            <param name="createResources">The function which creates resources and returns outputs.</param>
            <returns>Test result containing created resources and outputs, if any.</returns>
        </member>
        <member name="M:Pulumi.Deployment.TestAsync(Pulumi.Testing.IMocks,Pulumi.Testing.TestOptions,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Entry point to test a Pulumi application. Deployment will
            run the provided function that creates resources but doesn't actually deploy them
            Note: Currently, unit tests that call this function 
            must run serially; parallel execution is not supported.
            </summary>
            <param name="testMocks">Hooks to mock the engine calls.</param>
            <param name="testOptions">Optional settings for the test run.</param>
            <param name="createResources">The function which creates resources and returns outputs.</param>
            <returns>Test result containing created resources and outputs, if any.</returns>
        </member>
        <member name="M:Pulumi.Deployment.TestAsync(Pulumi.Testing.IMocks,Pulumi.Testing.TestOptions,System.Action)">
            <summary>
            Entry point to test a Pulumi application. Deployment will
            run the provided function that creates resources but doesn't actually deploy them
            Note: Currently, unit tests that call this function 
            must run serially; parallel execution is not supported.
            </summary>
            <param name="testMocks">Hooks to mock the engine calls.</param>
            <param name="testOptions">Optional settings for the test run.</param>
            <param name="createResources">The function which creates resources and returns outputs.</param>
            <returns>Test result containing created resources and outputs, if any.</returns>
        </member>
        <member name="M:Pulumi.Deployment.TryTestAsync(Pulumi.Testing.IMocks,System.Func{Pulumi.IRunner,System.Threading.Tasks.Task{System.Int32}},Pulumi.Testing.TestOptions)">
            <summary>
            Like `TestAsync`, but instead of throwing the errors
            detected in the engine, returns them in the result tuple.
            This enables tests to observe partially constructed
            `Resources` vector in presence of deliberate errors.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.SerializeResourcePropertiesAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            <see cref="M:Pulumi.Deployment.SerializeResourcePropertiesAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Boolean)"/> walks the props object passed in,
            awaiting all interior promises besides those for <see cref="P:Pulumi.Resource.Urn"/> and <see
            cref="P:Pulumi.CustomResource.Id"/>, creating a reasonable POCO object that can be remoted over
            to registerResource.
            </summary>
        </member>
        <member name="M:Pulumi.Deployment.SerializeFilteredPropertiesAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Predicate{System.String},System.Boolean,System.Boolean)">
             <summary>
             <see cref="M:Pulumi.Deployment.SerializeFilteredPropertiesAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Predicate{System.String},System.Boolean,System.Boolean)"/> walks the props object passed in,
             awaiting all interior promises for properties with keys that match the provided filter,
             creating a reasonable POCO object that can be remoted over to registerResource.
             </summary>
            
             <param name="label">label</param>
             <param name="args">args</param>
             <param name="acceptKey">acceptKey</param>
             <param name="keepResources">keepResources</param>
             <param name="keepOutputValues">
             Specifies if we should marshal output values. It is the callers
             responsibility to ensure that the monitor supports the OutputValues
             feature.
             </param>
        </member>
        <member name="M:Pulumi.Deployment.SerializeFilteredPropertiesRawAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Predicate{System.String},System.Boolean,System.Boolean)">
            <summary>
            Acts as `SerializeFilteredPropertiesAsync` without the
            last step of encoding the value into a Protobuf form.
            </summary>
        </member>
        <member name="T:Pulumi.DeploymentInstance">
            <summary>
            Metadata of the deployment that is currently running. Accessible via <see cref="P:Pulumi.Deployment.Instance"/>.
            </summary>
        </member>
        <member name="P:Pulumi.DeploymentInstance.StackName">
            <summary>
            Returns the current stack name.
            </summary>
        </member>
        <member name="P:Pulumi.DeploymentInstance.ProjectName">
            <summary>
            Returns the current project name.
            </summary>
        </member>
        <member name="P:Pulumi.DeploymentInstance.OrganizationName">
            <summary>
            Returns the current organization name.
            </summary>
        </member>
        <member name="P:Pulumi.DeploymentInstance.IsDryRun">
            <summary>
            Whether or not the application is currently being previewed or actually applied.
            </summary>
        </member>
        <member name="M:Pulumi.DeploymentInstance.Invoke``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)">
            <summary>
            Dynamically invokes the function '<paramref name="token"/>', which is offered by a
            provider plugin.
            <para/>
            The result of <see cref="M:Pulumi.DeploymentInstance.Invoke``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/> will be a <see cref="T:Pulumi.Output"/> resolved to the
            result value of the provider plugin.
            <para/>
            Similar to the earlier <see cref="M:Pulumi.DeploymentInstance.InvokeAsync(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/>, but supports passing input values
            and returns an Output value.
            <para/>
            The <paramref name="args"/> inputs can be a bag of computed values(including, `T`s,
            <see cref="T:System.Threading.Tasks.Task`1"/>s, <see cref="T:Pulumi.Output`1"/>s etc.).
            </summary>
        </member>
        <member name="M:Pulumi.DeploymentInstance.InvokeSingle``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)">
            <summary>
            Dynamically invokes the function '<paramref name="token"/>', which is offered by a
            provider plugin.
            <para/>
            The result of <see cref="M:Pulumi.DeploymentInstance.InvokeSingle``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/> will be a <see cref="T:Pulumi.Output"/> resolved to the
            result value of the provider plugin.
            <para/>
            Similar to the earlier <see cref="M:Pulumi.DeploymentInstance.InvokeSingleAsync``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/>, but supports passing input values
            and returns an Output value.
            <para/>
            The <paramref name="args"/> inputs can be a bag of computed values(including, `T`s,
            <see cref="T:System.Threading.Tasks.Task`1"/>s, <see cref="T:Pulumi.Output`1"/>s etc.).
            </summary>
        </member>
        <member name="M:Pulumi.DeploymentInstance.InvokeAsync``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)">
            <summary>
            Dynamically invokes the function '<paramref name="token"/>', which is offered by a
            provider plugin.
            <para/>
            The result of <see cref="M:Pulumi.DeploymentInstance.InvokeAsync(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/> will be a <see cref="T:System.Threading.Tasks.Task"/> resolved to the
            result value of the provider plugin.
            <para/>
            The <paramref name="args"/> inputs can be a bag of computed values(including, `T`s,
            <see cref="T:System.Threading.Tasks.Task`1"/>s, <see cref="T:Pulumi.Output`1"/>s etc.).
            </summary>
        </member>
        <member name="M:Pulumi.DeploymentInstance.InvokeSingleAsync``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)">
            <summary>
            Dynamically invokes the function '<paramref name="token"/>', which is offered by a
            provider plugin.
            <para/>
            The result of <see cref="M:Pulumi.DeploymentInstance.InvokeSingleAsync``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/> will be a <see cref="T:System.Threading.Tasks.Task"/> resolved to the
            result value of the provider plugin which is expected to be a dictionary with single value.
            <para/>
            The <paramref name="args"/> inputs can be a bag of computed values(including, `T`s,
            <see cref="T:System.Threading.Tasks.Task`1"/>s, <see cref="T:Pulumi.Output`1"/>s etc.).
            </summary>
        </member>
        <member name="M:Pulumi.DeploymentInstance.InvokeAsync(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)">
            <summary>
            Same as <see cref="M:Pulumi.DeploymentInstance.InvokeAsync``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/>, however the
            return value is ignored.
            </summary>
        </member>
        <member name="M:Pulumi.DeploymentInstance.Call``1(System.String,Pulumi.CallArgs,Pulumi.Resource,Pulumi.CallOptions)">
            <summary>
            Dynamically calls the function '<paramref name="token"/>', which is offered by a
            provider plugin.
            <para/>
            The result of <see cref="M:Pulumi.DeploymentInstance.Call``1(System.String,Pulumi.CallArgs,Pulumi.Resource,Pulumi.CallOptions)"/> will be a <see cref="T:Pulumi.Output`1"/> resolved to the
            result value of the provider plugin.
            <para/>
            The <paramref name="args"/> inputs can be a bag of computed values(including, `T`s,
            <see cref="T:System.Threading.Tasks.Task`1"/>s, <see cref="T:Pulumi.Output`1"/>s etc.).
            </summary>
        </member>
        <member name="M:Pulumi.DeploymentInstance.Call(System.String,Pulumi.CallArgs,Pulumi.Resource,Pulumi.CallOptions)">
            <summary>
            Same as <see cref="M:Pulumi.DeploymentInstance.Call``1(System.String,Pulumi.CallArgs,Pulumi.Resource,Pulumi.CallOptions)"/>, however the return value is ignored.
            </summary>
        </member>
        <member name="P:Pulumi.IDeployment.StackName">
            <summary>
            Returns the current stack name.
            </summary>
        </member>
        <member name="P:Pulumi.IDeployment.ProjectName">
            <summary>
            Returns the current project name.
            </summary>
        </member>
        <member name="P:Pulumi.IDeployment.OrganizationName">
            <summary>
            Returns the current organization name.
            </summary>
        </member>
        <member name="P:Pulumi.IDeployment.IsDryRun">
            <summary>
            Whether or not the application is currently being previewed or actually applied.
            </summary>
        </member>
        <member name="M:Pulumi.IDeployment.InvokeAsync``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)">
            <summary>
            Dynamically invokes the function '<paramref name="token"/>', which is offered by a
            provider plugin.
            <para/>
            The result of <see cref="M:Pulumi.IDeployment.InvokeAsync(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/> will be a <see cref="T:System.Threading.Tasks.Task"/> resolved to the
            result value of the provider plugin.
            <para/>
            The <paramref name="args"/> inputs can be a bag of computed values(including, `T`s,
            <see cref="T:System.Threading.Tasks.Task`1"/>s, <see cref="T:Pulumi.Output`1"/>s etc.).
            </summary>
        </member>
        <member name="M:Pulumi.IDeployment.InvokeSingleAsync``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)">
            <summary>
            Dynamically invokes the function '<paramref name="token"/>', which is offered by a
            provider plugin.
            <para/>
            The result of <see cref="M:Pulumi.IDeployment.InvokeSingleAsync``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/> will be a <see cref="T:System.Threading.Tasks.Task"/> resolved to the
            result value of the provider plugin that returns a bag of properties with a single value that is returned.
            <para/>
            The <paramref name="args"/> inputs can be a bag of computed values(including, `T`s,
            <see cref="T:System.Threading.Tasks.Task`1"/>s, <see cref="T:Pulumi.Output`1"/>s etc.).
            </summary>
        </member>
        <member name="M:Pulumi.IDeployment.Invoke``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)">
            <summary>
            Dynamically invokes the function '<paramref name="token"/>', which is offered by a
            provider plugin.
            <para/>
            The result of <see cref="M:Pulumi.IDeployment.Invoke``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/> will be a <see cref="T:Pulumi.Output"/> resolved to the
            result value of the provider plugin.
            <para/>
            The <paramref name="args"/> inputs can be a bag of computed values(including, `T`s,
            <see cref="T:System.Threading.Tasks.Task`1"/>s, <see cref="T:Pulumi.Output`1"/>s etc.).
            </summary>
        </member>
        <member name="M:Pulumi.IDeployment.InvokeSingle``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)">
            <summary>
            Dynamically invokes the function '<paramref name="token"/>', which is offered by a
            provider plugin.
            <para/>
            The result of <see cref="M:Pulumi.IDeployment.InvokeSingle``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/> will be a <see cref="T:Pulumi.Output"/> resolved to the
            result value of the provider plugin that returns a bag of properties with a single value that is returned.
            <para/>
            The <paramref name="args"/> inputs can be a bag of computed values(including, `T`s,
            <see cref="T:System.Threading.Tasks.Task`1"/>s, <see cref="T:Pulumi.Output`1"/>s etc.).
            </summary>
        </member>
        <member name="M:Pulumi.IDeployment.InvokeAsync(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)">
            <summary>
            Same as <see cref="M:Pulumi.IDeployment.InvokeAsync``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/>, however the
            return value is ignored.
            </summary>
        </member>
        <member name="M:Pulumi.IDeployment.Call``1(System.String,Pulumi.CallArgs,Pulumi.Resource,Pulumi.CallOptions)">
            <summary>
            Dynamically calls the function '<paramref name="token"/>', which is offered by a
            provider plugin. <see cref="M:Pulumi.IDeployment.Call``1(System.String,Pulumi.CallArgs,Pulumi.Resource,Pulumi.CallOptions)"/> returns immediately while the operation takes
            place asynchronously in the background, similar to Resource constructors.
            <para/>
            The result of <see cref="M:Pulumi.IDeployment.Call``1(System.String,Pulumi.CallArgs,Pulumi.Resource,Pulumi.CallOptions)"/> will be a <see cref="T:Pulumi.Output`1"/> resolved to the
            result value of the provider plugin.
            <para/>
            The <paramref name="args"/> inputs can be a bag of computed values(including, `T`s,
            <see cref="T:System.Threading.Tasks.Task`1"/>s, <see cref="T:Pulumi.Output`1"/>s etc.).
            </summary>
        </member>
        <member name="M:Pulumi.IDeployment.Call(System.String,Pulumi.CallArgs,Pulumi.Resource,Pulumi.CallOptions)">
            <summary>
            Same as <see cref="M:Pulumi.IDeployment.Call``1(System.String,Pulumi.CallArgs,Pulumi.Resource,Pulumi.CallOptions)"/>, however the return value is ignored.
            </summary>
        </member>
        <member name="T:Pulumi.InvokeOptions">
            <summary>
            Options to help control the behavior of <see cref="M:Pulumi.IDeployment.InvokeAsync``1(System.String,Pulumi.InvokeArgs,Pulumi.InvokeOptions)"/>.
            </summary>
        </member>
        <member name="P:Pulumi.InvokeOptions.Parent">
            <summary>
            An optional parent to use for default options for this invoke (e.g. the default provider
            to use).
            </summary>
        </member>
        <member name="P:Pulumi.InvokeOptions.Provider">
            <summary>
            An optional provider to use for this invocation. If no provider is supplied, the default
            provider for the invoked function's package will be used.
            </summary>
        </member>
        <member name="P:Pulumi.InvokeOptions.Version">
            <summary>
            An optional version, corresponding to the version of the provider plugin that should be
            used when performing this invoke.
            </summary>
        </member>
        <member name="P:Pulumi.InvokeOptions.PluginDownloadURL">
            <summary>
            An optional URL, corresponding to the download URL of the provider plugin that should be
            used when performing this invoke.
            </summary>
        </member>
        <member name="T:Pulumi.TaskMonitoringHelper">
            <summary>
            Monitors dynamically added tasks for completion. Enters IDLE
            state when all monitored tasks finish. Allows awaiting next
            IDLE state or an exception, whichever comes first.
            Thread-safe.
            </summary>
        </member>
        <member name="M:Pulumi.TaskMonitoringHelper.AddTask(System.Threading.Tasks.Task)">
            <summary>
            Starts monitoring the given task.
            </summary>
        </member>
        <member name="M:Pulumi.TaskMonitoringHelper.AwaitIdleOrFirstExceptionAsync">
             <summary>
             Awaits next IDLE state or an exception, whichever comes
             first. Several exceptions may be returned if they have
             been observed prior to this call.
            
             IDLE state is represented as an empty sequence in the result.
             </summary>
        </member>
        <member name="T:Pulumi.LogException">
            <summary>
            Special exception we throw if we had a problem actually logging a message to the engine
            error rpc endpoint. In this case, we have no choice but to tear ourselves down reporting
            whatever we can to the console instead.
            </summary>
        </member>
        <member name="T:Pulumi.ResourceException">
            <summary>
            ResourceException can be used for terminating a program abruptly, specifically associating the
            problem with a Resource.Depending on the nature of the problem, clients can choose whether
            or not a call stack should be returned as well. This should be very rare, and would only
            indicate no usefulness of presenting that stack to the user.
            </summary>
        </member>
        <member name="T:Pulumi.RunException">
            <summary>
            RunException can be used for terminating a program abruptly, but resulting in a clean exit
            rather than the usual verbose unhandled error logic which emits the source program text and
            complete stack trace.  This type should be rarely used.  Ideally <see
            cref="T:Pulumi.ResourceException"/> should always be used so that as many errors as possible can be
            associated with a Resource.
            </summary>
        </member>
        <member name="T:Pulumi.Log">
            <summary>
            Logging functions that can be called from a .NET application that will be logged to the
            <c>Pulumi</c> log stream.  These events will be printed in the terminal while the Pulumi app
            runs, and will be available from the Web console afterwards.
            </summary>
        </member>
        <member name="M:Pulumi.Log.Debug(System.String,Pulumi.Resource,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Logs a debug-level message that is generally hidden from end-users.
            </summary>
        </member>
        <member name="M:Pulumi.Log.Info(System.String,Pulumi.Resource,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Logs an informational message that is generally printed to stdout during resource
            operations.
            </summary>
        </member>
        <member name="M:Pulumi.Log.Warn(System.String,Pulumi.Resource,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Logs a warning to indicate that something went wrong, but not catastrophically so.
            </summary>
        </member>
        <member name="M:Pulumi.Log.Error(System.String,Pulumi.Resource,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Logs a fatal condition. Consider raising an exception
            after calling Error to stop the Pulumi program.
            </summary>
        </member>
        <member name="M:Pulumi.Log.Exception(System.Exception,Pulumi.Resource,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Logs an exception. Consider raising the exception after
            calling this method to stop the Pulumi program.
            </summary>
        </member>
        <member name="T:Pulumi.CallArgs">
            <summary>
            Base type for all call argument classes.
            </summary>
        </member>
        <member name="T:Pulumi.ComponentResource">
            <summary>
            A <see cref="T:Pulumi.Resource"/> that aggregates one or more other child resources into a higher
            level abstraction. The component resource itself is a resource, but does not require custom
            CRUD operations for provisioning.
            </summary>
        </member>
        <member name="M:Pulumi.ComponentResource.#ctor(System.String,System.String,Pulumi.ComponentResourceOptions)">
            <summary>
            Creates and registers a new component resource.  <paramref name="type"/> is the fully
            qualified type token and <paramref name="name"/> is the "name" part to use in creating a
            stable and globally unique URN for the object. <c>options.parent</c> is the optional parent
            for this component, and [options.dependsOn] is an optional list of other resources that
            this resource depends on, controlling the order in which we perform resource operations.
            </summary>
            <param name="type">The type of the resource.</param>
            <param name="name">The unique name of the resource.</param>
            <param name="options">A bag of options that control this resource's behavior.</param>
        </member>
        <member name="M:Pulumi.ComponentResource.#ctor(System.String,System.String,Pulumi.ResourceArgs,Pulumi.ComponentResourceOptions,System.Boolean)">
            <summary>
            Creates and registers a new component resource.  <paramref name="type"/> is the fully
            qualified type token and <paramref name="name"/> is the "name" part to use in creating a
            stable and globally unique URN for the object. <c>options.parent</c> is the optional parent
            for this component, and [options.dependsOn] is an optional list of other resources that
            this resource depends on, controlling the order in which we perform resource operations.
            </summary>
            <param name="type">The type of the resource.</param>
            <param name="name">The unique name of the resource.</param>
            <param name="args">The arguments to use to populate the new resource.</param>
            <param name="options">A bag of options that control this resource's behavior.</param>
            <param name="remote">True if this is a remote component resource.</param>
        </member>
        <member name="M:Pulumi.ComponentResource.RegisterOutputs">
            <summary>
            RegisterOutputs registers synthetic outputs that a component has initialized, usually by
            allocating other child sub-resources and propagating their resulting property values.
            ComponentResources should always call this at the end of their constructor to indicate
            that they are done creating child resources.  While not strictly necessary, this helps
            the experience by ensuring the UI transitions the ComponentResource to the 'complete'
            state as quickly as possible (instead of waiting until the entire application completes).
            </summary>
        </member>
        <member name="T:Pulumi.ComponentResourceOptions">
            <summary>
            A bag of optional settings that control a <see cref="T:Pulumi.ComponentResource"/>'s behavior.
            </summary>
        </member>
        <member name="P:Pulumi.ComponentResourceOptions.Providers">
             <summary>
             An optional set of providers to use for child resources.
            
             Note: do not provide both <see cref="P:Pulumi.ResourceOptions.Provider"/> and <see
             cref="P:Pulumi.ComponentResourceOptions.Providers"/>.
             </summary>
        </member>
        <member name="M:Pulumi.ComponentResourceOptions.Merge(Pulumi.ComponentResourceOptions,Pulumi.ComponentResourceOptions)">
            <summary>
            Takes two <see cref="T:Pulumi.ComponentResourceOptions"/> values and produces a new
            <see cref="T:Pulumi.ComponentResourceOptions"/> with the respective
            properties of <paramref name="options2"/> merged over the same properties in <paramref
            name="options1"/>. The original options objects will be unchanged.
            <para/>
            A new instance will always be returned.
            <para/>
            Conceptually property merging follows these basic rules:
            <list type="number">
            <item><description>
            If the property is a collection, the final value will be a collection containing the
            values from each options object.
            </description></item>
            <item><description>
            Simple scalar values from <paramref name="options2"/> (i.e. <see cref="T:System.String"/>s,
            <see cref="T:System.Int32"/>s, <see cref="T:System.Boolean"/>s) will replace the values of <paramref
            name="options1"/>.
            </description></item>
            <item><description>
            <see langword="null"/> values in <paramref name="options2"/> will be ignored.
            </description></item>
            <item><description>
            Providers is a special case. Only one value per package will be in the resulting list.
            Priority is given to values in <paramref name="options2"/>. If multiple providers for
            the same package are present, later providers take priority.
            </description></item>
            </list>
            </summary>
        </member>
        <member name="T:Pulumi.CustomResource">
            <summary>
            CustomResource is a resource whose create, read, update, and delete (CRUD) operations are
            managed by performing external operations on some physical entity. The engine understands
            how to diff and perform partial updates of them, and these CRUD operations are implemented
            in a dynamically loaded plugin for the defining package.
            </summary>
        </member>
        <member name="P:Pulumi.CustomResource.Id">
            <summary>
            Id is the provider-assigned unique ID for this managed resource.  It is set during
            deployments and may be missing (unknown) during planning phases.
            </summary>
        </member>
        <member name="M:Pulumi.CustomResource.#ctor(System.String,System.String,Pulumi.ResourceArgs,Pulumi.CustomResourceOptions)">
            <summary>
            Creates and registers a new managed resource.  <paramref name="type"/> is the fully
            qualified type token and <paramref name="name"/> is the "name" part to use in creating a
            stable and globally unique URN for the object.  <see cref="P:Pulumi.ResourceOptions.DependsOn"/>
            is an optional list of other resources that this resource depends on, controlling the
            order in which we perform resource operations.  Creating an instance does not necessarily
            perform a create on the physical entity which it represents, and instead, this is
            dependent upon the diffing of the new goal state compared to the current known resource
            state.
            </summary>
            <param name="type">The type of the resource.</param>
            <param name="name">The unique name of the resource.</param>
            <param name="args">The arguments to use to populate the new resource.</param>
            <param name="options">A bag of options that control this resource's behavior.</param>
        </member>
        <member name="M:Pulumi.CustomResource.#ctor(System.String,System.String,Pulumi.ResourceArgs,Pulumi.CustomResourceOptions,System.Boolean)">
            <summary>
            Creates and registers a new managed resource.  <paramref name="type"/> is the fully
            qualified type token and <paramref name="name"/> is the "name" part to use in creating a
            stable and globally unique URN for the object.  <see cref="P:Pulumi.ResourceOptions.DependsOn"/>
            is an optional list of other resources that this resource depends on, controlling the
            order in which we perform resource operations.  Creating an instance does not necessarily
            perform a create on the physical entity which it represents, and instead, this is
            dependent upon the diffing of the new goal state compared to the current known resource
            state.
            </summary>
            <param name="type">The type of the resource.</param>
            <param name="name">The unique name of the resource.</param>
            <param name="args">The arguments to use to populate the new resource.</param>
            <param name="options">A bag of options that control this resource's behavior.</param>
            <param name="dependency">True if this is a synthetic resource used internally for dependency tracking.</param>
        </member>
        <member name="T:Pulumi.CustomResourceOptions">
            <summary>
            <see cref="T:Pulumi.CustomResourceOptions"/> is a bag of optional settings that control a <see
            cref="T:Pulumi.CustomResource"/>'s behavior.
            </summary>
        </member>
        <member name="P:Pulumi.CustomResourceOptions.DeleteBeforeReplace">
            <summary>
            When set to <c>true</c>, indicates that this resource should be deleted before its
            replacement is created when replacement is necessary.
            </summary>
        </member>
        <member name="P:Pulumi.CustomResourceOptions.AdditionalSecretOutputs">
            <summary>
            The names of outputs for this resource that should be treated as secrets. This augments
            the list that the resource provider and pulumi engine already determine based on inputs
            to your resource. It can be used to mark certain outputs as a secrets on a per resource
            basis.
            </summary>
        </member>
        <member name="P:Pulumi.CustomResourceOptions.ImportId">
            <summary>
            When provided with a resource ID, import indicates that this resource's provider should
            import its state from the cloud resource with the given ID.The inputs to the resource's
            constructor must align with the resource's current state.Once a resource has been
            imported, the import property must be removed from the resource's options.
            </summary>
        </member>
        <member name="M:Pulumi.CustomResourceOptions.Merge(Pulumi.CustomResourceOptions,Pulumi.CustomResourceOptions)">
            <summary>
            Takes two <see cref="T:Pulumi.CustomResourceOptions"/> values and produces a new
            <see cref="T:Pulumi.CustomResourceOptions"/> with the respective
            properties of <paramref name="options2"/> merged over the same properties in <paramref
            name="options1"/>. The original options objects will be unchanged.
            <para/>
            A new instance will always be returned.
            <para/>
            Conceptually property merging follows these basic rules:
            <list type="number">
            <item><description>
            If the property is a collection, the final value will be a collection containing the
            values from each options object.
            </description></item>
            <item><description>
            Simple scalar values from <paramref name="options2"/> (i.e. <see cref="T:System.String"/>s,
            <see cref="T:System.Int32"/>s, <see cref="T:System.Boolean"/>s) will replace the values of <paramref
            name="options1"/>.
            </description></item>
            <item><description>
            <see langword="null"/> values in <paramref name="options2"/> will be ignored.
            </description></item>
            </list>
            </summary>
        </member>
        <member name="T:Pulumi.CustomTimeouts">
            <summary>
            Optional timeouts to supply in <see cref="P:Pulumi.ResourceOptions.CustomTimeouts"/>.
            </summary>
        </member>
        <member name="P:Pulumi.CustomTimeouts.Create">
            <summary>
            The optional create timeout.
            </summary>
        </member>
        <member name="P:Pulumi.CustomTimeouts.Update">
            <summary>
            The optional update timeout.
            </summary>
        </member>
        <member name="P:Pulumi.CustomTimeouts.Delete">
            <summary>
            The optional delete timeout.
            </summary>
        </member>
        <member name="T:Pulumi.DependencyProviderResource">
            <summary>
            <see cref="T:Pulumi.DependencyProviderResource"/> is a <see cref="T:Pulumi.Resource"/> that is used by the provider SDK as a
            stand-in for a provider that is only used for its reference. Its only valid properties are its URN and ID.
            </summary>
        </member>
        <member name="T:Pulumi.DependencyResource">
            <summary>
            <see cref="T:Pulumi.DependencyResource"/> is a <see cref="T:Pulumi.Resource"/> that is used to indicate that an
            <see cref="T:Pulumi.Output"/> has a dependency on a particular resource. These resources are only created when dealing
            with remote component resources.
            </summary>
        </member>
        <member name="T:Pulumi.DictionaryInvokeArgs">
            <summary>
            A special type of <see cref="T:Pulumi.InvokeArgs"/> with resource inputs represented
            as a loosely-typed dictionary of objects. Normally,
            <see cref="T:Pulumi.DictionaryInvokeArgs"/> should not be used by resource providers
            since it's too low-level and provides low safety. Its target scenario are
            resources with a very dynamic shape of inputs.
            The input dictionary may only contain objects that are serializable by
            Pulumi, i.e only the following types (or pulumi.Output of those types) are allowed:
            <list type="bullet">
            <item><description>Primitive types: <see cref="T:System.String"/>, <see cref="T:System.Double"/>,
            <see cref="T:System.Int32"/>, <see cref="T:System.Boolean"/></description></item>
            <item><description><see cref="T:Pulumi.Asset"/>, <see cref="T:Pulumi.Archive"/>, or
            <see cref="T:Pulumi.AssetArchive"/></description></item>
            <item><description><see cref="T:System.Text.Json.JsonElement"/>
            </description></item>
            <item><description>Generic collections of the above:
            <see cref="T:System.Collections.Immutable.ImmutableArray`1"/>, <see cref="T:System.Collections.Immutable.ImmutableDictionary`2"/>
            with <see cref="T:System.String"/> keys, <see cref="T:Pulumi.Union`2"/></description></item>
            </list>
            </summary>
        </member>
        <member name="M:Pulumi.DictionaryInvokeArgs.#ctor(System.Collections.Immutable.ImmutableDictionary{System.String,System.Object})">
            <summary>
            Constructs an instance of <see cref="T:Pulumi.DictionaryInvokeArgs"/> from
            a dictionary of input objects.
            </summary>
            <param name="dictionary">The input dictionary. It may only contain objects
            that are serializable by Pulumi.</param>
        </member>
        <member name="T:Pulumi.DictionaryResourceArgs">
            <summary>
            A special type of <see cref="T:Pulumi.ResourceArgs"/> with resource inputs represented
            as a loosely-typed dictionary of objects. Normally,
            <see cref="T:Pulumi.DictionaryResourceArgs"/> should not be used by resource providers
            since it's too low-level and provides low safety. Its target scenario are
            resources with a very dynamic shape of inputs.
            The input dictionary may only contain objects that are serializable by
            Pulumi, i.e only the following types (or pulumi.Output of those types) are allowed:
            <list type="bullet">
            <item><description>Primitive types: <see cref="T:System.String"/>, <see cref="T:System.Double"/>,
            <see cref="T:System.Int32"/>, <see cref="T:System.Boolean"/></description></item>
            <item><description><see cref="T:Pulumi.Asset"/>, <see cref="T:Pulumi.Archive"/>, or
            <see cref="T:Pulumi.AssetArchive"/></description></item>
            <item><description><see cref="T:System.Text.Json.JsonElement"/>
            </description></item>
            <item><description>Generic collections of the above:
            <see cref="T:System.Collections.Immutable.ImmutableArray`1"/>, <see cref="T:System.Collections.Immutable.ImmutableDictionary`2"/>
            with <see cref="T:System.String"/> keys, <see cref="T:Pulumi.Union`2"/></description></item>
            </list>
            </summary>
        </member>
        <member name="M:Pulumi.DictionaryResourceArgs.#ctor(System.Collections.Immutable.ImmutableDictionary{System.String,System.Object})">
            <summary>
            Constructs an instance of <see cref="T:Pulumi.DictionaryResourceArgs"/> from
            a dictionary of input objects.
            </summary>
            <param name="dictionary">The input dictionary. It may only contain objects
            that are serializable by Pulumi.</param>
        </member>
        <member name="T:Pulumi.InputArgs">
            <summary>
            Base type for all input argument classes.
            </summary>
        </member>
        <member name="T:Pulumi.InvokeArgs">
            <summary>
            Base type for all invoke argument classes.
            </summary>
        </member>
        <member name="T:Pulumi.ProviderResource">
            <summary>
            <see cref="T:Pulumi.ProviderResource"/> is a <see cref="T:Pulumi.Resource"/> that implements CRUD operations
            for other custom resources. These resources are managed similarly to other resources,
            including the usual diffing and update semantics.
            </summary>
        </member>
        <member name="M:Pulumi.ProviderResource.#ctor(System.String,System.String,Pulumi.ResourceArgs,Pulumi.CustomResourceOptions)">
            <summary>
            Creates and registers a new provider resource for a particular package.
            </summary>
            <param name="package">The package associated with this provider.</param>
            <param name="name">The unique name of the provider.</param>
            <param name="args">The configuration to use for this provider.</param>
            <param name="options">A bag of options that control this provider's behavior.</param>
        </member>
        <member name="M:Pulumi.ProviderResource.#ctor(System.String,System.String,Pulumi.ResourceArgs,Pulumi.CustomResourceOptions,System.Boolean)">
            <summary>
            Creates and registers a new provider resource for a particular package.
            </summary>
            <param name="package">The package associated with this provider.</param>
            <param name="name">The unique name of the provider.</param>
            <param name="args">The configuration to use for this provider.</param>
            <param name="options">A bag of options that control this provider's behavior.</param>
            <param name="dependency">True if this is a synthetic resource used internally for dependency tracking.</param>
        </member>
        <member name="T:Pulumi.Resource">
            <summary>
            Resource represents a class whose CRUD operations are implemented by a provider plugin.
            </summary>
        </member>
        <member name="P:Pulumi.Resource.ChildResources">
             <summary>
             The child resources of this resource.  We use these (only from a ComponentResource) to
             allow code to dependOn a ComponentResource and have that effectively mean that it is
             depending on all the CustomResource children of that component.
            
             Important!  We only walk through ComponentResources.They're the only resources that
             serve as an aggregation of other primitive(i.e.custom) resources.While a custom resource
             can be a parent of other resources, we don't want to ever depend on those child
             resource.  If we do, it's simple to end up in a situation where we end up depending on a
             child resource that has a data cycle dependency due to the data passed into it. An
             example of how this would be bad is:
            
             <c>
                 var c1 = new CustomResource("c1");
                 var c2 = new CustomResource("c2", { parentId = c1.id }, { parent = c1 });
                 var c3 = new CustomResource("c3", { parentId = c1.id }, { parent = c1 });
             </c>
            
             The problem here is that 'c2' has a data dependency on 'c1'.  If it tries to wait on
             'c1' it will walk to the children and wait on them.This will mean it will wait on 'c3'.
             But 'c3' will be waiting in the same manner on 'c2', and a cycle forms. This normally
             does not happen with ComponentResources as they do not have any data flowing into
             them.The only way you would be able to have a problem is if you had this sort of coding
             pattern:
            
             <c>
                 var c1 = new ComponentResource("c1");
                 var c2 = new CustomResource("c2", { parentId = c1.urn }, { parent: c1 });
                 var c3 = new CustomResource("c3", { parentId = c1.urn }, { parent: c1 });
             </c>
            
             However, this would be pretty nonsensical as there is zero need for a custom resource to
             ever need to reference the urn of a component resource.  So it's acceptable if that sort
             of pattern failed in practice.
             </summary>
        </member>
        <member name="P:Pulumi.Resource.Urn">
            <summary>
            Urn is the stable logical URN used to distinctly address a resource, both before and
            after deployments.
            </summary>
        </member>
        <member name="F:Pulumi.Resource._protect">
            <summary>
            When set to true, protect ensures this resource cannot be deleted.
            </summary>
        </member>
        <member name="F:Pulumi.Resource._transformations">
            <summary>
            A collection of transformations to apply as part of resource registration.
            </summary>
        </member>
        <member name="F:Pulumi.Resource._aliases">
            <summary>
            A list of aliases applied to this resource.
            </summary>
        </member>
        <member name="M:Pulumi.Resource.GetResourceType">
            <summary>
            The type assigned to the resource at construction.
            </summary>
        </member>
        <member name="M:Pulumi.Resource.GetResourceName">
            <summary>
            The name assigned to the resource at construction.
            </summary>
        </member>
        <member name="F:Pulumi.Resource._providers">
            <summary>
            The set of providers to use for child resources. Keyed by package name (e.g. "aws").
            </summary>
        </member>
        <member name="F:Pulumi.Resource._provider">
            <summary>
            The specified provider or provider determined from the parent for custom resources.
            </summary>
        </member>
        <member name="F:Pulumi.Resource._version">
            <summary>
            The specified provider version.
            </summary>
        </member>
        <member name="F:Pulumi.Resource._pluginDownloadURL">
            <summary>
            The specified provider download URL.
            </summary>
        </member>
        <member name="M:Pulumi.Resource.#ctor(System.String,System.String,System.Boolean,Pulumi.ResourceArgs,Pulumi.ResourceOptions,System.Boolean,System.Boolean)">
            <summary>
            Creates and registers a new resource object.  <paramref name="type"/> is the fully
            qualified type token and <paramref name="name"/> is the "name" part to use in creating a
            stable and globally unique URN for the object. dependsOn is an optional list of other
            resources that this resource depends on, controlling the order in which we perform
            resource operations.
            </summary>
            <param name="type">The type of the resource.</param>
            <param name="name">The unique name of the resource.</param>
            <param name="custom">True to indicate that this is a custom resource, managed by a plugin.</param>
            <param name="args">The arguments to use to populate the new resource.</param>
            <param name="options">A bag of options that control this resource's behavior.</param>
            <param name="remote">True if this is a remote component resource.</param>
            <param name="dependency">True if this is a synthetic resource used internally for dependency tracking.</param>
        </member>
        <member name="M:Pulumi.Resource.GetProvider(System.String)">
            <summary>
            Fetches the provider for the given module member, if any.
            </summary>
        </member>
        <member name="T:Pulumi.ResourceArgs">
            <summary>
            Base type for all resource argument classes.
            </summary>
        </member>
        <member name="T:Pulumi.ResourceOptions">
            <summary>
            ResourceOptions is a bag of optional settings that control a resource's behavior.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.Id">
            <summary>
            An optional existing ID to load, rather than create.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.Parent">
            <summary>
            An optional parent resource to which this resource belongs.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.DependsOn">
            <summary>
            Optional additional explicit dependencies on other resources.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.Protect">
            <summary>
            When set to true, protect ensures this resource cannot be deleted.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.IgnoreChanges">
            <summary>
            Ignore changes to any of the specified properties.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.Version">
            <summary>
            An optional version, corresponding to the version of the provider plugin that should be
            used when operating on this resource. This version overrides the version information
            inferred from the current package and should rarely be used.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.Provider">
             <summary>
             An optional provider to use for this resource's CRUD operations. If no provider is
             supplied, the default provider for the resource's package will be used. The default
             provider is pulled from the parent's provider bag (see also
             ComponentResourceOptions.providers).
            
             If this is a <see cref="T:Pulumi.ComponentResourceOptions"/> do not provide both <see
             cref="P:Pulumi.ResourceOptions.Provider"/> and <see cref="P:Pulumi.ComponentResourceOptions.Providers"/>.
             </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.CustomTimeouts">
            <summary>
             An optional CustomTimeouts configuration block.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.ResourceTransformations">
            <summary>
            Optional list of transformations to apply to this resource during construction.The
            transformations are applied in order, and are applied prior to transformation applied to
            parents walking from the resource up to the stack.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.ResourceTransforms">
            <summary>
            Optional list of transforms to apply to this resource during construction.The transforms are applied in
            order, and are applied prior to transform applied to parents walking from the resource up to the stack.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.Aliases">
            <summary>
            An optional list of aliases to treat this resource as matching.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.Urn">
            <summary>
            The URN of a previously-registered resource of this type to read from the engine.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.ReplaceOnChanges">
            <summary>
            Changes to any of these property paths will force a replacement.  If this list
            includes `"*"`, changes to any properties will force a replacement.  Initialization
            errors from previous deployments will require replacement instead of update only if
            `"*"` is passed.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.PluginDownloadURL">
            <summary>
            An optional URL, corresponding to the url from which the provider plugin that should be
            used when operating on this resource is downloaded from. This URL overrides the download URL
            inferred from the current package and should rarely be used.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.RetainOnDelete">
            <summary>
            If set to True, the providers Delete method will not be called for this resource.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceOptions.DeletedWith">
            <summary>
            If set, the providers Delete method will not be called for this resource
            if specified resource is being deleted as well.
            </summary>
        </member>
        <member name="T:Pulumi.ResourceTransform">
            <summary>
            ResourceTransform is the callback signature for <see cref="P:Pulumi.ResourceOptions.ResourceTransforms"/>. A
            transform is passed the same set of inputs provided to the <see cref="T:Pulumi.Resource"/> constructor, and can
            optionally return back alternate values for the <c>properties</c> and/or <c>options</c> prior to the resource
            actually being created. The effect will be as though those <c>properties</c> and/or <c>options</c> were passed
            in place of the original call to the <see cref="T:Pulumi.Resource"/> constructor. If the transform returns <see
            langword="null"/>, this indicates that the resource will not be transformed.
            </summary>
            <returns>The new values to use for the <c>args</c> and <c>options</c> of the <see cref="T:Pulumi.Resource"/> in place of
            the originally provided values.</returns>
        </member>
        <member name="P:Pulumi.ResourceTransformArgs.Name">
            <summary>
            The name of the resource being transformed.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceTransformArgs.Type">
            <summary>
            The type of the resource being transformed.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceTransformArgs.Custom">
            <summary>
            If this is a custom resource.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceTransformArgs.Args">
            <summary>
            The original properties passed to the Resource constructor.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceTransformArgs.Options">
            <summary>
            The original resource options passed to the Resource constructor.
            </summary>
        </member>
        <member name="T:Pulumi.ResourceTransformation">
            <summary>
            ResourceTransformation is the callback signature for <see
            cref="P:Pulumi.ResourceOptions.ResourceTransformations"/>. A transformation is passed the same set of
            inputs provided to the <see cref="T:Pulumi.Resource"/> constructor, and can optionally return back
            alternate values for the <c>properties</c> and/or <c>options</c> prior to the resource
            actually being created. The effect will be as though those <c>properties</c> and/or
            <c>options</c> were passed in place of the original call to the <see cref="T:Pulumi.Resource"/>
            constructor.  If the transformation returns <see langword="null"/>, this indicates that the
            resource will not be transformed.
            </summary>
            <returns>The new values to use for the <c>args</c> and <c>options</c> of the <see
            cref="T:Pulumi.Resource"/> in place of the originally provided values.</returns>
        </member>
        <member name="P:Pulumi.ResourceTransformationArgs.Resource">
            <summary>
            The Resource instance that is being transformed.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceTransformationArgs.Args">
            <summary>
            The original properties passed to the Resource constructor.
            </summary>
        </member>
        <member name="P:Pulumi.ResourceTransformationArgs.Options">
            <summary>
            The original resource options passed to the Resource constructor.
            </summary>
        </member>
        <member name="T:Pulumi.StackOptions">
            <summary>
            <see cref="T:Pulumi.StackOptions"/> is a bag of optional settings that control a stack's behavior.
            </summary>
        </member>
        <member name="P:Pulumi.StackOptions.ResourceTransformations">
            <summary>
            Optional list of transformations to apply to this stack's resources during construction.
            The transformations are applied in order, and are applied after all the transformations of custom
            and component resources in the stack.
            </summary>
        </member>
        <member name="P:Pulumi.StackOptions.ResourceTransforms">
            <summary>
            Optional list of transforms to apply to this stack's resources during construction. The transforms are
            applied in order, and are applied after all the transforms of custom and component resources in the stack.
            </summary>
        </member>
        <member name="T:Pulumi.StackReference">
            <summary>
            Manages a reference to a Pulumi stack and provides access to the referenced stack's outputs.
            </summary>
        </member>
        <member name="P:Pulumi.StackReference.Name">
            <summary>
            The name of the referenced stack.
            </summary>
        </member>
        <member name="P:Pulumi.StackReference.Outputs">
            <summary>
            The outputs of the referenced stack.
            </summary>
        </member>
        <member name="P:Pulumi.StackReference.SecretOutputNames">
            <summary>
            The names of any stack outputs which contain secrets.
            </summary>
        </member>
        <member name="M:Pulumi.StackReference.#ctor(System.String,Pulumi.StackReferenceArgs,Pulumi.CustomResourceOptions)">
            <summary>
            Create a <see cref="T:Pulumi.StackReference"/> resource with the given unique name, arguments, and options.
            <para />
            If args is not specified, the name of the referenced stack will be the name of the StackReference resource.
            </summary>
            <param name="name">The unique name of the stack reference.</param>
            <param name="args">The arguments to use to populate this resource's properties.</param>
            <param name="options">A bag of options that control this resource's behavior.</param>
        </member>
        <member name="M:Pulumi.StackReference.GetOutput(Pulumi.Input{System.String})">
            <summary>
            Fetches the value of the named stack output, or null if the stack output was not found.
            </summary>
            <param name="name">The name of the stack output to fetch.</param>
            <returns>An <see cref="T:Pulumi.Output`1"/> containing the requested value.</returns>
        </member>
        <member name="M:Pulumi.StackReference.RequireOutput(Pulumi.Input{System.String})">
            <summary>
            Fetches the value of the named stack output, or throws an error if the output was not found.
            </summary>
            <param name="name">The name of the stack output to fetch.</param>
            <returns>An <see cref="T:Pulumi.Output`1"/> containing the requested value.</returns>
        </member>
        <member name="M:Pulumi.StackReference.GetOutputDetailsAsync(System.String)">
            <summary>
            Fetches the value of the named stack output
            and builds a <see ref="StackReferenceOutputDetails"/> object from it.
            <para />
            The returned object has its Value or SecretValue field set
            depending on whether the output is a secret.
            Neither field is set if the output is not found.
            </summary>
            <param name="name">The name of the stack output to fetch.</param>
            <returns>StackReferenceOutputDetails object containing the output.</returns>
        </member>
        <member name="M:Pulumi.StackReference.GetValueAsync(Pulumi.Input{System.String})">
            <summary>
            Fetches the value of the named stack output. May return null if the value is
            not known for some reason.
            <para />
            This operation is not supported (and will throw) for secret outputs.
            </summary>
            <param name="name">The name of the stack output to fetch.</param>
            <returns>The value of the referenced stack output.</returns>
        </member>
        <member name="M:Pulumi.StackReference.RequireValueAsync(Pulumi.Input{System.String})">
            <summary>
            Fetches the value promptly of the named stack output. Throws an error if the stack output is
            not found.
            <para />
            This operation is not supported (and will throw) for secret outputs.
            </summary>
            <param name="name">The name of the stack output to fetch.</param>
            <returns>The value of the referenced stack output.</returns>
        </member>
        <member name="T:Pulumi.StackReferenceArgs">
            <summary>
            The set of arguments for constructing a StackReference resource.
            </summary>
        </member>
        <member name="P:Pulumi.StackReferenceArgs.Name">
            <summary>
            The name of the stack to reference.
            </summary>
        </member>
        <member name="T:Pulumi.StackReferenceOutputDetails">
            <summary>
            Holds a StackReference's output value.
            At most one of Value and SecretValue will be set.
            </summary>
        </member>
        <member name="P:Pulumi.StackReferenceOutputDetails.Value">
            <summary>
            Output value returned by the <see cref="T:Pulumi.StackReference"/>.
            This field is only set if the output is not a secret.
            </summary>
        </member>
        <member name="P:Pulumi.StackReferenceOutputDetails.SecretValue">
            <summary>
            Secret output value returned by the <see cref="T:Pulumi.StackReference"/>.
            This field is only set if the output is a secret.
            </summary>
        </member>
        <member name="T:Pulumi.OutputAttribute">
            <summary>
            Attribute used by a mark <see cref="T:Pulumi.Resource"/> output properties. Use this attribute
            in your Pulumi programs to mark outputs of <see cref="T:Pulumi.ComponentResource"/> and
            <see cref="T:Pulumi.Stack"/> resources.
            </summary>
        </member>
        <member name="T:Pulumi.InputAttribute">
             <summary>
             Attribute used by a Pulumi Cloud Provider Package to mark <see cref="T:Pulumi.Resource"/> input
             fields and properties.
             <para/>
             Note: for simple inputs (i.e. <see cref="T:Pulumi.Input`1"/> this should just be placed on the
             property itself.  i.e. <c>[Input] Input&lt;string&gt; Acl</c>.
            
             For collection inputs (i.e. <see cref="T:Pulumi.InputList`1"/> this should be placed on the
             backing field for the property.  i.e.
            
             <code>
                 [Input] private InputList&lt;string&gt; _acls;
                 public InputList&lt;string&gt; Acls
                 {
                     get => _acls ?? (_acls = new InputList&lt;string&gt;());
                     set => _acls = value;
                 }
             </code>
             </summary>
        </member>
        <member name="T:Pulumi.OutputTypeAttribute">
            <summary>
            Attribute used by a Pulumi Cloud Provider Package to mark complex types used for a Resource
            output property.  A complex type must have a single constructor in it marked with the
            <see cref="T:Pulumi.OutputConstructorAttribute"/> attribute.
            </summary>
        </member>
        <member name="T:Pulumi.OutputConstructorAttribute">
             <summary>
             Attribute used by a Pulumi Cloud Provider Package to marks the constructor for a complex
             property type so that it can be instantiated by the Pulumi runtime.
            
             The constructor should contain parameters that map to the resultant <see
             cref="P:Google.Protobuf.WellKnownTypes.Struct.Fields"/> returned by the engine.
             </summary>
        </member>
        <member name="T:Pulumi.OutputConstructorParameterAttribute">
            <summary>
            Attribute used by a Pulumi Cloud Provider Package to mark
            constructor parameters with a name override.
            </summary>
        </member>
        <member name="T:Pulumi.EnumTypeAttribute">
             <summary>
             Attribute used by a Pulumi Cloud Provider Package to mark enum types.
            
             Requirements for a struct-based enum to be (de)serialized are as follows.
             It must:
               * Be a value type (struct) decoratted with EnumTypeAttribute.
               * Have a constructor that takes a single parameter of the underlying type.
                 The constructor can be private.
               * Have an explicit conversion operator that converts the enum type to the underlying type.
               * Have an underlying type of String or Double.
               * Implementing IEquatable, adding ==/=! operators and overriding ToString isn't required,
                 but is recommended and is what our codegen does.
             </summary>
        </member>
        <member name="F:Pulumi.Serialization.Constants.UnknownValue">
            <summary>
            Unknown values are encoded as a distinguished string value.
            </summary>
        </member>
        <member name="F:Pulumi.Serialization.Constants.SpecialSigKey">
            <summary>
            SpecialSigKey is sometimes used to encode type identity inside of a map. See sdk/go/common/resource/properties.go.
            </summary>
        </member>
        <member name="F:Pulumi.Serialization.Constants.SpecialAssetSig">
            <summary>
            SpecialAssetSig is a randomly assigned hash used to identify assets in maps. See sdk/go/common/resource/asset.go.
            </summary>
        </member>
        <member name="F:Pulumi.Serialization.Constants.SpecialArchiveSig">
            <summary>
            SpecialArchiveSig is a randomly assigned hash used to identify archives in maps. See sdk/go/common/resource/asset.go.
            </summary>
        </member>
        <member name="F:Pulumi.Serialization.Constants.SpecialSecretSig">
            <summary>
            SpecialSecretSig is a randomly assigned hash used to identify secrets in maps. See sdk/go/common/resource/properties.go.
            </summary>
        </member>
        <member name="F:Pulumi.Serialization.Constants.SpecialResourceSig">
            <summary>
            SpecialResourceSig is a randomly assigned hash used to identify resources in maps. See sdk/go/common/resource/properties.go.
            </summary>
        </member>
        <member name="F:Pulumi.Serialization.Constants.SpecialOutputValueSig">
            <summary>
            SpecialOutputValueSig is a randomly assigned hash used to identify outputs in maps. See sdk/go/common/resource/properties.go.
            </summary>
        </member>
        <member name="M:Pulumi.Serialization.Serializer.SerializeAsync(System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Takes in an arbitrary object and serializes it into a uniform form that can converted
            trivially to a protobuf to be passed to the Pulumi engine.
            <para/>
            The allowed 'basis' forms that can be serialized are:
            <list type="number">
            <item><see langword="null"/>s</item>
            <item><see cref="T:System.Boolean"/>s</item>
            <item><see cref="T:System.Int32"/>s</item>
            <item><see cref="T:System.Double"/>s</item>
            <item><see cref="T:System.String"/>s</item>
            <item><see cref="T:Pulumi.Asset"/>s</item>
            <item><see cref="T:Pulumi.Archive"/>s</item>
            <item><see cref="T:Pulumi.Resource"/>s</item>
            <item><see cref="T:Pulumi.ResourceArgs"/></item>
            <item><see cref="T:System.Text.Json.JsonElement"/></item>
            </list>
            Additionally, other more complex objects can be serialized as long as they are built
            out of serializable objects.  These complex objects include:
            <list type="number">
            <item><see cref="T:Pulumi.Input`1"/>s. As long as they are an Input of a serializable type.</item>
            <item><see cref="T:Pulumi.Output`1"/>s. As long as they are an Output of a serializable type.</item>
            <item><see cref="T:System.Collections.IList"/>s. As long as all elements in the list are serializable.</item>
            <item><see cref="T:System.Collections.IDictionary"/>. As long as the key of the dictionary are <see cref="T:System.String"/>s and as long as the value are all serializable.</item>
            </list>
            No other forms are allowed.
            <para/>
            This function will only return values of a very specific shape.  Specifically, the
            result values returned will *only* be one of:
            <para/>
            <list type="number">
            <item><see langword="null"/></item>
            <item><see cref="T:System.Boolean"/></item>
            <item><see cref="T:System.Int32"/></item>
            <item><see cref="T:System.Double"/></item>
            <item><see cref="T:System.String"/></item>
            <item>An <see cref="T:System.Collections.Immutable.ImmutableArray`1"/> containing only these result value types.</item>
            <item>An <see cref="T:System.Collections.Immutable.IImmutableDictionary`2"/> where the keys are strings and
            the values are only these result value types.</item>
            </list>
            No other result type are allowed to be returned.
            </summary>
        </member>
        <member name="M:Pulumi.Serialization.Serializer.InitializedByDefault(System.Collections.IList)">
             <summary>
             Returns whether the input list was initialized as default.
            
             Here, we check whether the generic list is default(ImmutableArray[T])
             and return the IsDefaultOrEmpty property value from it using reflection.
            
             The use of reflection is unavoidable because we cannot _statically_ resolve the
             generic type T in ImmutableArray[T].
             </summary>
        </member>
        <member name="M:Pulumi.Serialization.Serializer.CreateValue(System.Object)">
            <summary>
            Internal for testing purposes.
            </summary>
        </member>
        <member name="M:Pulumi.Serialization.Serializer.ContainsUnknowns(System.Object)">
             <summary>
             Detects encoded `Unknown` values in objects that conform
             to the grammar returned by `SerializeAsync`.
            
             This possibly needs to be revisited to detect `Unknown`
             values before `SerializeAsync` converts them, in the more
             generic Output representation.
             </summary>
        </member>
        <member name="M:Pulumi.Serialization.Serializer.CreateStruct(System.Collections.Immutable.ImmutableDictionary{System.String,System.Object})">
            <summary>
            Given a <see cref="T:System.Collections.Immutable.ImmutableDictionary`2"/> produced by <see cref="M:Pulumi.Serialization.Serializer.SerializeAsync(System.String,System.Object,System.Boolean,System.Boolean)"/>,
            produces the equivalent <see cref="T:Google.Protobuf.WellKnownTypes.Struct"/> that can be passed to the Pulumi engine.
            </summary>
        </member>
        <member name="M:Pulumi.ResourcePackages.MayReferenceResourceTypes(System.Reflection.AssemblyName)">
            Helper to short-circuit checking assembly names that
            cannot refer to or reference assemblies with resource
            types in principle.
        </member>
        <member name="M:Pulumi.ResourcePackages.MayContainResourceTypes(System.Reflection.Assembly)">
            Helper to short-circuit traversing assemblies that do not
            reference Pulumi.dll and cannot contain resource types in
            principle.
        </member>
        <member name="T:Pulumi.Stack">
            <summary>
            Stack is the root resource for a Pulumi stack. Derive from this class to create your
            stack definitions.
            </summary>
        </member>
        <member name="P:Pulumi.Stack.Root">
             <summary>
             Constant to represent the 'root stack' resource for a Pulumi application.  The purpose
             of this is solely to make it easy to write an <see cref="T:Pulumi.Alias"/> like so:
            
             <c>aliases = { new Alias { Parent = Pulumi.Stack.Root } }</c>
            
             This indicates that the prior name for a resource was created based on it being parented
             directly by the stack itself and no other resources.  Note: this is equivalent to:
            
             <c>aliases = { new Alias { Parent = null } }</c>
            
             However, the former form is preferable as it is more self-descriptive, while the latter
             may look a bit confusing and may incorrectly look like something that could be removed
             without changing semantics.
             </summary>
        </member>
        <member name="F:Pulumi.Stack._rootPulumiStackTypeName">
            <summary>
            <see cref="F:Pulumi.Stack._rootPulumiStackTypeName"/> is the type name that should be used to construct
            the root component in the tree of Pulumi resources allocated by a deployment.This must
            be kept up to date with
            <c>github.com/pulumi/pulumi/sdk/v3/go/common/resource/stack.RootStackType</c>.
            </summary>
        </member>
        <member name="P:Pulumi.Stack.Outputs">
            <summary>
            The outputs of this stack, if the <c>init</c> callback exited normally.
            </summary>
        </member>
        <member name="M:Pulumi.Stack.#ctor(Pulumi.StackOptions)">
            <summary>
            Create a Stack with stack resources defined in derived class constructor.
            </summary>
        </member>
        <member name="M:Pulumi.Stack.#ctor(System.Func{System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.String,System.Object}}},Pulumi.StackOptions)">
            <summary>
            Create a Stack with stack resources created by the <c>init</c> callback.
            An instance of this will be automatically created when any <see
            cref="M:Pulumi.Deployment.RunAsync(System.Action)"/> overload is called.
            </summary>
        </member>
        <member name="M:Pulumi.Stack.RegisterPropertyOutputs">
            <summary>
            Inspect all public properties of the stack to find outputs. Validate the values and register them as stack outputs.
            </summary>
        </member>
        <member name="T:Pulumi.Testing.IMocks">
            <summary>
            Hooks to mock the engine that provide test doubles for offline unit testing of stacks.
            </summary>
        </member>
        <member name="M:Pulumi.Testing.IMocks.NewResourceAsync(Pulumi.Testing.MockResourceArgs)">
            <summary>
            Invoked when a new resource is created by the program.
            </summary>
            <param name="args">MockResourceArgs</param>
            <returns>A tuple of a resource identifier and resource state. State can be either a POCO
            or a dictionary bag. The returned ID may be null for component resources.</returns>
        </member>
        <member name="M:Pulumi.Testing.IMocks.CallAsync(Pulumi.Testing.MockCallArgs)">
            <summary>
            Invoked when the program needs to call a provider to load data (e.g., to retrieve an existing
            resource).
            </summary>
            <param name="args">MockCallArgs</param>
            <returns>Invocation result, can be either a POCO or a dictionary bag.</returns>
        </member>
        <member name="M:Pulumi.Testing.IMocks.RegisterResourceOutputs(Pulumi.Testing.MockRegisterResourceOutputsRequest)">
            <summary>
            Invoked when component resources (including instances of Stack) register their outputs
            </summary>
            <param name="args">MockRegisterResourceOutputsRequest</param>
        </member>
        <member name="T:Pulumi.Testing.MockResourceArgs">
            <summary>
            MockResourceArgs for use in NewResourceAsync
            </summary>
        </member>
        <member name="P:Pulumi.Testing.MockResourceArgs.Type">
            <summary>
            Resource type name.
            </summary>
        </member>
        <member name="P:Pulumi.Testing.MockResourceArgs.Name">
            <summary>
            Resource Name.
            </summary>
        </member>
        <member name="P:Pulumi.Testing.MockResourceArgs.Inputs">
            <summary>
            Dictionary of resource input properties.
            </summary>
        </member>
        <member name="P:Pulumi.Testing.MockResourceArgs.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:Pulumi.Testing.MockResourceArgs.Id">
            <summary>
            Resource identifier.
            </summary>
        </member>
        <member name="T:Pulumi.Testing.MockCallArgs">
            <summary>
            MockCallArgs for use in CallAsync
            </summary>
        </member>
        <member name="P:Pulumi.Testing.MockCallArgs.Token">
            <summary>
            Resource identifier.
            </summary>
        </member>
        <member name="P:Pulumi.Testing.MockCallArgs.Args">
            <summary>
            Dictionary of input arguments.
            </summary>
        </member>
        <member name="P:Pulumi.Testing.MockCallArgs.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="T:Pulumi.Testing.MockRegisterResourceOutputsRequest">
            <summary>
            MockRegisterResourceOutputsRequest for use in RegisterOutputRequest
            </summary>
        </member>
        <member name="F:Pulumi.Testing.MockRegisterResourceOutputsRequest.Urn">
            <summary>
            The URN of the resource of which the outputs are being registered
            </summary>
        </member>
        <member name="F:Pulumi.Testing.MockRegisterResourceOutputsRequest.Outputs">
            <summary>
            The outputs which have been registered by the resource
            </summary>
        </member>
        <member name="T:Pulumi.Testing.TestOptions">
            <summary>
            Optional settings for <see cref="M:Pulumi.Deployment.TestAsync``1(Pulumi.Testing.IMocks,Pulumi.Testing.TestOptions)"/>.
            </summary>
        </member>
        <member name="P:Pulumi.Testing.TestOptions.ProjectName">
            <summary>
            Project name. Defaults to <b>"project"</b> if not specified.
            </summary>
        </member>
        <member name="P:Pulumi.Testing.TestOptions.StackName">
            <summary>
            Stack name. Defaults to <b>"stack"</b> if not specified.
            </summary>
        </member>
        <member name="P:Pulumi.Testing.TestOptions.IsPreview">
            <summary>
            Whether the test runs in Preview mode. Defaults to <b>true</b> if not specified.
            </summary>
        </member>
        <member name="P:Pulumi.Testing.TestOptions.OrganizationName">
            <summary>
            Organization name. Defaults to <b>"organization"</b> if not specified.
            </summary>
        </member>
        <member name="T:Pulumi.Testing.TestStack">
            <summary>
            TestStack is used internally to implement Deployment.TestAsync overload where the user has only a function
            that creates resources, not a stack definition. This Stack is filtered out from the created resources
            and it is used to obtain the outputs from the function that created the resources, if any.
            </summary>
        </member>
        <member name="T:Google.Rpc.StatusReflection">
            <summary>Holder for reflection information generated from google/protobuf/status.proto</summary>
        </member>
        <member name="P:Google.Rpc.StatusReflection.Descriptor">
            <summary>File descriptor for google/protobuf/status.proto</summary>
        </member>
        <member name="T:Google.Rpc.Status">
             <summary>
             The `Status` type defines a logical error model that is suitable for different
             programming environments, including REST APIs and RPC APIs. It is used by
             [gRPC](https://github.com/grpc). The error model is designed to be:
            
             - Simple to use and understand for most users
             - Flexible enough to meet unexpected needs
            
             # Overview
            
             The `Status` message contains three pieces of data: error code, error message,
             and error details. The error code should be an enum value of
             [google.rpc.Code][google.rpc.Code], but it may accept additional error codes if needed.  The
             error message should be a developer-facing English message that helps
             developers *understand* and *resolve* the error. If a localized user-facing
             error message is needed, put the localized message in the error details or
             localize it in the client. The optional error details may contain arbitrary
             information about the error. There is a predefined set of error detail types
             in the package `google.rpc` which can be used for common error conditions.
            
             # Language mapping
            
             The `Status` message is the logical representation of the error model, but it
             is not necessarily the actual wire format. When the `Status` message is
             exposed in different client libraries and different wire protocols, it can be
             mapped differently. For example, it will likely be mapped to some exceptions
             in Java, but more likely mapped to some error codes in C.
            
             # Other uses
            
             The error model and the `Status` message can be used in a variety of
             environments, either with or without APIs, to provide a
             consistent developer experience across different environments.
            
             Example uses of this error model include:
            
             - Partial errors. If a service needs to return partial errors to the client,
                 it may embed the `Status` in the normal response to indicate the partial
                 errors.
            
             - Workflow errors. A typical workflow has multiple steps. Each step may
                 have a `Status` message for error reporting purpose.
            
             - Batch operations. If a client uses batch request and batch response, the
                 `Status` message should be used directly inside batch response, one for
                 each error sub-response.
            
             - Asynchronous operations. If an API call embeds asynchronous operation
                 results in its response, the status of those operations should be
                 represented directly using the `Status` message.
            
             - Logging. If some API errors are stored in logs, the message `Status` could
                 be used directly after any stripping needed for security/privacy reasons.
             </summary>
        </member>
        <member name="F:Google.Rpc.Status.CodeFieldNumber">
            <summary>Field number for the "code" field.</summary>
        </member>
        <member name="P:Google.Rpc.Status.Code">
            <summary>
            The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
            </summary>
        </member>
        <member name="F:Google.Rpc.Status.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="P:Google.Rpc.Status.Message">
            <summary>
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
            </summary>
        </member>
        <member name="F:Google.Rpc.Status.DetailsFieldNumber">
            <summary>Field number for the "details" field.</summary>
        </member>
        <member name="P:Google.Rpc.Status.Details">
            <summary>
            A list of messages that carry the error details.  There will be a
            common set of message types for APIs to use.
            </summary>
        </member>
        <member name="T:Pulumirpc.AliasReflection">
            <summary>Holder for reflection information generated from pulumi/alias.proto</summary>
        </member>
        <member name="P:Pulumirpc.AliasReflection.Descriptor">
            <summary>File descriptor for pulumi/alias.proto</summary>
        </member>
        <member name="F:Pulumirpc.Alias.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.Alias.Urn">
            <summary>
            The previous urn to alias to.
            </summary>
        </member>
        <member name="P:Pulumirpc.Alias.HasUrn">
            <summary>Gets whether the "urn" field is set</summary>
        </member>
        <member name="M:Pulumirpc.Alias.ClearUrn">
            <summary> Clears the value of the oneof if it's currently set to "urn" </summary>
        </member>
        <member name="F:Pulumirpc.Alias.SpecFieldNumber">
            <summary>Field number for the "spec" field.</summary>
        </member>
        <member name="P:Pulumirpc.Alias.Spec">
            <summary>
            An alias specification.
            </summary>
        </member>
        <member name="T:Pulumirpc.Alias.AliasOneofCase">
            <summary>Enum of possible cases for the "alias" oneof.</summary>
        </member>
        <member name="T:Pulumirpc.Alias.Types">
            <summary>Container for nested types declared in the Alias message type.</summary>
        </member>
        <member name="F:Pulumirpc.Alias.Types.Spec.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.Alias.Types.Spec.Name">
            <summary>
            The previous name of the resource.  If none is provided, we will use the current name.
            </summary>
        </member>
        <member name="F:Pulumirpc.Alias.Types.Spec.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Pulumirpc.Alias.Types.Spec.Type">
            <summary>
            The previous type of the resource. If none is provided, we will use the current resoource type.
            </summary>
        </member>
        <member name="F:Pulumirpc.Alias.Types.Spec.StackFieldNumber">
            <summary>Field number for the "stack" field.</summary>
        </member>
        <member name="P:Pulumirpc.Alias.Types.Spec.Stack">
            <summary>
            The previous stack of the resource. If not set, the current stack of the resource is used.
            </summary>
        </member>
        <member name="F:Pulumirpc.Alias.Types.Spec.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Pulumirpc.Alias.Types.Spec.Project">
            <summary>
            The previous project of the resource. If not set, the current project of the resource is used.
            </summary>
        </member>
        <member name="F:Pulumirpc.Alias.Types.Spec.ParentUrnFieldNumber">
            <summary>Field number for the "parentUrn" field.</summary>
        </member>
        <member name="P:Pulumirpc.Alias.Types.Spec.ParentUrn">
            <summary>
            The urn of the previous parent.
            </summary>
        </member>
        <member name="P:Pulumirpc.Alias.Types.Spec.HasParentUrn">
            <summary>Gets whether the "parentUrn" field is set</summary>
        </member>
        <member name="M:Pulumirpc.Alias.Types.Spec.ClearParentUrn">
            <summary> Clears the value of the oneof if it's currently set to "parentUrn" </summary>
        </member>
        <member name="F:Pulumirpc.Alias.Types.Spec.NoParentFieldNumber">
            <summary>Field number for the "noParent" field.</summary>
        </member>
        <member name="P:Pulumirpc.Alias.Types.Spec.NoParent">
            <summary>
            Used to indicate the resource previously had no parent. If false this property is ignored.
            </summary>
        </member>
        <member name="P:Pulumirpc.Alias.Types.Spec.HasNoParent">
            <summary>Gets whether the "noParent" field is set</summary>
        </member>
        <member name="M:Pulumirpc.Alias.Types.Spec.ClearNoParent">
            <summary> Clears the value of the oneof if it's currently set to "noParent" </summary>
        </member>
        <member name="T:Pulumirpc.Alias.Types.Spec.ParentOneofCase">
            <summary>Enum of possible cases for the "parent" oneof.</summary>
        </member>
        <member name="T:Pulumirpc.AnalyzerReflection">
            <summary>Holder for reflection information generated from pulumi/analyzer.proto</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerReflection.Descriptor">
            <summary>File descriptor for pulumi/analyzer.proto</summary>
        </member>
        <member name="T:Pulumirpc.EnforcementLevel">
            <summary>
            EnforcementLevel indicates the severity of a policy violation.
            </summary>
        </member>
        <member name="F:Pulumirpc.EnforcementLevel.Advisory">
            <summary>
            Displayed to users, but does not block deployment.
            </summary>
        </member>
        <member name="F:Pulumirpc.EnforcementLevel.Mandatory">
            <summary>
            Stops deployment, cannot be overridden.
            </summary>
        </member>
        <member name="F:Pulumirpc.EnforcementLevel.Disabled">
            <summary>
            Disabled policies do not run during a deployment.
            </summary>
        </member>
        <member name="F:Pulumirpc.EnforcementLevel.Remediate">
            <summary>
            Remediated policies actually fixes problems instead of issuing diagnostics.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeRequest.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeRequest.Type">
            <summary>
            the type token of the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeRequest.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeRequest.Properties">
            <summary>
            the full properties to use for validation.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeRequest.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeRequest.Urn">
            <summary>
            the URN of the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeRequest.Name">
            <summary>
            the name for the resource's URN.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeRequest.OptionsFieldNumber">
            <summary>Field number for the "options" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeRequest.Options">
            <summary>
            the resource options.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeRequest.ProviderFieldNumber">
            <summary>Field number for the "provider" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeRequest.Provider">
            <summary>
            the resource's provider.
            </summary>
        </member>
        <member name="T:Pulumirpc.AnalyzerResource">
            <summary>
            AnalyzerResource defines the view of a Pulumi-managed resource as sent to Analyzers. The properties
            of the resource are specific to the type of analysis being performed. See the Analyzer
            service definition for more information.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResource.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResource.Type">
            <summary>
            the type token of the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResource.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResource.Properties">
            <summary>
            the full properties to use for validation.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResource.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResource.Urn">
            <summary>
            the URN of the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResource.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResource.Name">
            <summary>
            the name for the resource's URN.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResource.OptionsFieldNumber">
            <summary>Field number for the "options" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResource.Options">
            <summary>
            the resource options.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResource.ProviderFieldNumber">
            <summary>Field number for the "provider" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResource.Provider">
            <summary>
            the resource's provider.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResource.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResource.Parent">
            <summary>
            an optional parent URN that this child resource belongs to.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResource.DependenciesFieldNumber">
            <summary>Field number for the "dependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResource.Dependencies">
            <summary>
            a list of URNs that this resource depends on.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResource.PropertyDependenciesFieldNumber">
            <summary>Field number for the "propertyDependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResource.PropertyDependencies">
            <summary>
            a map from property keys to the dependencies of the property.
            </summary>
        </member>
        <member name="T:Pulumirpc.AnalyzerResourceOptions">
            <summary>
            AnalyzerResourceOptions defines the options associated with a resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResourceOptions.ProtectFieldNumber">
            <summary>Field number for the "protect" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResourceOptions.Protect">
            <summary>
            true if the resource should be marked protected.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResourceOptions.IgnoreChangesFieldNumber">
            <summary>Field number for the "ignoreChanges" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResourceOptions.IgnoreChanges">
            <summary>
            a list of property names to ignore during changes.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResourceOptions.DeleteBeforeReplaceFieldNumber">
            <summary>Field number for the "deleteBeforeReplace" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResourceOptions.DeleteBeforeReplace">
            <summary>
            true if this resource should be deleted before replacement.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResourceOptions.DeleteBeforeReplaceDefinedFieldNumber">
            <summary>Field number for the "deleteBeforeReplaceDefined" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResourceOptions.DeleteBeforeReplaceDefined">
            <summary>
            true if the deleteBeforeReplace property should be treated as defined even if it is false.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResourceOptions.AdditionalSecretOutputsFieldNumber">
            <summary>Field number for the "additionalSecretOutputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResourceOptions.AdditionalSecretOutputs">
            <summary>
            a list of output properties that should also be treated as secret, in addition to ones we detect.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResourceOptions.AliasesFieldNumber">
            <summary>Field number for the "aliases" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResourceOptions.Aliases">
            <summary>
            a list of additional URNs that shoud be considered the same.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResourceOptions.CustomTimeoutsFieldNumber">
            <summary>Field number for the "customTimeouts" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResourceOptions.CustomTimeouts">
            <summary>
            a config block that will be used to configure timeouts for CRUD operations.
            </summary>
        </member>
        <member name="T:Pulumirpc.AnalyzerResourceOptions.Types">
            <summary>Container for nested types declared in the AnalyzerResourceOptions message type.</summary>
        </member>
        <member name="T:Pulumirpc.AnalyzerResourceOptions.Types.CustomTimeouts">
            <summary>
            CustomTimeouts allows a user to be able to create a set of custom timeout parameters.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResourceOptions.Types.CustomTimeouts.CreateFieldNumber">
            <summary>Field number for the "create" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResourceOptions.Types.CustomTimeouts.Create">
            <summary>
            The create resource timeout in seconds.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResourceOptions.Types.CustomTimeouts.UpdateFieldNumber">
            <summary>Field number for the "update" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResourceOptions.Types.CustomTimeouts.Update">
            <summary>
            The update resource timeout in seconds.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerResourceOptions.Types.CustomTimeouts.DeleteFieldNumber">
            <summary>Field number for the "delete" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerResourceOptions.Types.CustomTimeouts.Delete">
            <summary>
            The delete resource timeout in seconds.
            </summary>
        </member>
        <member name="T:Pulumirpc.AnalyzerProviderResource">
            <summary>
            AnalyzerProviderResource provides information about a resource's provider.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerProviderResource.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerProviderResource.Type">
            <summary>
            the type token of the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerProviderResource.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerProviderResource.Properties">
            <summary>
            the full properties to use for validation.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerProviderResource.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerProviderResource.Urn">
            <summary>
            the URN of the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerProviderResource.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerProviderResource.Name">
            <summary>
            the name for the resource's URN.
            </summary>
        </member>
        <member name="T:Pulumirpc.AnalyzerPropertyDependencies">
            <summary>
            AnalyzerPropertyDependencies describes the resources that a particular property depends on.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerPropertyDependencies.UrnsFieldNumber">
            <summary>Field number for the "urns" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerPropertyDependencies.Urns">
            <summary>
            A list of URNs this property depends on.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeStackRequest.ResourcesFieldNumber">
            <summary>Field number for the "resources" field.</summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeResponse.DiagnosticsFieldNumber">
            <summary>Field number for the "diagnostics" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeResponse.Diagnostics">
            <summary>
            information about policy violations.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeDiagnostic.PolicyNameFieldNumber">
            <summary>Field number for the "policyName" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeDiagnostic.PolicyName">
            <summary>
            Name of the violated policy.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeDiagnostic.PolicyPackNameFieldNumber">
            <summary>Field number for the "policyPackName" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeDiagnostic.PolicyPackName">
            <summary>
            Name of the policy pack the policy is in.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeDiagnostic.PolicyPackVersionFieldNumber">
            <summary>Field number for the "policyPackVersion" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeDiagnostic.PolicyPackVersion">
            <summary>
            Version of the policy pack.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeDiagnostic.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeDiagnostic.Description">
            <summary>
            Description of policy rule. e.g., "encryption enabled."
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeDiagnostic.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeDiagnostic.Message">
            <summary>
            Message to display on policy violation, e.g., remediation steps.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeDiagnostic.TagsFieldNumber">
            <summary>Field number for the "tags" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeDiagnostic.Tags">
            <summary>
            Keywords/terms to associate with a policy, e.g., "cost".
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeDiagnostic.EnforcementLevelFieldNumber">
            <summary>Field number for the "enforcementLevel" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeDiagnostic.EnforcementLevel">
            <summary>
            Severity of the policy violation.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzeDiagnostic.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzeDiagnostic.Urn">
            <summary>
            URN of the resource that violates the policy.
            </summary>
        </member>
        <member name="T:Pulumirpc.Remediation">
            <summary>
            Remediation is a single resource remediation result.
            </summary>
        </member>
        <member name="F:Pulumirpc.Remediation.PolicyNameFieldNumber">
            <summary>Field number for the "policyName" field.</summary>
        </member>
        <member name="P:Pulumirpc.Remediation.PolicyName">
            <summary>
            Name of the policy that performed the remediation.
            </summary>
        </member>
        <member name="F:Pulumirpc.Remediation.PolicyPackNameFieldNumber">
            <summary>Field number for the "policyPackName" field.</summary>
        </member>
        <member name="P:Pulumirpc.Remediation.PolicyPackName">
            <summary>
            Name of the policy pack the transform is in.
            </summary>
        </member>
        <member name="F:Pulumirpc.Remediation.PolicyPackVersionFieldNumber">
            <summary>Field number for the "policyPackVersion" field.</summary>
        </member>
        <member name="P:Pulumirpc.Remediation.PolicyPackVersion">
            <summary>
            Version of the policy pack.
            </summary>
        </member>
        <member name="F:Pulumirpc.Remediation.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Pulumirpc.Remediation.Description">
            <summary>
            Description of transform rule. e.g., "auto-tag resources."
            </summary>
        </member>
        <member name="F:Pulumirpc.Remediation.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.Remediation.Properties">
            <summary>
            the transformed properties to use.
            </summary>
        </member>
        <member name="F:Pulumirpc.Remediation.DiagnosticFieldNumber">
            <summary>Field number for the "diagnostic" field.</summary>
        </member>
        <member name="P:Pulumirpc.Remediation.Diagnostic">
            <summary>
            an optional warning diagnostic to emit, if a transform failed.
            </summary>
        </member>
        <member name="T:Pulumirpc.RemediateResponse">
            <summary>
            RemediateResponse contains a sequence of remediations applied, in order.
            </summary>
        </member>
        <member name="F:Pulumirpc.RemediateResponse.RemediationsFieldNumber">
            <summary>Field number for the "remediations" field.</summary>
        </member>
        <member name="P:Pulumirpc.RemediateResponse.Remediations">
            <summary>
            the list of remediations that were applied.
            </summary>
        </member>
        <member name="T:Pulumirpc.AnalyzerInfo">
            <summary>
            AnalyzerInfo provides metadata about a PolicyPack inside an analyzer.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerInfo.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerInfo.Name">
            <summary>
            Name of the PolicyPack.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerInfo.DisplayNameFieldNumber">
            <summary>Field number for the "displayName" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerInfo.DisplayName">
            <summary>
            Pretty name for the PolicyPack.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerInfo.PoliciesFieldNumber">
            <summary>Field number for the "policies" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerInfo.Policies">
            <summary>
            Metadata about policies contained in PolicyPack.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerInfo.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerInfo.Version">
            <summary>
            Version of the Policy Pack.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerInfo.SupportsConfigFieldNumber">
            <summary>Field number for the "supportsConfig" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerInfo.SupportsConfig">
            <summary>
            Whether the Policy Pack supports config.
            </summary>
        </member>
        <member name="F:Pulumirpc.AnalyzerInfo.InitialConfigFieldNumber">
            <summary>Field number for the "initialConfig" field.</summary>
        </member>
        <member name="P:Pulumirpc.AnalyzerInfo.InitialConfig">
            <summary>
            Map of policy name to config.
            </summary>
        </member>
        <member name="T:Pulumirpc.PolicyInfo">
            <summary>
            PolicyInfo provides metadata about a policy within a Policy Pack.
            </summary>
        </member>
        <member name="F:Pulumirpc.PolicyInfo.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.PolicyInfo.Name">
            <summary>
            Name of the policy.
            </summary>
        </member>
        <member name="F:Pulumirpc.PolicyInfo.DisplayNameFieldNumber">
            <summary>Field number for the "displayName" field.</summary>
        </member>
        <member name="P:Pulumirpc.PolicyInfo.DisplayName">
            <summary>
            Pretty name for the policy.
            </summary>
        </member>
        <member name="F:Pulumirpc.PolicyInfo.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Pulumirpc.PolicyInfo.Description">
            <summary>
            Description of policy rule. e.g., "encryption enabled."
            </summary>
        </member>
        <member name="F:Pulumirpc.PolicyInfo.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="P:Pulumirpc.PolicyInfo.Message">
            <summary>
            Message to display on policy violation, e.g., remediation steps.
            </summary>
        </member>
        <member name="F:Pulumirpc.PolicyInfo.EnforcementLevelFieldNumber">
            <summary>Field number for the "enforcementLevel" field.</summary>
        </member>
        <member name="P:Pulumirpc.PolicyInfo.EnforcementLevel">
            <summary>
            Severity of the policy violation.
            </summary>
        </member>
        <member name="F:Pulumirpc.PolicyInfo.ConfigSchemaFieldNumber">
            <summary>Field number for the "configSchema" field.</summary>
        </member>
        <member name="P:Pulumirpc.PolicyInfo.ConfigSchema">
            <summary>
            Config schema for the policy.
            </summary>
        </member>
        <member name="T:Pulumirpc.PolicyConfigSchema">
            <summary>
            PolicyConfigSchema provides the schema for a policy's configuration.
            </summary>
        </member>
        <member name="F:Pulumirpc.PolicyConfigSchema.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.PolicyConfigSchema.Properties">
            <summary>
            JSON schema for each property.
            </summary>
        </member>
        <member name="F:Pulumirpc.PolicyConfigSchema.RequiredFieldNumber">
            <summary>Field number for the "required" field.</summary>
        </member>
        <member name="P:Pulumirpc.PolicyConfigSchema.Required">
            <summary>
            Required properties.
            </summary>
        </member>
        <member name="T:Pulumirpc.PolicyConfig">
            <summary>
            PolicyConfig provides configuration for a policy.
            </summary>
        </member>
        <member name="F:Pulumirpc.PolicyConfig.EnforcementLevelFieldNumber">
            <summary>Field number for the "enforcementLevel" field.</summary>
        </member>
        <member name="P:Pulumirpc.PolicyConfig.EnforcementLevel">
            <summary>
            Enforcement level of the policy.
            </summary>
        </member>
        <member name="F:Pulumirpc.PolicyConfig.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.PolicyConfig.Properties">
            <summary>
            Configuration properties of the policy.
            </summary>
        </member>
        <member name="T:Pulumirpc.ConfigureAnalyzerRequest">
            <summary>
            ConfigureAnalyzerRequest provides configuration information to the analyzer.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureAnalyzerRequest.PolicyConfigFieldNumber">
            <summary>Field number for the "policyConfig" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureAnalyzerRequest.PolicyConfig">
            <summary>
            Map of policy name to config.
            </summary>
        </member>
        <member name="T:Pulumirpc.Analyzer">
            <summary>
            Analyzer provides a pluggable interface for checking resource definitions against some number of
            resource policies. It is intentionally open-ended, allowing for implementations that check
            everything from raw resource definitions to entire projects/stacks/snapshots for arbitrary
            issues -- style, policy, correctness, security, and so on.
            </summary>
        </member>
        <member name="P:Pulumirpc.Analyzer.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Pulumirpc.Analyzer.AnalyzerBase">
            <summary>Base class for server-side implementations of Analyzer</summary>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerBase.Analyze(Pulumirpc.AnalyzeRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Analyze analyzes a single resource object, and returns any errors that it finds.
            Called with the "inputs" to the resource, before it is updated.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerBase.AnalyzeStack(Pulumirpc.AnalyzeStackRequest,Grpc.Core.ServerCallContext)">
            <summary>
            AnalyzeStack analyzes all resources within a stack, at the end of a successful
            preview or update. The provided resources are the "outputs", after any mutations
            have taken place.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerBase.Remediate(Pulumirpc.AnalyzeRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Remediate optionally transforms a single resource object. This effectively rewrites
            a single resource object's properties instead of using what was generated by the program.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerBase.GetAnalyzerInfo(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.ServerCallContext)">
            <summary>
            GetAnalyzerInfo returns metadata about the analyzer (e.g., list of policies contained).
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerBase.GetPluginInfo(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.ServerCallContext)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerBase.Configure(Pulumirpc.ConfigureAnalyzerRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Configure configures the analyzer, passing configuration properties for each policy.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Pulumirpc.Analyzer.AnalyzerClient">
            <summary>Client for Analyzer</summary>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Analyzer</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Analyzer that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.Analyze(Pulumirpc.AnalyzeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Analyze analyzes a single resource object, and returns any errors that it finds.
            Called with the "inputs" to the resource, before it is updated.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.Analyze(Pulumirpc.AnalyzeRequest,Grpc.Core.CallOptions)">
            <summary>
            Analyze analyzes a single resource object, and returns any errors that it finds.
            Called with the "inputs" to the resource, before it is updated.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.AnalyzeAsync(Pulumirpc.AnalyzeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Analyze analyzes a single resource object, and returns any errors that it finds.
            Called with the "inputs" to the resource, before it is updated.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.AnalyzeAsync(Pulumirpc.AnalyzeRequest,Grpc.Core.CallOptions)">
            <summary>
            Analyze analyzes a single resource object, and returns any errors that it finds.
            Called with the "inputs" to the resource, before it is updated.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.AnalyzeStack(Pulumirpc.AnalyzeStackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            AnalyzeStack analyzes all resources within a stack, at the end of a successful
            preview or update. The provided resources are the "outputs", after any mutations
            have taken place.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.AnalyzeStack(Pulumirpc.AnalyzeStackRequest,Grpc.Core.CallOptions)">
            <summary>
            AnalyzeStack analyzes all resources within a stack, at the end of a successful
            preview or update. The provided resources are the "outputs", after any mutations
            have taken place.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.AnalyzeStackAsync(Pulumirpc.AnalyzeStackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            AnalyzeStack analyzes all resources within a stack, at the end of a successful
            preview or update. The provided resources are the "outputs", after any mutations
            have taken place.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.AnalyzeStackAsync(Pulumirpc.AnalyzeStackRequest,Grpc.Core.CallOptions)">
            <summary>
            AnalyzeStack analyzes all resources within a stack, at the end of a successful
            preview or update. The provided resources are the "outputs", after any mutations
            have taken place.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.Remediate(Pulumirpc.AnalyzeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Remediate optionally transforms a single resource object. This effectively rewrites
            a single resource object's properties instead of using what was generated by the program.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.Remediate(Pulumirpc.AnalyzeRequest,Grpc.Core.CallOptions)">
            <summary>
            Remediate optionally transforms a single resource object. This effectively rewrites
            a single resource object's properties instead of using what was generated by the program.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.RemediateAsync(Pulumirpc.AnalyzeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Remediate optionally transforms a single resource object. This effectively rewrites
            a single resource object's properties instead of using what was generated by the program.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.RemediateAsync(Pulumirpc.AnalyzeRequest,Grpc.Core.CallOptions)">
            <summary>
            Remediate optionally transforms a single resource object. This effectively rewrites
            a single resource object's properties instead of using what was generated by the program.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.GetAnalyzerInfo(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetAnalyzerInfo returns metadata about the analyzer (e.g., list of policies contained).
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.GetAnalyzerInfo(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.CallOptions)">
            <summary>
            GetAnalyzerInfo returns metadata about the analyzer (e.g., list of policies contained).
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.GetAnalyzerInfoAsync(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetAnalyzerInfo returns metadata about the analyzer (e.g., list of policies contained).
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.GetAnalyzerInfoAsync(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.CallOptions)">
            <summary>
            GetAnalyzerInfo returns metadata about the analyzer (e.g., list of policies contained).
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.GetPluginInfo(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.GetPluginInfo(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.CallOptions)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.GetPluginInfoAsync(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.GetPluginInfoAsync(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.CallOptions)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.Configure(Pulumirpc.ConfigureAnalyzerRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Configure configures the analyzer, passing configuration properties for each policy.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.Configure(Pulumirpc.ConfigureAnalyzerRequest,Grpc.Core.CallOptions)">
            <summary>
            Configure configures the analyzer, passing configuration properties for each policy.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.ConfigureAsync(Pulumirpc.ConfigureAnalyzerRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Configure configures the analyzer, passing configuration properties for each policy.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.ConfigureAsync(Pulumirpc.ConfigureAnalyzerRequest,Grpc.Core.CallOptions)">
            <summary>
            Configure configures the analyzer, passing configuration properties for each policy.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Analyzer.AnalyzerClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Pulumirpc.Analyzer.BindService(Pulumirpc.Analyzer.AnalyzerBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Pulumirpc.Analyzer.BindService(Grpc.Core.ServiceBinderBase,Pulumirpc.Analyzer.AnalyzerBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Pulumirpc.CallbackReflection">
            <summary>Holder for reflection information generated from pulumi/callback.proto</summary>
        </member>
        <member name="P:Pulumirpc.CallbackReflection.Descriptor">
            <summary>File descriptor for pulumi/callback.proto</summary>
        </member>
        <member name="F:Pulumirpc.Callback.TargetFieldNumber">
            <summary>Field number for the "target" field.</summary>
        </member>
        <member name="P:Pulumirpc.Callback.Target">
            <summary>
            the gRPC target of the callback service.
            </summary>
        </member>
        <member name="F:Pulumirpc.Callback.TokenFieldNumber">
            <summary>Field number for the "token" field.</summary>
        </member>
        <member name="P:Pulumirpc.Callback.Token">
            <summary>
            the service specific unique token for this callback.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallbackInvokeRequest.TokenFieldNumber">
            <summary>Field number for the "token" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallbackInvokeRequest.Token">
            <summary>
            the token for the callback.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallbackInvokeRequest.RequestFieldNumber">
            <summary>Field number for the "request" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallbackInvokeRequest.Request">
            <summary>
            the serialized protobuf message of the arguments for this callback.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallbackInvokeResponse.ResponseFieldNumber">
            <summary>Field number for the "response" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallbackInvokeResponse.Response">
            <summary>
            the serialized protobuf message of the response for this callback.
            </summary>
        </member>
        <member name="T:Pulumirpc.Callbacks">
            <summary>
            Callbacks is a service for invoking functions in one runtime from other processes.
            </summary>
        </member>
        <member name="P:Pulumirpc.Callbacks.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Pulumirpc.Callbacks.CallbacksBase">
            <summary>Base class for server-side implementations of Callbacks</summary>
        </member>
        <member name="M:Pulumirpc.Callbacks.CallbacksBase.Invoke(Pulumirpc.CallbackInvokeRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Invoke invokes a given callback, identified by its token.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Pulumirpc.Callbacks.CallbacksClient">
            <summary>Client for Callbacks</summary>
        </member>
        <member name="M:Pulumirpc.Callbacks.CallbacksClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Callbacks</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.Callbacks.CallbacksClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Callbacks that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.Callbacks.CallbacksClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Pulumirpc.Callbacks.CallbacksClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Pulumirpc.Callbacks.CallbacksClient.Invoke(Pulumirpc.CallbackInvokeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Invoke invokes a given callback, identified by its token.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Callbacks.CallbacksClient.Invoke(Pulumirpc.CallbackInvokeRequest,Grpc.Core.CallOptions)">
            <summary>
            Invoke invokes a given callback, identified by its token.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Callbacks.CallbacksClient.InvokeAsync(Pulumirpc.CallbackInvokeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Invoke invokes a given callback, identified by its token.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Callbacks.CallbacksClient.InvokeAsync(Pulumirpc.CallbackInvokeRequest,Grpc.Core.CallOptions)">
            <summary>
            Invoke invokes a given callback, identified by its token.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Callbacks.CallbacksClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Pulumirpc.Callbacks.BindService(Pulumirpc.Callbacks.CallbacksBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Pulumirpc.Callbacks.BindService(Grpc.Core.ServiceBinderBase,Pulumirpc.Callbacks.CallbacksBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Pulumirpc.Codegen.HclReflection">
            <summary>Holder for reflection information generated from pulumi/codegen/hcl.proto</summary>
        </member>
        <member name="P:Pulumirpc.Codegen.HclReflection.Descriptor">
            <summary>File descriptor for pulumi/codegen/hcl.proto</summary>
        </member>
        <member name="T:Pulumirpc.Codegen.DiagnosticSeverity">
            <summary>
            DiagnosticSeverity is the severity level of a diagnostic message.
            </summary>
        </member>
        <member name="F:Pulumirpc.Codegen.DiagnosticSeverity.DiagInvalid">
            <summary>
            DIAG_INVALID is the invalid zero value of DiagnosticSeverity
            </summary>
        </member>
        <member name="F:Pulumirpc.Codegen.DiagnosticSeverity.DiagError">
            <summary>
            DIAG_ERROR indicates that the problem reported by a diagnostic prevents
            further progress in parsing and/or evaluating the subject.
            </summary>
        </member>
        <member name="F:Pulumirpc.Codegen.DiagnosticSeverity.DiagWarning">
            <summary>
            DIAG_WARNING indicates that the problem reported by a diagnostic warrants
            user attention but does not prevent further progress. It is most
            commonly used for showing deprecation notices.
            </summary>
        </member>
        <member name="T:Pulumirpc.Codegen.Pos">
            <summary>
            Pos represents a single position in a source file, by addressing the start byte of a unicode character
            encoded in UTF-8.
            </summary>
        </member>
        <member name="F:Pulumirpc.Codegen.Pos.LineFieldNumber">
            <summary>Field number for the "line" field.</summary>
        </member>
        <member name="P:Pulumirpc.Codegen.Pos.Line">
            <summary>
            Line is the source code line where this position points. Lines are counted starting at 1 and
            incremented for each newline character encountered.
            </summary>
        </member>
        <member name="F:Pulumirpc.Codegen.Pos.ColumnFieldNumber">
            <summary>Field number for the "column" field.</summary>
        </member>
        <member name="P:Pulumirpc.Codegen.Pos.Column">
             <summary>
             Column is the source code column where this position points, in unicode characters, with counting
             starting at 1.
            
             Column counts characters as they appear visually, so for example a latin letter with a combining
             diacritic mark counts as one character. This is intended for rendering visual markers against source
             code in contexts where these diacritics would be rendered in a single character cell. Technically
             speaking, Column is counting grapheme clusters as used in unicode normalization.
             </summary>
        </member>
        <member name="F:Pulumirpc.Codegen.Pos.ByteFieldNumber">
            <summary>Field number for the "byte" field.</summary>
        </member>
        <member name="P:Pulumirpc.Codegen.Pos.Byte">
            <summary>
            Byte is the byte offset into the file where the indicated character begins. This is a zero-based offset
            to the first byte of the first UTF-8 codepoint sequence in the character, and thus gives a position
            that can be resolved _without_ awareness of Unicode characters.
            </summary>
        </member>
        <member name="T:Pulumirpc.Codegen.Range">
            <summary>
            Range represents a span of characters between two positions in a source file.
            </summary>
        </member>
        <member name="F:Pulumirpc.Codegen.Range.FilenameFieldNumber">
            <summary>Field number for the "filename" field.</summary>
        </member>
        <member name="P:Pulumirpc.Codegen.Range.Filename">
            <summary>
            Filename is the name of the file into which this range's positions point.
            </summary>
        </member>
        <member name="F:Pulumirpc.Codegen.Range.StartFieldNumber">
            <summary>Field number for the "start" field.</summary>
        </member>
        <member name="P:Pulumirpc.Codegen.Range.Start">
            <summary>
            Start and End represent the bounds of this range. Start is inclusive and End is exclusive.
            </summary>
        </member>
        <member name="F:Pulumirpc.Codegen.Range.EndFieldNumber">
            <summary>Field number for the "end" field.</summary>
        </member>
        <member name="T:Pulumirpc.Codegen.Diagnostic">
            <summary>
            Diagnostic represents information to be presented to a user about an error or anomaly in parsing or evaluating configuration.
            </summary>
        </member>
        <member name="F:Pulumirpc.Codegen.Diagnostic.SeverityFieldNumber">
            <summary>Field number for the "severity" field.</summary>
        </member>
        <member name="F:Pulumirpc.Codegen.Diagnostic.SummaryFieldNumber">
            <summary>Field number for the "summary" field.</summary>
        </member>
        <member name="P:Pulumirpc.Codegen.Diagnostic.Summary">
            <summary>
            Summary and Detail contain the English-language description of the
            problem. Summary is a terse description of the general problem and
            detail is a more elaborate, often-multi-sentence description of
            the problem and what might be done to solve it.
            </summary>
        </member>
        <member name="F:Pulumirpc.Codegen.Diagnostic.DetailFieldNumber">
            <summary>Field number for the "detail" field.</summary>
        </member>
        <member name="F:Pulumirpc.Codegen.Diagnostic.SubjectFieldNumber">
            <summary>Field number for the "subject" field.</summary>
        </member>
        <member name="P:Pulumirpc.Codegen.Diagnostic.Subject">
             <summary>
             Subject and Context are both source ranges relating to the diagnostic.
            
             Subject is a tight range referring to exactly the construct that
             is problematic, while Context is an optional broader range (which should
             fully contain Subject) that ought to be shown around Subject when
             generating isolated source-code snippets in diagnostic messages.
             If Context is nil, the Subject is also the Context.
            
             Some diagnostics have no source ranges at all. If Context is set then
             Subject should always also be set.
             </summary>
        </member>
        <member name="F:Pulumirpc.Codegen.Diagnostic.ContextFieldNumber">
            <summary>Field number for the "context" field.</summary>
        </member>
        <member name="T:Pulumirpc.ConverterReflection">
            <summary>Holder for reflection information generated from pulumi/converter.proto</summary>
        </member>
        <member name="P:Pulumirpc.ConverterReflection.Descriptor">
            <summary>File descriptor for pulumi/converter.proto</summary>
        </member>
        <member name="F:Pulumirpc.ConvertStateRequest.MapperTargetFieldNumber">
            <summary>Field number for the "mapper_target" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConvertStateRequest.MapperTarget">
            <summary>
            the gRPC target of the mapper service.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConvertStateRequest.ArgsFieldNumber">
            <summary>Field number for the "args" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConvertStateRequest.Args">
            <summary>
            the args passed to `pulumi import` for this conversion. Normally used to specifiy a state file to
            import from.
            </summary>
        </member>
        <member name="T:Pulumirpc.ResourceImport">
            <summary>
            A ResourceImport specifies a resource to import.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceImport.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceImport.Type">
            <summary>
            the type token for the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceImport.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceImport.Name">
            <summary>
            the name of the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceImport.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceImport.Id">
            <summary>
            the ID of the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceImport.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceImport.Version">
            <summary>
            the provider version to use for the resource, if any.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceImport.PluginDownloadURLFieldNumber">
            <summary>Field number for the "pluginDownloadURL" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceImport.PluginDownloadURL">
            <summary>
            the provider PluginDownloadURL to use for the resource, if any.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceImport.LogicalNameFieldNumber">
            <summary>Field number for the "logical_name" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceImport.LogicalName">
            <summary>
            the logical name of the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceImport.IsComponentFieldNumber">
            <summary>Field number for the "is_component" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceImport.IsComponent">
            <summary>
            true if this is a component resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceImport.IsRemoteFieldNumber">
            <summary>Field number for the "is_remote" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceImport.IsRemote">
            <summary>
            true if this is a remote resource. Ignored if is_component is false.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConvertStateResponse.ResourcesFieldNumber">
            <summary>Field number for the "resources" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConvertStateResponse.Resources">
            <summary>
            a list of resources to import.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConvertStateResponse.DiagnosticsFieldNumber">
            <summary>Field number for the "diagnostics" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConvertStateResponse.Diagnostics">
            <summary>
            any diagnostics from state conversion.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConvertProgramRequest.SourceDirectoryFieldNumber">
            <summary>Field number for the "source_directory" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConvertProgramRequest.SourceDirectory">
            <summary>
            the source directory containing the program to convert from.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConvertProgramRequest.TargetDirectoryFieldNumber">
            <summary>Field number for the "target_directory" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConvertProgramRequest.TargetDirectory">
            <summary>
            a target directory to write the resulting PCL code and project file to.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConvertProgramRequest.MapperTargetFieldNumber">
            <summary>Field number for the "mapper_target" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConvertProgramRequest.MapperTarget">
            <summary>
            the gRPC target of the mapper service.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConvertProgramRequest.LoaderTargetFieldNumber">
            <summary>Field number for the "loader_target" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConvertProgramRequest.LoaderTarget">
            <summary>
            The target of a codegen.LoaderServer to use for loading schemas.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConvertProgramRequest.ArgsFieldNumber">
            <summary>Field number for the "args" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConvertProgramRequest.Args">
            <summary>
            the args passed to `pulumi convert` for this conversion. Normally used to specifiy a root file, or conversion options.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConvertProgramResponse.DiagnosticsFieldNumber">
            <summary>Field number for the "diagnostics" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConvertProgramResponse.Diagnostics">
            <summary>
            any diagnostics from code generation.
            </summary>
        </member>
        <member name="T:Pulumirpc.Converter">
            <summary>
            Converter is a service for converting between other ecosystems and Pulumi.
            This is currently unstable and experimental.
            </summary>
        </member>
        <member name="P:Pulumirpc.Converter.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Pulumirpc.Converter.ConverterBase">
            <summary>Base class for server-side implementations of Converter</summary>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterBase.ConvertState(Pulumirpc.ConvertStateRequest,Grpc.Core.ServerCallContext)">
            <summary>
            ConvertState converts state from the target ecosystem into a form that can be imported into Pulumi.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterBase.ConvertProgram(Pulumirpc.ConvertProgramRequest,Grpc.Core.ServerCallContext)">
            <summary>
            ConvertProgram converts a program from the target ecosystem into a form that can be used with Pulumi.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Pulumirpc.Converter.ConverterClient">
            <summary>Client for Converter</summary>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Converter</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Converter that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.ConvertState(Pulumirpc.ConvertStateRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            ConvertState converts state from the target ecosystem into a form that can be imported into Pulumi.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.ConvertState(Pulumirpc.ConvertStateRequest,Grpc.Core.CallOptions)">
            <summary>
            ConvertState converts state from the target ecosystem into a form that can be imported into Pulumi.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.ConvertStateAsync(Pulumirpc.ConvertStateRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            ConvertState converts state from the target ecosystem into a form that can be imported into Pulumi.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.ConvertStateAsync(Pulumirpc.ConvertStateRequest,Grpc.Core.CallOptions)">
            <summary>
            ConvertState converts state from the target ecosystem into a form that can be imported into Pulumi.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.ConvertProgram(Pulumirpc.ConvertProgramRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            ConvertProgram converts a program from the target ecosystem into a form that can be used with Pulumi.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.ConvertProgram(Pulumirpc.ConvertProgramRequest,Grpc.Core.CallOptions)">
            <summary>
            ConvertProgram converts a program from the target ecosystem into a form that can be used with Pulumi.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.ConvertProgramAsync(Pulumirpc.ConvertProgramRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            ConvertProgram converts a program from the target ecosystem into a form that can be used with Pulumi.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.ConvertProgramAsync(Pulumirpc.ConvertProgramRequest,Grpc.Core.CallOptions)">
            <summary>
            ConvertProgram converts a program from the target ecosystem into a form that can be used with Pulumi.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Converter.ConverterClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Pulumirpc.Converter.BindService(Pulumirpc.Converter.ConverterBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Pulumirpc.Converter.BindService(Grpc.Core.ServiceBinderBase,Pulumirpc.Converter.ConverterBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Pulumirpc.EngineReflection">
            <summary>Holder for reflection information generated from pulumi/engine.proto</summary>
        </member>
        <member name="P:Pulumirpc.EngineReflection.Descriptor">
            <summary>File descriptor for pulumi/engine.proto</summary>
        </member>
        <member name="T:Pulumirpc.LogSeverity">
            <summary>
            LogSeverity is the severity level of a log message.  Errors are fatal; all others are informational.
            </summary>
        </member>
        <member name="F:Pulumirpc.LogSeverity.Debug">
            <summary>
            a debug-level message not displayed to end-users (the default).
            </summary>
        </member>
        <member name="F:Pulumirpc.LogSeverity.Info">
            <summary>
            an informational message printed to output during resource operations.
            </summary>
        </member>
        <member name="F:Pulumirpc.LogSeverity.Warning">
            <summary>
            a warning to indicate that something went wrong.
            </summary>
        </member>
        <member name="F:Pulumirpc.LogSeverity.Error">
            <summary>
            a fatal error indicating that the tool should stop processing subsequent resource operations.
            </summary>
        </member>
        <member name="F:Pulumirpc.LogRequest.SeverityFieldNumber">
            <summary>Field number for the "severity" field.</summary>
        </member>
        <member name="P:Pulumirpc.LogRequest.Severity">
            <summary>
            the logging level of this message.
            </summary>
        </member>
        <member name="F:Pulumirpc.LogRequest.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="P:Pulumirpc.LogRequest.Message">
            <summary>
            the contents of the logged message.
            </summary>
        </member>
        <member name="F:Pulumirpc.LogRequest.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.LogRequest.Urn">
            <summary>
            the (optional) resource urn this log is associated with.
            </summary>
        </member>
        <member name="F:Pulumirpc.LogRequest.StreamIdFieldNumber">
            <summary>Field number for the "streamId" field.</summary>
        </member>
        <member name="P:Pulumirpc.LogRequest.StreamId">
             <summary>
             the (optional) stream id that a stream of log messages can be associated with. This allows
             clients to not have to buffer a large set of log messages that they all want to be
             conceptually connected.  Instead the messages can be sent as chunks (with the same stream id)
             and the end display can show the messages as they arrive, while still stitching them together
             into one total log message.
            
             0/not-given means: do not associate with any stream.
             </summary>
        </member>
        <member name="F:Pulumirpc.LogRequest.EphemeralFieldNumber">
            <summary>Field number for the "ephemeral" field.</summary>
        </member>
        <member name="P:Pulumirpc.LogRequest.Ephemeral">
            <summary>
            Optional value indicating whether this is a status message.
            </summary>
        </member>
        <member name="T:Pulumirpc.GetRootResourceRequest">
            <summary>
            empty.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetRootResourceResponse.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetRootResourceResponse.Urn">
            <summary>
            the URN of the root resource, or the empty string if one was not set.
            </summary>
        </member>
        <member name="F:Pulumirpc.SetRootResourceRequest.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.SetRootResourceRequest.Urn">
            <summary>
            the URN of the root resource, or the empty string.
            </summary>
        </member>
        <member name="T:Pulumirpc.SetRootResourceResponse">
            <summary>
            empty.
            </summary>
        </member>
        <member name="T:Pulumirpc.Engine">
            <summary>
            Engine is an auxiliary service offered to language and resource provider plugins. Its main purpose today is
            to serve as a common logging endpoint, but it also serves as a state storage mechanism for language hosts
            that can't store their own global state.
            </summary>
        </member>
        <member name="P:Pulumirpc.Engine.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Pulumirpc.Engine.EngineBase">
            <summary>Base class for server-side implementations of Engine</summary>
        </member>
        <member name="M:Pulumirpc.Engine.EngineBase.Log(Pulumirpc.LogRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Log logs a global message in the engine, including errors and warnings.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineBase.GetRootResource(Pulumirpc.GetRootResourceRequest,Grpc.Core.ServerCallContext)">
            <summary>
            GetRootResource gets the URN of the root resource, the resource that should be the root of all
            otherwise-unparented resources.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineBase.SetRootResource(Pulumirpc.SetRootResourceRequest,Grpc.Core.ServerCallContext)">
            <summary>
            SetRootResource sets the URN of the root resource.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Pulumirpc.Engine.EngineClient">
            <summary>Client for Engine</summary>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Engine</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Engine that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.Log(Pulumirpc.LogRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Log logs a global message in the engine, including errors and warnings.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.Log(Pulumirpc.LogRequest,Grpc.Core.CallOptions)">
            <summary>
            Log logs a global message in the engine, including errors and warnings.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.LogAsync(Pulumirpc.LogRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Log logs a global message in the engine, including errors and warnings.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.LogAsync(Pulumirpc.LogRequest,Grpc.Core.CallOptions)">
            <summary>
            Log logs a global message in the engine, including errors and warnings.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.GetRootResource(Pulumirpc.GetRootResourceRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetRootResource gets the URN of the root resource, the resource that should be the root of all
            otherwise-unparented resources.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.GetRootResource(Pulumirpc.GetRootResourceRequest,Grpc.Core.CallOptions)">
            <summary>
            GetRootResource gets the URN of the root resource, the resource that should be the root of all
            otherwise-unparented resources.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.GetRootResourceAsync(Pulumirpc.GetRootResourceRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetRootResource gets the URN of the root resource, the resource that should be the root of all
            otherwise-unparented resources.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.GetRootResourceAsync(Pulumirpc.GetRootResourceRequest,Grpc.Core.CallOptions)">
            <summary>
            GetRootResource gets the URN of the root resource, the resource that should be the root of all
            otherwise-unparented resources.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.SetRootResource(Pulumirpc.SetRootResourceRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            SetRootResource sets the URN of the root resource.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.SetRootResource(Pulumirpc.SetRootResourceRequest,Grpc.Core.CallOptions)">
            <summary>
            SetRootResource sets the URN of the root resource.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.SetRootResourceAsync(Pulumirpc.SetRootResourceRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            SetRootResource sets the URN of the root resource.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.SetRootResourceAsync(Pulumirpc.SetRootResourceRequest,Grpc.Core.CallOptions)">
            <summary>
            SetRootResource sets the URN of the root resource.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Engine.EngineClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Pulumirpc.Engine.BindService(Pulumirpc.Engine.EngineBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Pulumirpc.Engine.BindService(Grpc.Core.ServiceBinderBase,Pulumirpc.Engine.EngineBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Pulumirpc.ErrorsReflection">
            <summary>Holder for reflection information generated from pulumi/errors.proto</summary>
        </member>
        <member name="P:Pulumirpc.ErrorsReflection.Descriptor">
            <summary>File descriptor for pulumi/errors.proto</summary>
        </member>
        <member name="F:Pulumirpc.ErrorCause.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="F:Pulumirpc.ErrorCause.StackTraceFieldNumber">
            <summary>Field number for the "stackTrace" field.</summary>
        </member>
        <member name="T:Pulumirpc.LanguageReflection">
            <summary>Holder for reflection information generated from pulumi/language.proto</summary>
        </member>
        <member name="P:Pulumirpc.LanguageReflection.Descriptor">
            <summary>File descriptor for pulumi/language.proto</summary>
        </member>
        <member name="T:Pulumirpc.ProgramInfo">
            <summary>
            ProgramInfo are the common set of options that a language runtime needs to execute or query a program. This
            is filled in by the engine based on where the `Pulumi.yaml` file was, the `runtime.options` property, and
            the `main` property.
            </summary>
        </member>
        <member name="F:Pulumirpc.ProgramInfo.RootDirectoryFieldNumber">
            <summary>Field number for the "root_directory" field.</summary>
        </member>
        <member name="P:Pulumirpc.ProgramInfo.RootDirectory">
            <summary>
            the root of the project, where the `Pulumi.yaml` file is located.
            </summary>
        </member>
        <member name="F:Pulumirpc.ProgramInfo.ProgramDirectoryFieldNumber">
            <summary>Field number for the "program_directory" field.</summary>
        </member>
        <member name="P:Pulumirpc.ProgramInfo.ProgramDirectory">
            <summary>
            the absolute path to the directory of the program to execute. Generally, but not required to be,
            underneath the root directory.
            </summary>
        </member>
        <member name="F:Pulumirpc.ProgramInfo.EntryPointFieldNumber">
            <summary>Field number for the "entry_point" field.</summary>
        </member>
        <member name="P:Pulumirpc.ProgramInfo.EntryPoint">
            <summary>
            the entry point of the program, normally '.' meaning to just use the program directory, but can also be
            a filename inside the program directory. How that filename is interpreted, if at all, is language
            specific.
            </summary>
        </member>
        <member name="F:Pulumirpc.ProgramInfo.OptionsFieldNumber">
            <summary>Field number for the "options" field.</summary>
        </member>
        <member name="P:Pulumirpc.ProgramInfo.Options">
            <summary>
            JSON style options from the `Pulumi.yaml` runtime options section.
            </summary>
        </member>
        <member name="F:Pulumirpc.AboutRequest.InfoFieldNumber">
            <summary>Field number for the "info" field.</summary>
        </member>
        <member name="P:Pulumirpc.AboutRequest.Info">
            <summary>
            the program info to use.
            </summary>
        </member>
        <member name="T:Pulumirpc.AboutResponse">
            <summary>
            AboutResponse returns runtime information about the language.
            </summary>
        </member>
        <member name="F:Pulumirpc.AboutResponse.ExecutableFieldNumber">
            <summary>Field number for the "executable" field.</summary>
        </member>
        <member name="P:Pulumirpc.AboutResponse.Executable">
            <summary>
            the primary executable for the runtime of this language.
            </summary>
        </member>
        <member name="F:Pulumirpc.AboutResponse.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.AboutResponse.Version">
            <summary>
            the version of the runtime for this language.
            </summary>
        </member>
        <member name="F:Pulumirpc.AboutResponse.MetadataFieldNumber">
            <summary>Field number for the "metadata" field.</summary>
        </member>
        <member name="P:Pulumirpc.AboutResponse.Metadata">
            <summary>
            other information about this language.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetProgramDependenciesRequest.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetProgramDependenciesRequest.Project">
            <summary>
            the project name, the engine always sets this to "deprecated" now.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetProgramDependenciesRequest.PwdFieldNumber">
            <summary>Field number for the "pwd" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetProgramDependenciesRequest.Pwd">
            <summary>
            the program's working directory.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetProgramDependenciesRequest.ProgramFieldNumber">
            <summary>Field number for the "program" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetProgramDependenciesRequest.Program">
            <summary>
            the path to the program.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetProgramDependenciesRequest.TransitiveDependenciesFieldNumber">
            <summary>Field number for the "transitiveDependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetProgramDependenciesRequest.TransitiveDependencies">
            <summary>
            if transitive dependencies should be included in the result.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetProgramDependenciesRequest.InfoFieldNumber">
            <summary>Field number for the "info" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetProgramDependenciesRequest.Info">
            <summary>
            the program info to use to calculate dependencies.
            </summary>
        </member>
        <member name="F:Pulumirpc.DependencyInfo.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.DependencyInfo.Name">
            <summary>
            The name of the dependency.
            </summary>
        </member>
        <member name="F:Pulumirpc.DependencyInfo.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.DependencyInfo.Version">
            <summary>
            The version of the dependency.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetProgramDependenciesResponse.DependenciesFieldNumber">
            <summary>Field number for the "dependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetProgramDependenciesResponse.Dependencies">
            <summary>
            the dependencies of this program
            </summary>
        </member>
        <member name="F:Pulumirpc.GetRequiredPluginsRequest.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetRequiredPluginsRequest.Project">
            <summary>
            the project name, the engine always sets this to "deprecated" now.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetRequiredPluginsRequest.PwdFieldNumber">
            <summary>Field number for the "pwd" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetRequiredPluginsRequest.Pwd">
            <summary>
            the program's working directory.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetRequiredPluginsRequest.ProgramFieldNumber">
            <summary>Field number for the "program" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetRequiredPluginsRequest.Program">
            <summary>
            the path to the program.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetRequiredPluginsRequest.InfoFieldNumber">
            <summary>Field number for the "info" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetRequiredPluginsRequest.Info">
            <summary>
            the program info to use to calculate plugins.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetRequiredPluginsResponse.PluginsFieldNumber">
            <summary>Field number for the "plugins" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetRequiredPluginsResponse.Plugins">
            <summary>
            a list of plugins required by this program.
            </summary>
        </member>
        <member name="T:Pulumirpc.RunRequest">
            <summary>
            RunRequest asks the interpreter to execute a program.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.Project">
            <summary>
            the project name.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.StackFieldNumber">
            <summary>Field number for the "stack" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.Stack">
            <summary>
            the name of the stack being deployed into.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.PwdFieldNumber">
            <summary>Field number for the "pwd" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.Pwd">
            <summary>
            the program's working directory.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.ProgramFieldNumber">
            <summary>Field number for the "program" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.Program">
            <summary>
            the path to the program to execute.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.ArgsFieldNumber">
            <summary>Field number for the "args" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.Args">
            <summary>
            any arguments to pass to the program.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.ConfigFieldNumber">
            <summary>Field number for the "config" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.Config">
            <summary>
            the configuration variables to apply before running.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.DryRunFieldNumber">
            <summary>Field number for the "dryRun" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.DryRun">
            <summary>
            true if we're only doing a dryrun (preview).
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.ParallelFieldNumber">
            <summary>Field number for the "parallel" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.Parallel">
            <summary>
            the degree of parallelism for resource operations (&lt;=1 for serial).
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.MonitorAddressFieldNumber">
            <summary>Field number for the "monitor_address" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.MonitorAddress">
            <summary>
            the address for communicating back to the resource monitor.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.QueryModeFieldNumber">
            <summary>Field number for the "queryMode" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.QueryMode">
            <summary>
            true if we're only doing a query.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.ConfigSecretKeysFieldNumber">
            <summary>Field number for the "configSecretKeys" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.ConfigSecretKeys">
            <summary>
            the configuration keys that have secret values.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.OrganizationFieldNumber">
            <summary>Field number for the "organization" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.Organization">
            <summary>
            the organization of the stack being deployed into.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.ConfigPropertyMapFieldNumber">
            <summary>Field number for the "configPropertyMap" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.ConfigPropertyMap">
            <summary>
            the configuration variables to apply before running.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunRequest.InfoFieldNumber">
            <summary>Field number for the "info" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunRequest.Info">
            <summary>
            the program info to use to execute the program.
            </summary>
        </member>
        <member name="T:Pulumirpc.RunResponse">
            <summary>
            RunResponse is the response back from the interpreter/source back to the monitor.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunResponse.ErrorFieldNumber">
            <summary>Field number for the "error" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunResponse.Error">
            <summary>
            An unhandled error if any occurred.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunResponse.BailFieldNumber">
            <summary>Field number for the "bail" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunResponse.Bail">
            <summary>
            An error happened.  And it was reported to the user.  Work should stop immediately
            with nothing further to print to the user.  This corresponds to a "result.Bail()"
            value in the 'go' layer.
            </summary>
        </member>
        <member name="F:Pulumirpc.InstallDependenciesRequest.DirectoryFieldNumber">
            <summary>Field number for the "directory" field.</summary>
        </member>
        <member name="P:Pulumirpc.InstallDependenciesRequest.Directory">
            <summary>
            the program's working directory.
            </summary>
        </member>
        <member name="F:Pulumirpc.InstallDependenciesRequest.IsTerminalFieldNumber">
            <summary>Field number for the "is_terminal" field.</summary>
        </member>
        <member name="P:Pulumirpc.InstallDependenciesRequest.IsTerminal">
            <summary>
            if we are running in a terminal and should use ANSI codes
            </summary>
        </member>
        <member name="F:Pulumirpc.InstallDependenciesRequest.InfoFieldNumber">
            <summary>Field number for the "info" field.</summary>
        </member>
        <member name="P:Pulumirpc.InstallDependenciesRequest.Info">
            <summary>
            the program info to use to execute the plugin.
            </summary>
        </member>
        <member name="F:Pulumirpc.InstallDependenciesResponse.StdoutFieldNumber">
            <summary>Field number for the "stdout" field.</summary>
        </member>
        <member name="P:Pulumirpc.InstallDependenciesResponse.Stdout">
            <summary>
            a line of stdout text.
            </summary>
        </member>
        <member name="F:Pulumirpc.InstallDependenciesResponse.StderrFieldNumber">
            <summary>Field number for the "stderr" field.</summary>
        </member>
        <member name="P:Pulumirpc.InstallDependenciesResponse.Stderr">
            <summary>
            a line of stderr text.
            </summary>
        </member>
        <member name="F:Pulumirpc.RuntimeOptionsRequest.InfoFieldNumber">
            <summary>Field number for the "info" field.</summary>
        </member>
        <member name="P:Pulumirpc.RuntimeOptionsRequest.Info">
            <summary>
            The current program info used to evaluate which prompts should be asked.
            </summary>
        </member>
        <member name="F:Pulumirpc.RuntimeOptionPrompt.KeyFieldNumber">
            <summary>Field number for the "key" field.</summary>
        </member>
        <member name="F:Pulumirpc.RuntimeOptionPrompt.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="F:Pulumirpc.RuntimeOptionPrompt.PromptTypeFieldNumber">
            <summary>Field number for the "promptType" field.</summary>
        </member>
        <member name="F:Pulumirpc.RuntimeOptionPrompt.ChoicesFieldNumber">
            <summary>Field number for the "choices" field.</summary>
        </member>
        <member name="F:Pulumirpc.RuntimeOptionPrompt.DefaultFieldNumber">
            <summary>Field number for the "default" field.</summary>
        </member>
        <member name="T:Pulumirpc.RuntimeOptionPrompt.Types">
            <summary>Container for nested types declared in the RuntimeOptionPrompt message type.</summary>
        </member>
        <member name="F:Pulumirpc.RuntimeOptionPrompt.Types.RuntimeOptionValue.PromptTypeFieldNumber">
            <summary>Field number for the "promptType" field.</summary>
        </member>
        <member name="F:Pulumirpc.RuntimeOptionPrompt.Types.RuntimeOptionValue.StringValueFieldNumber">
            <summary>Field number for the "stringValue" field.</summary>
        </member>
        <member name="F:Pulumirpc.RuntimeOptionPrompt.Types.RuntimeOptionValue.Int32ValueFieldNumber">
            <summary>Field number for the "int32Value" field.</summary>
        </member>
        <member name="F:Pulumirpc.RuntimeOptionsResponse.PromptsFieldNumber">
            <summary>Field number for the "prompts" field.</summary>
        </member>
        <member name="P:Pulumirpc.RuntimeOptionsResponse.Prompts">
            <summary>
            additional prompts to ask the user
            </summary>
        </member>
        <member name="F:Pulumirpc.RunPluginRequest.PwdFieldNumber">
            <summary>Field number for the "pwd" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunPluginRequest.Pwd">
            <summary>
            the program's working directory.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunPluginRequest.ProgramFieldNumber">
            <summary>Field number for the "program" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunPluginRequest.Program">
            <summary>
            the path to the program to execute.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunPluginRequest.ArgsFieldNumber">
            <summary>Field number for the "args" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunPluginRequest.Args">
            <summary>
            any arguments to pass to the program.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunPluginRequest.EnvFieldNumber">
            <summary>Field number for the "env" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunPluginRequest.Env">
            <summary>
            any environment variables to set as part of the program.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunPluginRequest.InfoFieldNumber">
            <summary>Field number for the "info" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunPluginRequest.Info">
            <summary>
            the program info to use to execute the plugin.
            </summary>
        </member>
        <member name="F:Pulumirpc.RunPluginResponse.StdoutFieldNumber">
            <summary>Field number for the "stdout" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunPluginResponse.Stdout">
            <summary>
            a line of stdout text.
            </summary>
        </member>
        <member name="P:Pulumirpc.RunPluginResponse.HasStdout">
            <summary>Gets whether the "stdout" field is set</summary>
        </member>
        <member name="M:Pulumirpc.RunPluginResponse.ClearStdout">
            <summary> Clears the value of the oneof if it's currently set to "stdout" </summary>
        </member>
        <member name="F:Pulumirpc.RunPluginResponse.StderrFieldNumber">
            <summary>Field number for the "stderr" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunPluginResponse.Stderr">
            <summary>
            a line of stderr text.
            </summary>
        </member>
        <member name="P:Pulumirpc.RunPluginResponse.HasStderr">
            <summary>Gets whether the "stderr" field is set</summary>
        </member>
        <member name="M:Pulumirpc.RunPluginResponse.ClearStderr">
            <summary> Clears the value of the oneof if it's currently set to "stderr" </summary>
        </member>
        <member name="F:Pulumirpc.RunPluginResponse.ExitcodeFieldNumber">
            <summary>Field number for the "exitcode" field.</summary>
        </member>
        <member name="P:Pulumirpc.RunPluginResponse.Exitcode">
            <summary>
            the exit code of the provider.
            </summary>
        </member>
        <member name="P:Pulumirpc.RunPluginResponse.HasExitcode">
            <summary>Gets whether the "exitcode" field is set</summary>
        </member>
        <member name="M:Pulumirpc.RunPluginResponse.ClearExitcode">
            <summary> Clears the value of the oneof if it's currently set to "exitcode" </summary>
        </member>
        <member name="T:Pulumirpc.RunPluginResponse.OutputOneofCase">
            <summary>Enum of possible cases for the "output" oneof.</summary>
        </member>
        <member name="F:Pulumirpc.GenerateProgramRequest.SourceFieldNumber">
            <summary>Field number for the "source" field.</summary>
        </member>
        <member name="P:Pulumirpc.GenerateProgramRequest.Source">
            <summary>
            the PCL source of the project.
            </summary>
        </member>
        <member name="F:Pulumirpc.GenerateProgramRequest.LoaderTargetFieldNumber">
            <summary>Field number for the "loader_target" field.</summary>
        </member>
        <member name="P:Pulumirpc.GenerateProgramRequest.LoaderTarget">
            <summary>
            The target of a codegen.LoaderServer to use for loading schemas.
            </summary>
        </member>
        <member name="F:Pulumirpc.GenerateProgramResponse.DiagnosticsFieldNumber">
            <summary>Field number for the "diagnostics" field.</summary>
        </member>
        <member name="P:Pulumirpc.GenerateProgramResponse.Diagnostics">
            <summary>
            any diagnostics from code generation.
            </summary>
        </member>
        <member name="F:Pulumirpc.GenerateProgramResponse.SourceFieldNumber">
            <summary>Field number for the "source" field.</summary>
        </member>
        <member name="P:Pulumirpc.GenerateProgramResponse.Source">
            <summary>
            the generated program source code.
            </summary>
        </member>
        <member name="F:Pulumirpc.GenerateProjectRequest.SourceDirectoryFieldNumber">
            <summary>Field number for the "source_directory" field.</summary>
        </member>
        <member name="P:Pulumirpc.GenerateProjectRequest.SourceDirectory">
            <summary>
            the directory to generate the project from.
            </summary>
        </member>
        <member name="F:Pulumirpc.GenerateProjectRequest.TargetDirectoryFieldNumber">
            <summary>Field number for the "target_directory" field.</summary>
        </member>
        <member name="P:Pulumirpc.GenerateProjectRequest.TargetDirectory">
            <summary>
            the directory to generate the project in.
            </summary>
        </member>
        <member name="F:Pulumirpc.GenerateProjectRequest.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Pulumirpc.GenerateProjectRequest.Project">
            <summary>
            the JSON-encoded pulumi project file.
            </summary>
        </member>
        <member name="F:Pulumirpc.GenerateProjectRequest.StrictFieldNumber">
            <summary>Field number for the "strict" field.</summary>
        </member>
        <member name="P:Pulumirpc.GenerateProjectRequest.Strict">
            <summary>
            if PCL binding should be strict or not.
            </summary>
        </member>
        <member name="F:Pulumirpc.GenerateProjectRequest.LoaderTargetFieldNumber">
            <summary>Field number for the "loader_target" field.</summary>
        </member>
        <member name="P:Pulumirpc.GenerateProjectRequest.LoaderTarget">
            <summary>
            The target of a codegen.LoaderServer to use for loading schemas.
            </summary>
        </member>
        <member name="F:Pulumirpc.GenerateProjectRequest.LocalDependenciesFieldNumber">
            <summary>Field number for the "local_dependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.GenerateProjectRequest.LocalDependencies">
            <summary>
            local dependencies to use instead of using the package system. This is a map of package name to a local
            path of a language specific artifact to use for the SDK for that package.
            </summary>
        </member>
        <member name="F:Pulumirpc.GenerateProjectResponse.DiagnosticsFieldNumber">
            <summary>Field number for the "diagnostics" field.</summary>
        </member>
        <member name="P:Pulumirpc.GenerateProjectResponse.Diagnostics">
            <summary>
            any diagnostics from code generation.
            </summary>
        </member>
        <member name="F:Pulumirpc.GeneratePackageRequest.DirectoryFieldNumber">
            <summary>Field number for the "directory" field.</summary>
        </member>
        <member name="P:Pulumirpc.GeneratePackageRequest.Directory">
            <summary>
            the directory to generate the package in.
            </summary>
        </member>
        <member name="F:Pulumirpc.GeneratePackageRequest.SchemaFieldNumber">
            <summary>Field number for the "schema" field.</summary>
        </member>
        <member name="P:Pulumirpc.GeneratePackageRequest.Schema">
            <summary>
            the JSON-encoded schema.
            </summary>
        </member>
        <member name="F:Pulumirpc.GeneratePackageRequest.ExtraFilesFieldNumber">
            <summary>Field number for the "extra_files" field.</summary>
        </member>
        <member name="P:Pulumirpc.GeneratePackageRequest.ExtraFiles">
            <summary>
            extra files to copy to the package output.
            </summary>
        </member>
        <member name="F:Pulumirpc.GeneratePackageRequest.LoaderTargetFieldNumber">
            <summary>Field number for the "loader_target" field.</summary>
        </member>
        <member name="P:Pulumirpc.GeneratePackageRequest.LoaderTarget">
            <summary>
            The target of a codegen.LoaderServer to use for loading schemas.
            </summary>
        </member>
        <member name="F:Pulumirpc.GeneratePackageRequest.LocalDependenciesFieldNumber">
            <summary>Field number for the "local_dependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.GeneratePackageRequest.LocalDependencies">
            <summary>
            local dependencies to use instead of using the package system. This is a map of package name to a local
            path of a language specific artifact to use for the SDK for that package.
            </summary>
        </member>
        <member name="F:Pulumirpc.GeneratePackageResponse.DiagnosticsFieldNumber">
            <summary>Field number for the "diagnostics" field.</summary>
        </member>
        <member name="P:Pulumirpc.GeneratePackageResponse.Diagnostics">
            <summary>
            any diagnostics from code generation.
            </summary>
        </member>
        <member name="F:Pulumirpc.PackRequest.PackageDirectoryFieldNumber">
            <summary>Field number for the "package_directory" field.</summary>
        </member>
        <member name="P:Pulumirpc.PackRequest.PackageDirectory">
            <summary>
            the directory of a package to pack.
            </summary>
        </member>
        <member name="F:Pulumirpc.PackRequest.DestinationDirectoryFieldNumber">
            <summary>Field number for the "destination_directory" field.</summary>
        </member>
        <member name="P:Pulumirpc.PackRequest.DestinationDirectory">
            <summary>
            the directory to write the packed artifact to.
            </summary>
        </member>
        <member name="F:Pulumirpc.PackResponse.ArtifactPathFieldNumber">
            <summary>Field number for the "artifact_path" field.</summary>
        </member>
        <member name="P:Pulumirpc.PackResponse.ArtifactPath">
            <summary>
            the full path of the packed artifact.
            </summary>
        </member>
        <member name="T:Pulumirpc.LanguageRuntime">
            <summary>
            LanguageRuntime is the interface that the planning monitor uses to drive execution of an interpreter responsible
            for confguring and creating resource objects.
            </summary>
        </member>
        <member name="P:Pulumirpc.LanguageRuntime.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Pulumirpc.LanguageRuntime.LanguageRuntimeBase">
            <summary>Base class for server-side implementations of LanguageRuntime</summary>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeBase.GetRequiredPlugins(Pulumirpc.GetRequiredPluginsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            GetRequiredPlugins computes the complete set of anticipated plugins required by a program.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeBase.Run(Pulumirpc.RunRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Run executes a program and returns its result.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeBase.GetPluginInfo(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.ServerCallContext)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeBase.InstallDependencies(Pulumirpc.InstallDependenciesRequest,Grpc.Core.IServerStreamWriter{Pulumirpc.InstallDependenciesResponse},Grpc.Core.ServerCallContext)">
            <summary>
            InstallDependencies will install dependencies for the project, e.g. by running `npm install` for nodejs projects.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="responseStream">Used for sending responses back to the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeBase.RuntimeOptionsPrompts(Pulumirpc.RuntimeOptionsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            RuntimeOptionsPrompts returns a list of additional prompts to ask during `pulumi new`.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeBase.About(Pulumirpc.AboutRequest,Grpc.Core.ServerCallContext)">
            <summary>
            About returns information about the runtime for this language.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeBase.GetProgramDependencies(Pulumirpc.GetProgramDependenciesRequest,Grpc.Core.ServerCallContext)">
            <summary>
            GetProgramDependencies returns the set of dependencies required by the program.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeBase.RunPlugin(Pulumirpc.RunPluginRequest,Grpc.Core.IServerStreamWriter{Pulumirpc.RunPluginResponse},Grpc.Core.ServerCallContext)">
            <summary>
            RunPlugin executes a plugin program and returns its result asynchronously.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="responseStream">Used for sending responses back to the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeBase.GenerateProgram(Pulumirpc.GenerateProgramRequest,Grpc.Core.ServerCallContext)">
            <summary>
            GenerateProgram generates a given PCL program into a program for this language.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeBase.GenerateProject(Pulumirpc.GenerateProjectRequest,Grpc.Core.ServerCallContext)">
            <summary>
            GenerateProject generates a given PCL program into a project for this language.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeBase.GeneratePackage(Pulumirpc.GeneratePackageRequest,Grpc.Core.ServerCallContext)">
            <summary>
            GeneratePackage generates a given pulumi package into a package for this language.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeBase.Pack(Pulumirpc.PackRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Pack packs a package into a language specific artifact.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Pulumirpc.LanguageRuntime.LanguageRuntimeClient">
            <summary>Client for LanguageRuntime</summary>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for LanguageRuntime</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for LanguageRuntime that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GetRequiredPlugins(Pulumirpc.GetRequiredPluginsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetRequiredPlugins computes the complete set of anticipated plugins required by a program.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GetRequiredPlugins(Pulumirpc.GetRequiredPluginsRequest,Grpc.Core.CallOptions)">
            <summary>
            GetRequiredPlugins computes the complete set of anticipated plugins required by a program.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GetRequiredPluginsAsync(Pulumirpc.GetRequiredPluginsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetRequiredPlugins computes the complete set of anticipated plugins required by a program.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GetRequiredPluginsAsync(Pulumirpc.GetRequiredPluginsRequest,Grpc.Core.CallOptions)">
            <summary>
            GetRequiredPlugins computes the complete set of anticipated plugins required by a program.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.Run(Pulumirpc.RunRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Run executes a program and returns its result.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.Run(Pulumirpc.RunRequest,Grpc.Core.CallOptions)">
            <summary>
            Run executes a program and returns its result.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.RunAsync(Pulumirpc.RunRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Run executes a program and returns its result.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.RunAsync(Pulumirpc.RunRequest,Grpc.Core.CallOptions)">
            <summary>
            Run executes a program and returns its result.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GetPluginInfo(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GetPluginInfo(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.CallOptions)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GetPluginInfoAsync(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GetPluginInfoAsync(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.CallOptions)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.InstallDependencies(Pulumirpc.InstallDependenciesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            InstallDependencies will install dependencies for the project, e.g. by running `npm install` for nodejs projects.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.InstallDependencies(Pulumirpc.InstallDependenciesRequest,Grpc.Core.CallOptions)">
            <summary>
            InstallDependencies will install dependencies for the project, e.g. by running `npm install` for nodejs projects.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.RuntimeOptionsPrompts(Pulumirpc.RuntimeOptionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            RuntimeOptionsPrompts returns a list of additional prompts to ask during `pulumi new`.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.RuntimeOptionsPrompts(Pulumirpc.RuntimeOptionsRequest,Grpc.Core.CallOptions)">
            <summary>
            RuntimeOptionsPrompts returns a list of additional prompts to ask during `pulumi new`.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.RuntimeOptionsPromptsAsync(Pulumirpc.RuntimeOptionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            RuntimeOptionsPrompts returns a list of additional prompts to ask during `pulumi new`.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.RuntimeOptionsPromptsAsync(Pulumirpc.RuntimeOptionsRequest,Grpc.Core.CallOptions)">
            <summary>
            RuntimeOptionsPrompts returns a list of additional prompts to ask during `pulumi new`.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.About(Pulumirpc.AboutRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            About returns information about the runtime for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.About(Pulumirpc.AboutRequest,Grpc.Core.CallOptions)">
            <summary>
            About returns information about the runtime for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.AboutAsync(Pulumirpc.AboutRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            About returns information about the runtime for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.AboutAsync(Pulumirpc.AboutRequest,Grpc.Core.CallOptions)">
            <summary>
            About returns information about the runtime for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GetProgramDependencies(Pulumirpc.GetProgramDependenciesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetProgramDependencies returns the set of dependencies required by the program.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GetProgramDependencies(Pulumirpc.GetProgramDependenciesRequest,Grpc.Core.CallOptions)">
            <summary>
            GetProgramDependencies returns the set of dependencies required by the program.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GetProgramDependenciesAsync(Pulumirpc.GetProgramDependenciesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetProgramDependencies returns the set of dependencies required by the program.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GetProgramDependenciesAsync(Pulumirpc.GetProgramDependenciesRequest,Grpc.Core.CallOptions)">
            <summary>
            GetProgramDependencies returns the set of dependencies required by the program.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.RunPlugin(Pulumirpc.RunPluginRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            RunPlugin executes a plugin program and returns its result asynchronously.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.RunPlugin(Pulumirpc.RunPluginRequest,Grpc.Core.CallOptions)">
            <summary>
            RunPlugin executes a plugin program and returns its result asynchronously.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GenerateProgram(Pulumirpc.GenerateProgramRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GenerateProgram generates a given PCL program into a program for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GenerateProgram(Pulumirpc.GenerateProgramRequest,Grpc.Core.CallOptions)">
            <summary>
            GenerateProgram generates a given PCL program into a program for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GenerateProgramAsync(Pulumirpc.GenerateProgramRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GenerateProgram generates a given PCL program into a program for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GenerateProgramAsync(Pulumirpc.GenerateProgramRequest,Grpc.Core.CallOptions)">
            <summary>
            GenerateProgram generates a given PCL program into a program for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GenerateProject(Pulumirpc.GenerateProjectRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GenerateProject generates a given PCL program into a project for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GenerateProject(Pulumirpc.GenerateProjectRequest,Grpc.Core.CallOptions)">
            <summary>
            GenerateProject generates a given PCL program into a project for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GenerateProjectAsync(Pulumirpc.GenerateProjectRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GenerateProject generates a given PCL program into a project for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GenerateProjectAsync(Pulumirpc.GenerateProjectRequest,Grpc.Core.CallOptions)">
            <summary>
            GenerateProject generates a given PCL program into a project for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GeneratePackage(Pulumirpc.GeneratePackageRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GeneratePackage generates a given pulumi package into a package for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GeneratePackage(Pulumirpc.GeneratePackageRequest,Grpc.Core.CallOptions)">
            <summary>
            GeneratePackage generates a given pulumi package into a package for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GeneratePackageAsync(Pulumirpc.GeneratePackageRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GeneratePackage generates a given pulumi package into a package for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.GeneratePackageAsync(Pulumirpc.GeneratePackageRequest,Grpc.Core.CallOptions)">
            <summary>
            GeneratePackage generates a given pulumi package into a package for this language.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.Pack(Pulumirpc.PackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Pack packs a package into a language specific artifact.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.Pack(Pulumirpc.PackRequest,Grpc.Core.CallOptions)">
            <summary>
            Pack packs a package into a language specific artifact.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.PackAsync(Pulumirpc.PackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Pack packs a package into a language specific artifact.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.PackAsync(Pulumirpc.PackRequest,Grpc.Core.CallOptions)">
            <summary>
            Pack packs a package into a language specific artifact.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.LanguageRuntimeClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.BindService(Pulumirpc.LanguageRuntime.LanguageRuntimeBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Pulumirpc.LanguageRuntime.BindService(Grpc.Core.ServiceBinderBase,Pulumirpc.LanguageRuntime.LanguageRuntimeBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Pulumirpc.PluginReflection">
            <summary>Holder for reflection information generated from pulumi/plugin.proto</summary>
        </member>
        <member name="P:Pulumirpc.PluginReflection.Descriptor">
            <summary>File descriptor for pulumi/plugin.proto</summary>
        </member>
        <member name="T:Pulumirpc.PluginInfo">
            <summary>
            PluginInfo is meta-information about a plugin that is used by the system.
            </summary>
        </member>
        <member name="F:Pulumirpc.PluginInfo.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.PluginInfo.Version">
            <summary>
            the semver for this plugin.
            </summary>
        </member>
        <member name="T:Pulumirpc.PluginDependency">
            <summary>
            PluginDependency is information about a plugin that a program may depend upon.
            </summary>
        </member>
        <member name="F:Pulumirpc.PluginDependency.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.PluginDependency.Name">
            <summary>
            the name of the plugin.
            </summary>
        </member>
        <member name="F:Pulumirpc.PluginDependency.KindFieldNumber">
            <summary>Field number for the "kind" field.</summary>
        </member>
        <member name="P:Pulumirpc.PluginDependency.Kind">
            <summary>
            the kind of plugin (e.g., language, etc).
            </summary>
        </member>
        <member name="F:Pulumirpc.PluginDependency.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.PluginDependency.Version">
            <summary>
            the semver for this plugin.
            </summary>
        </member>
        <member name="F:Pulumirpc.PluginDependency.ServerFieldNumber">
            <summary>Field number for the "server" field.</summary>
        </member>
        <member name="P:Pulumirpc.PluginDependency.Server">
            <summary>
            the URL of a server that can be used to download this plugin, if needed.
            </summary>
        </member>
        <member name="F:Pulumirpc.PluginDependency.ChecksumsFieldNumber">
            <summary>Field number for the "checksums" field.</summary>
        </member>
        <member name="P:Pulumirpc.PluginDependency.Checksums">
            <summary>
            a map of the checksums for the plugin, will be empty from old language runtimes. The keys should match
            the os and architecture names used in pulumi releases, e.g. "darwin-amd64", "windows-arm64".
            </summary>
        </member>
        <member name="T:Pulumirpc.PluginAttach">
             <summary>
             PluginAttach is used to attach an already running plugin to the engine.
            
             Normally the engine starts the plugin process itself and passes the engine address as the first argumnent.
             But when debugging it can be useful to have an already running provider that the engine instead attaches
             to, this message is used so the provider can still be passed the engine address to communicate with.
             </summary>
        </member>
        <member name="F:Pulumirpc.PluginAttach.AddressFieldNumber">
            <summary>Field number for the "address" field.</summary>
        </member>
        <member name="P:Pulumirpc.PluginAttach.Address">
            <summary>
            the grpc address for the engine
            </summary>
        </member>
        <member name="T:Pulumirpc.ProviderReflection">
            <summary>Holder for reflection information generated from pulumi/provider.proto</summary>
        </member>
        <member name="P:Pulumirpc.ProviderReflection.Descriptor">
            <summary>File descriptor for pulumi/provider.proto</summary>
        </member>
        <member name="F:Pulumirpc.ParameterizeRequest.ArgsFieldNumber">
            <summary>Field number for the "args" field.</summary>
        </member>
        <member name="P:Pulumirpc.ParameterizeRequest.Args">
            <summary>
            arguments from the command line.
            </summary>
        </member>
        <member name="F:Pulumirpc.ParameterizeRequest.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="P:Pulumirpc.ParameterizeRequest.Value">
            <summary>
            values from a generated package.
            </summary>
        </member>
        <member name="T:Pulumirpc.ParameterizeRequest.ParametersOneofCase">
            <summary>Enum of possible cases for the "parameters" oneof.</summary>
        </member>
        <member name="T:Pulumirpc.ParameterizeRequest.Types">
            <summary>Container for nested types declared in the ParameterizeRequest message type.</summary>
        </member>
        <member name="F:Pulumirpc.ParameterizeRequest.Types.ParametersArgs.ArgsFieldNumber">
            <summary>Field number for the "args" field.</summary>
        </member>
        <member name="F:Pulumirpc.ParameterizeRequest.Types.ParametersValue.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.ParameterizeRequest.Types.ParametersValue.Name">
            <summary>
            The sub-package name for this sub-schema parameterization.
            </summary>
        </member>
        <member name="F:Pulumirpc.ParameterizeRequest.Types.ParametersValue.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.ParameterizeRequest.Types.ParametersValue.Version">
            <summary>
            The sub-package version for this sub-schema parameterization.
            </summary>
        </member>
        <member name="F:Pulumirpc.ParameterizeRequest.Types.ParametersValue.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="P:Pulumirpc.ParameterizeRequest.Types.ParametersValue.Value">
            <summary>
            The embedded value from the sub-package.
            </summary>
        </member>
        <member name="F:Pulumirpc.ParameterizeResponse.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.ParameterizeResponse.Name">
            <summary>
            The name of the sub-package parameterized.
            </summary>
        </member>
        <member name="F:Pulumirpc.ParameterizeResponse.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.ParameterizeResponse.Version">
            <summary>
            The version of the sub-package parameterized.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetSchemaRequest.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetSchemaRequest.Version">
            <summary>
            the schema version.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetSchemaRequest.SubpackageNameFieldNumber">
            <summary>Field number for the "subpackage_name" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetSchemaRequest.SubpackageName">
            <summary>
            the name of the sub-package to lookup
            </summary>
        </member>
        <member name="F:Pulumirpc.GetSchemaRequest.SubpackageVersionFieldNumber">
            <summary>Field number for the "subpackage_version" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetSchemaRequest.SubpackageVersion">
            <summary>
            the version of the sub-package to lookup
            </summary>
        </member>
        <member name="F:Pulumirpc.GetSchemaResponse.SchemaFieldNumber">
            <summary>Field number for the "schema" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetSchemaResponse.Schema">
            <summary>
            the JSON-encoded schema.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureRequest.VariablesFieldNumber">
            <summary>Field number for the "variables" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureRequest.Variables">
            <summary>
            a map of configuration keys to values.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureRequest.ArgsFieldNumber">
            <summary>Field number for the "args" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureRequest.Args">
            <summary>
            the input properties for the provider. Only filled in for newer providers.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureRequest.AcceptSecretsFieldNumber">
            <summary>Field number for the "acceptSecrets" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureRequest.AcceptSecrets">
            <summary>
            when true, operations should return secrets as strongly typed.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureRequest.AcceptResourcesFieldNumber">
            <summary>Field number for the "acceptResources" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureRequest.AcceptResources">
            <summary>
            when true, operations should return resources as strongly typed values to the provider.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureRequest.SendsOldInputsFieldNumber">
            <summary>Field number for the "sends_old_inputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureRequest.SendsOldInputs">
            <summary>
            when true, diff and update will be called with the old outputs and the old inputs.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureRequest.SendsOldInputsToDeleteFieldNumber">
            <summary>Field number for the "sends_old_inputs_to_delete" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureRequest.SendsOldInputsToDelete">
            <summary>
            when true, delete will be called with the old outputs and the old inputs.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureResponse.AcceptSecretsFieldNumber">
            <summary>Field number for the "acceptSecrets" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureResponse.AcceptSecrets">
            <summary>
            when true, the engine should pass secrets as strongly typed values to the provider.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureResponse.SupportsPreviewFieldNumber">
            <summary>Field number for the "supportsPreview" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureResponse.SupportsPreview">
            <summary>
            when true, the engine should invoke create and update with preview=true during previews.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureResponse.AcceptResourcesFieldNumber">
            <summary>Field number for the "acceptResources" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureResponse.AcceptResources">
            <summary>
            when true, the engine should pass resources as strongly typed values to the provider.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureResponse.AcceptOutputsFieldNumber">
            <summary>Field number for the "acceptOutputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureResponse.AcceptOutputs">
            <summary>
            when true, the engine should pass output values to the provider.
            </summary>
        </member>
        <member name="T:Pulumirpc.ConfigureErrorMissingKeys">
            <summary>
            ConfigureErrorMissingKeys is sent as a Detail on an error returned from `ResourceProvider.Configure`.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureErrorMissingKeys.MissingKeysFieldNumber">
            <summary>Field number for the "missingKeys" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureErrorMissingKeys.MissingKeys">
            <summary>
            a list of required configuration keys that were not supplied.
            </summary>
        </member>
        <member name="T:Pulumirpc.ConfigureErrorMissingKeys.Types">
            <summary>Container for nested types declared in the ConfigureErrorMissingKeys message type.</summary>
        </member>
        <member name="F:Pulumirpc.ConfigureErrorMissingKeys.Types.MissingKey.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureErrorMissingKeys.Types.MissingKey.Name">
            <summary>
            the Pulumi name (not the provider name!) of the missing config key.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConfigureErrorMissingKeys.Types.MissingKey.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConfigureErrorMissingKeys.Types.MissingKey.Description">
            <summary>
            a description of the missing config key, as reported by the provider.
            </summary>
        </member>
        <member name="F:Pulumirpc.InvokeRequest.TokFieldNumber">
            <summary>Field number for the "tok" field.</summary>
        </member>
        <member name="P:Pulumirpc.InvokeRequest.Tok">
            <summary>
            the function token to invoke.
            </summary>
        </member>
        <member name="F:Pulumirpc.InvokeRequest.ArgsFieldNumber">
            <summary>Field number for the "args" field.</summary>
        </member>
        <member name="P:Pulumirpc.InvokeRequest.Args">
            <summary>
            the arguments for the function invocation.
            </summary>
        </member>
        <member name="F:Pulumirpc.InvokeResponse.ReturnFieldNumber">
            <summary>Field number for the "return" field.</summary>
        </member>
        <member name="P:Pulumirpc.InvokeResponse.Return">
            <summary>
            the returned values, if invoke was successful.
            </summary>
        </member>
        <member name="F:Pulumirpc.InvokeResponse.FailuresFieldNumber">
            <summary>Field number for the "failures" field.</summary>
        </member>
        <member name="P:Pulumirpc.InvokeResponse.Failures">
            <summary>
            the failures if any arguments didn't pass verification.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.TokFieldNumber">
            <summary>Field number for the "tok" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.Tok">
            <summary>
            the function token to invoke.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.ArgsFieldNumber">
            <summary>Field number for the "args" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.Args">
            <summary>
            the arguments for the function invocation.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.ArgDependenciesFieldNumber">
            <summary>Field number for the "argDependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.ArgDependencies">
            <summary>
            a map from argument keys to the dependencies of the argument.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.Project">
            <summary>
            the project name.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.StackFieldNumber">
            <summary>Field number for the "stack" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.Stack">
            <summary>
            the name of the stack being deployed into.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.ConfigFieldNumber">
            <summary>Field number for the "config" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.Config">
            <summary>
            the configuration variables to apply before running.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.ConfigSecretKeysFieldNumber">
            <summary>Field number for the "configSecretKeys" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.ConfigSecretKeys">
            <summary>
            the configuration keys that have secret values.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.DryRunFieldNumber">
            <summary>Field number for the "dryRun" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.DryRun">
            <summary>
            true if we're only doing a dryrun (preview).
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.ParallelFieldNumber">
            <summary>Field number for the "parallel" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.Parallel">
            <summary>
            the degree of parallelism for resource operations (&lt;=1 for serial).
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.MonitorEndpointFieldNumber">
            <summary>Field number for the "monitorEndpoint" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.MonitorEndpoint">
            <summary>
            the address for communicating back to the resource monitor.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.OrganizationFieldNumber">
            <summary>Field number for the "organization" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.Organization">
            <summary>
            the organization of the stack being deployed into.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.AcceptsOutputValuesFieldNumber">
            <summary>Field number for the "accepts_output_values" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.AcceptsOutputValues">
            <summary>
            the engine can be passed output values back, returnDependencies can be left blank if returning output values.
            </summary>
        </member>
        <member name="T:Pulumirpc.CallRequest.Types">
            <summary>Container for nested types declared in the CallRequest message type.</summary>
        </member>
        <member name="T:Pulumirpc.CallRequest.Types.ArgumentDependencies">
            <summary>
            ArgumentDependencies describes the resources that a particular argument depends on.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallRequest.Types.ArgumentDependencies.UrnsFieldNumber">
            <summary>Field number for the "urns" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallRequest.Types.ArgumentDependencies.Urns">
            <summary>
            A list of URNs this argument depends on.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallResponse.ReturnFieldNumber">
            <summary>Field number for the "return" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallResponse.Return">
            <summary>
            the returned values, if call was successful.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallResponse.ReturnDependenciesFieldNumber">
            <summary>Field number for the "returnDependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallResponse.ReturnDependencies">
            <summary>
            a map from return value keys to the dependencies of the return value.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallResponse.FailuresFieldNumber">
            <summary>Field number for the "failures" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallResponse.Failures">
            <summary>
            the failures if any arguments didn't pass verification.
            </summary>
        </member>
        <member name="T:Pulumirpc.CallResponse.Types">
            <summary>Container for nested types declared in the CallResponse message type.</summary>
        </member>
        <member name="T:Pulumirpc.CallResponse.Types.ReturnDependencies">
            <summary>
            ReturnDependencies describes the resources that a particular return value depends on.
            </summary>
        </member>
        <member name="F:Pulumirpc.CallResponse.Types.ReturnDependencies.UrnsFieldNumber">
            <summary>Field number for the "urns" field.</summary>
        </member>
        <member name="P:Pulumirpc.CallResponse.Types.ReturnDependencies.Urns">
            <summary>
            A list of URNs this return value depends on.
            </summary>
        </member>
        <member name="F:Pulumirpc.CheckRequest.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.CheckRequest.Urn">
            <summary>
            the Pulumi URN for this resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.CheckRequest.OldsFieldNumber">
            <summary>Field number for the "olds" field.</summary>
        </member>
        <member name="P:Pulumirpc.CheckRequest.Olds">
            <summary>
            the old Pulumi inputs for this resource, if any.
            </summary>
        </member>
        <member name="F:Pulumirpc.CheckRequest.NewsFieldNumber">
            <summary>Field number for the "news" field.</summary>
        </member>
        <member name="P:Pulumirpc.CheckRequest.News">
            <summary>
            the new Pulumi inputs for this resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.CheckRequest.RandomSeedFieldNumber">
            <summary>Field number for the "randomSeed" field.</summary>
        </member>
        <member name="P:Pulumirpc.CheckRequest.RandomSeed">
            <summary>
            a deterministically random hash, primarily intended for global unique naming.
            </summary>
        </member>
        <member name="F:Pulumirpc.CheckResponse.InputsFieldNumber">
            <summary>Field number for the "inputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.CheckResponse.Inputs">
            <summary>
            the provider inputs for this resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.CheckResponse.FailuresFieldNumber">
            <summary>Field number for the "failures" field.</summary>
        </member>
        <member name="P:Pulumirpc.CheckResponse.Failures">
            <summary>
            any validation failures that occurred.
            </summary>
        </member>
        <member name="F:Pulumirpc.CheckFailure.PropertyFieldNumber">
            <summary>Field number for the "property" field.</summary>
        </member>
        <member name="P:Pulumirpc.CheckFailure.Property">
            <summary>
            the property that failed validation.
            </summary>
        </member>
        <member name="F:Pulumirpc.CheckFailure.ReasonFieldNumber">
            <summary>Field number for the "reason" field.</summary>
        </member>
        <member name="P:Pulumirpc.CheckFailure.Reason">
            <summary>
            the reason that the property failed validation.
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffRequest.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffRequest.Id">
            <summary>
            the ID of the resource to diff.
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffRequest.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffRequest.Urn">
            <summary>
            the Pulumi URN for this resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffRequest.OldsFieldNumber">
            <summary>Field number for the "olds" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffRequest.Olds">
            <summary>
            the old output values of resource to diff.
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffRequest.NewsFieldNumber">
            <summary>Field number for the "news" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffRequest.News">
            <summary>
            the new input values of resource to diff.
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffRequest.IgnoreChangesFieldNumber">
            <summary>Field number for the "ignoreChanges" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffRequest.IgnoreChanges">
            <summary>
            a set of property paths that should be treated as unchanged.
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffRequest.OldInputsFieldNumber">
            <summary>Field number for the "old_inputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffRequest.OldInputs">
            <summary>
            the old input values of the resource to diff.
            </summary>
        </member>
        <member name="F:Pulumirpc.PropertyDiff.KindFieldNumber">
            <summary>Field number for the "kind" field.</summary>
        </member>
        <member name="P:Pulumirpc.PropertyDiff.Kind">
            <summary>
            The kind of diff asdsociated with this property.
            </summary>
        </member>
        <member name="F:Pulumirpc.PropertyDiff.InputDiffFieldNumber">
            <summary>Field number for the "inputDiff" field.</summary>
        </member>
        <member name="P:Pulumirpc.PropertyDiff.InputDiff">
            <summary>
            The difference is between old and new inputs, not old and new state.
            </summary>
        </member>
        <member name="T:Pulumirpc.PropertyDiff.Types">
            <summary>Container for nested types declared in the PropertyDiff message type.</summary>
        </member>
        <member name="F:Pulumirpc.PropertyDiff.Types.Kind.Add">
            <summary>
            this property was added
            </summary>
        </member>
        <member name="F:Pulumirpc.PropertyDiff.Types.Kind.AddReplace">
            <summary>
            this property was added, and this change requires a replace
            </summary>
        </member>
        <member name="F:Pulumirpc.PropertyDiff.Types.Kind.Delete">
            <summary>
            this property was removed
            </summary>
        </member>
        <member name="F:Pulumirpc.PropertyDiff.Types.Kind.DeleteReplace">
            <summary>
            this property was removed, and this change requires a replace
            </summary>
        </member>
        <member name="F:Pulumirpc.PropertyDiff.Types.Kind.Update">
            <summary>
            this property's value was changed
            </summary>
        </member>
        <member name="F:Pulumirpc.PropertyDiff.Types.Kind.UpdateReplace">
            <summary>
            this property's value was changed, and this change requires a replace
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffResponse.ReplacesFieldNumber">
            <summary>Field number for the "replaces" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffResponse.Replaces">
            <summary>
            if this update requires a replacement, the set of properties triggering it.
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffResponse.StablesFieldNumber">
            <summary>Field number for the "stables" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffResponse.Stables">
            <summary>
            an optional list of properties that will not ever change.
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffResponse.DeleteBeforeReplaceFieldNumber">
            <summary>Field number for the "deleteBeforeReplace" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffResponse.DeleteBeforeReplace">
            <summary>
            if true, this resource must be deleted before replacing it.
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffResponse.ChangesFieldNumber">
            <summary>Field number for the "changes" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffResponse.Changes">
            <summary>
            if true, this diff represents an actual difference and thus requires an update.
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffResponse.DiffsFieldNumber">
            <summary>Field number for the "diffs" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffResponse.Diffs">
            <summary>
            a list of the properties that changed.
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffResponse.DetailedDiffFieldNumber">
            <summary>Field number for the "detailedDiff" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffResponse.DetailedDiff">
             <summary>
             detailedDiff is an optional field that contains map from each changed property to the type of the change.
            
             The keys of this map are property paths. These paths are essentially Javascript property access expressions
             in which all elements are literals, and obey the following EBNF-ish grammar:
            
               propertyName := [a-zA-Z_$] { [a-zA-Z0-9_$] }
               quotedPropertyName := '"' ( '\' '"' | [^"] ) { ( '\' '"' | [^"] ) } '"'
               arrayIndex := { [0-9] }
            
               propertyIndex := '[' ( quotedPropertyName | arrayIndex ) ']'
               rootProperty := ( propertyName | propertyIndex )
               propertyAccessor := ( ( '.' propertyName ) |  propertyIndex )
               path := rootProperty { propertyAccessor }
            
             Examples of valid keys:
             - root
             - root.nested
             - root["nested"]
             - root.double.nest
             - root["double"].nest
             - root["double"]["nest"]
             - root.array[0]
             - root.array[100]
             - root.array[0].nested
             - root.array[0][1].nested
             - root.nested.array[0].double[1]
             - root["key with \"escaped\" quotes"]
             - root["key with a ."]
             - ["root key with \"escaped\" quotes"].nested
             - ["root key with a ."][100]
             </summary>
        </member>
        <member name="F:Pulumirpc.DiffResponse.HasDetailedDiffFieldNumber">
            <summary>Field number for the "hasDetailedDiff" field.</summary>
        </member>
        <member name="P:Pulumirpc.DiffResponse.HasDetailedDiff">
            <summary>
            true if this response contains a detailed diff.
            </summary>
        </member>
        <member name="T:Pulumirpc.DiffResponse.Types">
            <summary>Container for nested types declared in the DiffResponse message type.</summary>
        </member>
        <member name="F:Pulumirpc.DiffResponse.Types.DiffChanges.DiffUnknown">
            <summary>
            unknown whether there are changes or not (legacy behavior).
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffResponse.Types.DiffChanges.DiffNone">
            <summary>
            the diff was performed, and no changes were detected that require an update.
            </summary>
        </member>
        <member name="F:Pulumirpc.DiffResponse.Types.DiffChanges.DiffSome">
            <summary>
            the diff was performed, and changes were detected that require an update or replacement.
            </summary>
        </member>
        <member name="F:Pulumirpc.CreateRequest.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.CreateRequest.Urn">
            <summary>
            the Pulumi URN for this resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.CreateRequest.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.CreateRequest.Properties">
            <summary>
            the provider inputs to set during creation.
            </summary>
        </member>
        <member name="F:Pulumirpc.CreateRequest.TimeoutFieldNumber">
            <summary>Field number for the "timeout" field.</summary>
        </member>
        <member name="P:Pulumirpc.CreateRequest.Timeout">
            <summary>
            the create request timeout represented in seconds.
            </summary>
        </member>
        <member name="F:Pulumirpc.CreateRequest.PreviewFieldNumber">
            <summary>Field number for the "preview" field.</summary>
        </member>
        <member name="P:Pulumirpc.CreateRequest.Preview">
            <summary>
            true if this is a preview and the provider should not actually create the resource.
            </summary>
        </member>
        <member name="T:Pulumirpc.CreateResponse">
            <summary>
            NOTE: The partial-update-error equivalent of this message is `ErrorResourceInitFailed`.
            </summary>
        </member>
        <member name="F:Pulumirpc.CreateResponse.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Pulumirpc.CreateResponse.Id">
            <summary>
            the ID of the created resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.CreateResponse.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.CreateResponse.Properties">
            <summary>
            any properties that were computed during creation.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadRequest.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadRequest.Id">
            <summary>
            the ID of the resource to read.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadRequest.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadRequest.Urn">
            <summary>
            the Pulumi URN for this resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadRequest.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadRequest.Properties">
            <summary>
            the current state (sufficiently complete to identify the resource).
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadRequest.InputsFieldNumber">
            <summary>Field number for the "inputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadRequest.Inputs">
            <summary>
            the current inputs, if any (only populated during refresh).
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResponse.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResponse.Id">
            <summary>
            the ID of the resource read back (or empty if missing).
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResponse.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResponse.Properties">
            <summary>
            the state of the resource read from the live environment.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResponse.InputsFieldNumber">
            <summary>Field number for the "inputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResponse.Inputs">
            <summary>
            the inputs for this resource that would be returned from Check.
            </summary>
        </member>
        <member name="T:Pulumirpc.UpdateRequest">
            <summary>
            NOTE: The partial-update-error equivalent of this message is `ErrorResourceInitFailed`.
            </summary>
        </member>
        <member name="F:Pulumirpc.UpdateRequest.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Pulumirpc.UpdateRequest.Id">
            <summary>
            the ID of the resource to update.
            </summary>
        </member>
        <member name="F:Pulumirpc.UpdateRequest.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.UpdateRequest.Urn">
            <summary>
            the Pulumi URN for this resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.UpdateRequest.OldsFieldNumber">
            <summary>Field number for the "olds" field.</summary>
        </member>
        <member name="P:Pulumirpc.UpdateRequest.Olds">
            <summary>
            the old values of provider inputs for the resource to update.
            </summary>
        </member>
        <member name="F:Pulumirpc.UpdateRequest.NewsFieldNumber">
            <summary>Field number for the "news" field.</summary>
        </member>
        <member name="P:Pulumirpc.UpdateRequest.News">
            <summary>
            the new values of provider inputs for the resource to update.
            </summary>
        </member>
        <member name="F:Pulumirpc.UpdateRequest.TimeoutFieldNumber">
            <summary>Field number for the "timeout" field.</summary>
        </member>
        <member name="P:Pulumirpc.UpdateRequest.Timeout">
            <summary>
            the update request timeout represented in seconds.
            </summary>
        </member>
        <member name="F:Pulumirpc.UpdateRequest.IgnoreChangesFieldNumber">
            <summary>Field number for the "ignoreChanges" field.</summary>
        </member>
        <member name="P:Pulumirpc.UpdateRequest.IgnoreChanges">
            <summary>
            a set of property paths that should be treated as unchanged.
            </summary>
        </member>
        <member name="F:Pulumirpc.UpdateRequest.PreviewFieldNumber">
            <summary>Field number for the "preview" field.</summary>
        </member>
        <member name="P:Pulumirpc.UpdateRequest.Preview">
            <summary>
            true if this is a preview and the provider should not actually create the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.UpdateRequest.OldInputsFieldNumber">
            <summary>Field number for the "old_inputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.UpdateRequest.OldInputs">
            <summary>
            the old input values of the resource to diff.
            </summary>
        </member>
        <member name="F:Pulumirpc.UpdateResponse.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.UpdateResponse.Properties">
            <summary>
            any properties that were computed during updating.
            </summary>
        </member>
        <member name="F:Pulumirpc.DeleteRequest.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Pulumirpc.DeleteRequest.Id">
            <summary>
            the ID of the resource to delete.
            </summary>
        </member>
        <member name="F:Pulumirpc.DeleteRequest.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.DeleteRequest.Urn">
            <summary>
            the Pulumi URN for this resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.DeleteRequest.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.DeleteRequest.Properties">
            <summary>
            the current properties on the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.DeleteRequest.TimeoutFieldNumber">
            <summary>Field number for the "timeout" field.</summary>
        </member>
        <member name="P:Pulumirpc.DeleteRequest.Timeout">
            <summary>
            the delete request timeout represented in seconds.
            </summary>
        </member>
        <member name="F:Pulumirpc.DeleteRequest.OldInputsFieldNumber">
            <summary>Field number for the "old_inputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.DeleteRequest.OldInputs">
            <summary>
            the old input values of the resource to delete.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Project">
            <summary>
            the project name.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.StackFieldNumber">
            <summary>Field number for the "stack" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Stack">
            <summary>
            the name of the stack being deployed into.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.ConfigFieldNumber">
            <summary>Field number for the "config" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Config">
            <summary>
            the configuration variables to apply before running.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.DryRunFieldNumber">
            <summary>Field number for the "dryRun" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.DryRun">
            <summary>
            true if we're only doing a dryrun (preview).
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.ParallelFieldNumber">
            <summary>Field number for the "parallel" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Parallel">
            <summary>
            the degree of parallelism for resource operations (&lt;=1 for serial).
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.MonitorEndpointFieldNumber">
            <summary>Field number for the "monitorEndpoint" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.MonitorEndpoint">
            <summary>
            the address for communicating back to the resource monitor.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Type">
            <summary>
            the type of the object allocated.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Name">
            <summary>
            the name, for URN purposes, of the object.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Parent">
            <summary>
            an optional parent URN that this child resource belongs to.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.InputsFieldNumber">
            <summary>Field number for the "inputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Inputs">
            <summary>
            the inputs to the resource constructor.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.InputDependenciesFieldNumber">
            <summary>Field number for the "inputDependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.InputDependencies">
            <summary>
            a map from property keys to the dependencies of the property.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.ProvidersFieldNumber">
            <summary>Field number for the "providers" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Providers">
            <summary>
            the map of providers to use for this resource's children.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.DependenciesFieldNumber">
            <summary>Field number for the "dependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Dependencies">
            <summary>
            a list of URNs that this resource depends on, as observed by the language host.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.ConfigSecretKeysFieldNumber">
            <summary>Field number for the "configSecretKeys" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.ConfigSecretKeys">
            <summary>
            the configuration keys that have secret values.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.OrganizationFieldNumber">
            <summary>Field number for the "organization" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Organization">
            <summary>
            the organization of the stack being deployed into.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.ProtectFieldNumber">
            <summary>Field number for the "protect" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Protect">
            <summary>
            Resource options:
            Do not change field IDs. Add new fields at the end.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.AliasesFieldNumber">
            <summary>Field number for the "aliases" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Aliases">
            <summary>
            a list of additional URNs that shoud be considered the same.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.AdditionalSecretOutputsFieldNumber">
            <summary>Field number for the "additionalSecretOutputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.AdditionalSecretOutputs">
            <summary>
            additional output properties that should be treated as secrets.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.CustomTimeoutsFieldNumber">
            <summary>Field number for the "customTimeouts" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.CustomTimeouts">
            <summary>
            default timeouts for CRUD operations on this resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.DeletedWithFieldNumber">
            <summary>Field number for the "deletedWith" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.DeletedWith">
            <summary>
            URN of a resource that, if deleted, also deletes this resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.DeleteBeforeReplaceFieldNumber">
            <summary>Field number for the "deleteBeforeReplace" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.DeleteBeforeReplace">
            <summary>
            whether to delete the resource before replacing it.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.IgnoreChangesFieldNumber">
            <summary>Field number for the "ignoreChanges" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.IgnoreChanges">
            <summary>
            properties that should be ignored during a diff
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.ReplaceOnChangesFieldNumber">
            <summary>Field number for the "replaceOnChanges" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.ReplaceOnChanges">
            <summary>
            properties that, when changed, trigger a replacement
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.RetainOnDeleteFieldNumber">
            <summary>Field number for the "retainOnDelete" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.RetainOnDelete">
            <summary>
            whether to retain the resource in the cloud provider when it is deleted
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.AcceptsOutputValuesFieldNumber">
            <summary>Field number for the "accepts_output_values" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.AcceptsOutputValues">
            <summary>
            the engine can be passed output values back, stateDependencies can be left blank if returning output values.
            </summary>
        </member>
        <member name="T:Pulumirpc.ConstructRequest.Types">
            <summary>Container for nested types declared in the ConstructRequest message type.</summary>
        </member>
        <member name="T:Pulumirpc.ConstructRequest.Types.PropertyDependencies">
            <summary>
            PropertyDependencies describes the resources that a particular property depends on.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.Types.PropertyDependencies.UrnsFieldNumber">
            <summary>Field number for the "urns" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructRequest.Types.PropertyDependencies.Urns">
            <summary>
            A list of URNs this property depends on.
            </summary>
        </member>
        <member name="T:Pulumirpc.ConstructRequest.Types.CustomTimeouts">
             <summary>
             CustomTimeouts specifies timeouts for resource provisioning operations.
             Use it with the [Timeouts] option when creating new resources
             to override default timeouts.
            
             Each timeout is specified as a duration string such as,
             "5ms" (5 milliseconds), "40s" (40 seconds),
             and "1m30s" (1 minute, 30 seconds).
            
             The following units are accepted.
            
               - ns: nanoseconds
               - us: microseconds
               - µs: microseconds
               - ms: milliseconds
               - s: seconds
               - m: minutes
               - h: hours
             </summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.Types.CustomTimeouts.CreateFieldNumber">
            <summary>Field number for the "create" field.</summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.Types.CustomTimeouts.UpdateFieldNumber">
            <summary>Field number for the "update" field.</summary>
        </member>
        <member name="F:Pulumirpc.ConstructRequest.Types.CustomTimeouts.DeleteFieldNumber">
            <summary>Field number for the "delete" field.</summary>
        </member>
        <member name="F:Pulumirpc.ConstructResponse.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructResponse.Urn">
            <summary>
            the URN of the component resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructResponse.StateFieldNumber">
            <summary>Field number for the "state" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructResponse.State">
            <summary>
            any properties that were computed during construction.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructResponse.StateDependenciesFieldNumber">
            <summary>Field number for the "stateDependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructResponse.StateDependencies">
            <summary>
            a map from property keys to the dependencies of the property.
            </summary>
        </member>
        <member name="T:Pulumirpc.ConstructResponse.Types">
            <summary>Container for nested types declared in the ConstructResponse message type.</summary>
        </member>
        <member name="T:Pulumirpc.ConstructResponse.Types.PropertyDependencies">
            <summary>
            PropertyDependencies describes the resources that a particular property depends on.
            </summary>
        </member>
        <member name="F:Pulumirpc.ConstructResponse.Types.PropertyDependencies.UrnsFieldNumber">
            <summary>Field number for the "urns" field.</summary>
        </member>
        <member name="P:Pulumirpc.ConstructResponse.Types.PropertyDependencies.Urns">
            <summary>
            A list of URNs this property depends on.
            </summary>
        </member>
        <member name="T:Pulumirpc.ErrorResourceInitFailed">
            <summary>
            ErrorResourceInitFailed is sent as a Detail `ResourceProvider.{Create, Update}` fail because a
            resource was created successfully, but failed to initialize.
            </summary>
        </member>
        <member name="F:Pulumirpc.ErrorResourceInitFailed.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Pulumirpc.ErrorResourceInitFailed.Id">
            <summary>
            the ID of the created resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ErrorResourceInitFailed.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.ErrorResourceInitFailed.Properties">
            <summary>
            any properties that were computed during updating.
            </summary>
        </member>
        <member name="F:Pulumirpc.ErrorResourceInitFailed.ReasonsFieldNumber">
            <summary>Field number for the "reasons" field.</summary>
        </member>
        <member name="P:Pulumirpc.ErrorResourceInitFailed.Reasons">
            <summary>
            error messages associated with initialization failure.
            </summary>
        </member>
        <member name="F:Pulumirpc.ErrorResourceInitFailed.InputsFieldNumber">
            <summary>Field number for the "inputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.ErrorResourceInitFailed.Inputs">
            <summary>
            the current inputs to this resource (only applicable for Read)
            </summary>
        </member>
        <member name="T:Pulumirpc.GetMappingRequest">
            <summary>
            GetMappingRequest allows providers to return ecosystem specific information to allow the provider to be
            converted from a source markup to Pulumi. It's expected that provider bridges that target a given ecosystem
            (e.g. Terraform, Kubernetes) would also publish a conversion plugin to convert markup from that ecosystem
            to Pulumi, using the bridged providers.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetMappingRequest.KeyFieldNumber">
            <summary>Field number for the "key" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetMappingRequest.Key">
            <summary>
            the conversion key for the mapping being requested.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetMappingRequest.ProviderFieldNumber">
            <summary>Field number for the "provider" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetMappingRequest.Provider">
            <summary>
            the optional provider key for the mapping being requested, if this is empty the provider should assume this
            request is from an old engine from before GetMappings and should return it's "primary" mapping. If this is set
            then the `provider` field in GetMappingResponse should be the same.
            </summary>
        </member>
        <member name="T:Pulumirpc.GetMappingResponse">
            <summary>
            GetMappingResponse returns convert plugin specific data for this provider. This will normally be human
            readable JSON, but the engine doesn't mandate any form.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetMappingResponse.ProviderFieldNumber">
            <summary>Field number for the "provider" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetMappingResponse.Provider">
            <summary>
            the provider key this is mapping for. For example the Pulumi provider "terraform-template" would return "template" for this.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetMappingResponse.DataFieldNumber">
            <summary>Field number for the "data" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetMappingResponse.Data">
            <summary>
            the conversion plugin specific data.
            </summary>
        </member>
        <member name="T:Pulumirpc.GetMappingsRequest">
            <summary>
            GetMappingsRequest allows providers to return ecosystem specific information without having to send back large data
            blobs for provider mappings that the engine doesn't then need.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetMappingsRequest.KeyFieldNumber">
            <summary>Field number for the "key" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetMappingsRequest.Key">
            <summary>
            the conversion key for the mapping being requested.
            </summary>
        </member>
        <member name="T:Pulumirpc.GetMappingsResponse">
            <summary>
            GetMappingsRequest returns a list of providers that this provider can provide mapping information for.
            </summary>
        </member>
        <member name="F:Pulumirpc.GetMappingsResponse.ProvidersFieldNumber">
            <summary>Field number for the "providers" field.</summary>
        </member>
        <member name="P:Pulumirpc.GetMappingsResponse.Providers">
            <summary>
            the provider keys this provider can supply mappings for. For example the Pulumi provider "terraform-template"
            would return ["template"] for this.
            </summary>
        </member>
        <member name="T:Pulumirpc.ResourceProvider">
            <summary>
            ResourceProvider is a service that understands how to create, read, update, or delete resources for types defined
            within a single package.  It is driven by the overall planning engine in response to resource diffs.
            </summary>
        </member>
        <member name="P:Pulumirpc.ResourceProvider.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Pulumirpc.ResourceProvider.ResourceProviderBase">
            <summary>Base class for server-side implementations of ResourceProvider</summary>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Parameterize(Pulumirpc.ParameterizeRequest,Grpc.Core.ServerCallContext)">
             <summary>
             Parameterize takes either a string array of command line inputs or a value embedded from sdk generation.
            
             Providers can be parameterized with either multiple extension packages (which don't define their own provider
             resources), or with a replacement package (which does define its own provider resource).
            
             Parameterize may be called multiple times for extension packages, but for a replacement package it will only be
             called once. Extension packages may even be called multiple times for the same package name, but with different
             versions.
            
             Parameterize should work the same for both the `ParametersArgs` input and the `ParametersValue` input. Either way
             should return the sub-package name and version (which for `ParametersValue` should match the given input).
             
             For extension resources their CRUD operations will include the version of which sub-package they correspond to.
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.GetSchema(Pulumirpc.GetSchemaRequest,Grpc.Core.ServerCallContext)">
            <summary>
            GetSchema fetches the schema for this resource provider.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.CheckConfig(Pulumirpc.CheckRequest,Grpc.Core.ServerCallContext)">
            <summary>
            CheckConfig validates the configuration for this resource provider.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.DiffConfig(Pulumirpc.DiffRequest,Grpc.Core.ServerCallContext)">
            <summary>
            DiffConfig checks the impact a hypothetical change to this provider's configuration will have on the provider.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Configure(Pulumirpc.ConfigureRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Configure configures the resource provider with "globals" that control its behavior.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Invoke(Pulumirpc.InvokeRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Invoke dynamically executes a built-in function in the provider.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.StreamInvoke(Pulumirpc.InvokeRequest,Grpc.Core.IServerStreamWriter{Pulumirpc.InvokeResponse},Grpc.Core.ServerCallContext)">
            <summary>
            StreamInvoke dynamically executes a built-in function in the provider, which returns a stream
            of responses.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="responseStream">Used for sending responses back to the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Call(Pulumirpc.CallRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Call dynamically executes a method in the provider associated with a component resource.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Check(Pulumirpc.CheckRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Check validates that the given property bag is valid for a resource of the given type and returns the inputs
            that should be passed to successive calls to Diff, Create, or Update for this resource. As a rule, the provider
            inputs returned by a call to Check should preserve the original representation of the properties as present in
            the program inputs. Though this rule is not required for correctness, violations thereof can negatively impact
            the end-user experience, as the provider inputs are using for detecting and rendering diffs.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Diff(Pulumirpc.DiffRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Diff checks what impacts a hypothetical update will have on the resource's properties.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Create(Pulumirpc.CreateRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Create allocates a new instance of the provided resource and returns its unique ID afterwards.  (The input ID
            must be blank.)  If this call fails, the resource must not have been created (i.e., it is "transactional").
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Read(Pulumirpc.ReadRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Read the current live state associated with a resource.  Enough state must be include in the inputs to uniquely
            identify the resource; this is typically just the resource ID, but may also include some properties.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Update(Pulumirpc.UpdateRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Update updates an existing resource with new values.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Delete(Pulumirpc.DeleteRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Delete tears down an existing resource with the given ID.  If it fails, the resource is assumed to still exist.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Construct(Pulumirpc.ConstructRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Construct creates a new instance of the provided component resource and returns its state.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Cancel(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.ServerCallContext)">
            <summary>
            Cancel signals the provider to gracefully shut down and abort any ongoing resource operations.
            Operations aborted in this way will return an error (e.g., `Update` and `Create` will either return a
            creation error or an initialization error). Since Cancel is advisory and non-blocking, it is up
            to the host to decide how long to wait after Cancel is called before (e.g.)
            hard-closing any gRPC connection.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.GetPluginInfo(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.ServerCallContext)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.Attach(Pulumirpc.PluginAttach,Grpc.Core.ServerCallContext)">
            <summary>
            Attach sends the engine address to an already running plugin.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.GetMapping(Pulumirpc.GetMappingRequest,Grpc.Core.ServerCallContext)">
            <summary>
            GetMapping fetches the mapping for this resource provider, if any. A provider should return an empty
            response (not an error) if it doesn't have a mapping for the given key.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderBase.GetMappings(Pulumirpc.GetMappingsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            GetMappings is an optional method that returns what mappings (if any) a provider supports. If a provider does not
            implement this method the engine falls back to the old behaviour of just calling GetMapping without a name.
            If this method is implemented than the engine will then call GetMapping only with the names returned from this method.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Pulumirpc.ResourceProvider.ResourceProviderClient">
            <summary>Client for ResourceProvider</summary>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for ResourceProvider</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for ResourceProvider that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Parameterize(Pulumirpc.ParameterizeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Parameterize takes either a string array of command line inputs or a value embedded from sdk generation.
            
             Providers can be parameterized with either multiple extension packages (which don't define their own provider
             resources), or with a replacement package (which does define its own provider resource).
            
             Parameterize may be called multiple times for extension packages, but for a replacement package it will only be
             called once. Extension packages may even be called multiple times for the same package name, but with different
             versions.
            
             Parameterize should work the same for both the `ParametersArgs` input and the `ParametersValue` input. Either way
             should return the sub-package name and version (which for `ParametersValue` should match the given input).
             
             For extension resources their CRUD operations will include the version of which sub-package they correspond to.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Parameterize(Pulumirpc.ParameterizeRequest,Grpc.Core.CallOptions)">
             <summary>
             Parameterize takes either a string array of command line inputs or a value embedded from sdk generation.
            
             Providers can be parameterized with either multiple extension packages (which don't define their own provider
             resources), or with a replacement package (which does define its own provider resource).
            
             Parameterize may be called multiple times for extension packages, but for a replacement package it will only be
             called once. Extension packages may even be called multiple times for the same package name, but with different
             versions.
            
             Parameterize should work the same for both the `ParametersArgs` input and the `ParametersValue` input. Either way
             should return the sub-package name and version (which for `ParametersValue` should match the given input).
             
             For extension resources their CRUD operations will include the version of which sub-package they correspond to.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.ParameterizeAsync(Pulumirpc.ParameterizeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Parameterize takes either a string array of command line inputs or a value embedded from sdk generation.
            
             Providers can be parameterized with either multiple extension packages (which don't define their own provider
             resources), or with a replacement package (which does define its own provider resource).
            
             Parameterize may be called multiple times for extension packages, but for a replacement package it will only be
             called once. Extension packages may even be called multiple times for the same package name, but with different
             versions.
            
             Parameterize should work the same for both the `ParametersArgs` input and the `ParametersValue` input. Either way
             should return the sub-package name and version (which for `ParametersValue` should match the given input).
             
             For extension resources their CRUD operations will include the version of which sub-package they correspond to.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.ParameterizeAsync(Pulumirpc.ParameterizeRequest,Grpc.Core.CallOptions)">
             <summary>
             Parameterize takes either a string array of command line inputs or a value embedded from sdk generation.
            
             Providers can be parameterized with either multiple extension packages (which don't define their own provider
             resources), or with a replacement package (which does define its own provider resource).
            
             Parameterize may be called multiple times for extension packages, but for a replacement package it will only be
             called once. Extension packages may even be called multiple times for the same package name, but with different
             versions.
            
             Parameterize should work the same for both the `ParametersArgs` input and the `ParametersValue` input. Either way
             should return the sub-package name and version (which for `ParametersValue` should match the given input).
             
             For extension resources their CRUD operations will include the version of which sub-package they correspond to.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetSchema(Pulumirpc.GetSchemaRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetSchema fetches the schema for this resource provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetSchema(Pulumirpc.GetSchemaRequest,Grpc.Core.CallOptions)">
            <summary>
            GetSchema fetches the schema for this resource provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetSchemaAsync(Pulumirpc.GetSchemaRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetSchema fetches the schema for this resource provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetSchemaAsync(Pulumirpc.GetSchemaRequest,Grpc.Core.CallOptions)">
            <summary>
            GetSchema fetches the schema for this resource provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.CheckConfig(Pulumirpc.CheckRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            CheckConfig validates the configuration for this resource provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.CheckConfig(Pulumirpc.CheckRequest,Grpc.Core.CallOptions)">
            <summary>
            CheckConfig validates the configuration for this resource provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.CheckConfigAsync(Pulumirpc.CheckRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            CheckConfig validates the configuration for this resource provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.CheckConfigAsync(Pulumirpc.CheckRequest,Grpc.Core.CallOptions)">
            <summary>
            CheckConfig validates the configuration for this resource provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.DiffConfig(Pulumirpc.DiffRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            DiffConfig checks the impact a hypothetical change to this provider's configuration will have on the provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.DiffConfig(Pulumirpc.DiffRequest,Grpc.Core.CallOptions)">
            <summary>
            DiffConfig checks the impact a hypothetical change to this provider's configuration will have on the provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.DiffConfigAsync(Pulumirpc.DiffRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            DiffConfig checks the impact a hypothetical change to this provider's configuration will have on the provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.DiffConfigAsync(Pulumirpc.DiffRequest,Grpc.Core.CallOptions)">
            <summary>
            DiffConfig checks the impact a hypothetical change to this provider's configuration will have on the provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Configure(Pulumirpc.ConfigureRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Configure configures the resource provider with "globals" that control its behavior.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Configure(Pulumirpc.ConfigureRequest,Grpc.Core.CallOptions)">
            <summary>
            Configure configures the resource provider with "globals" that control its behavior.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.ConfigureAsync(Pulumirpc.ConfigureRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Configure configures the resource provider with "globals" that control its behavior.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.ConfigureAsync(Pulumirpc.ConfigureRequest,Grpc.Core.CallOptions)">
            <summary>
            Configure configures the resource provider with "globals" that control its behavior.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Invoke(Pulumirpc.InvokeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Invoke dynamically executes a built-in function in the provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Invoke(Pulumirpc.InvokeRequest,Grpc.Core.CallOptions)">
            <summary>
            Invoke dynamically executes a built-in function in the provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.InvokeAsync(Pulumirpc.InvokeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Invoke dynamically executes a built-in function in the provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.InvokeAsync(Pulumirpc.InvokeRequest,Grpc.Core.CallOptions)">
            <summary>
            Invoke dynamically executes a built-in function in the provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.StreamInvoke(Pulumirpc.InvokeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            StreamInvoke dynamically executes a built-in function in the provider, which returns a stream
            of responses.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.StreamInvoke(Pulumirpc.InvokeRequest,Grpc.Core.CallOptions)">
            <summary>
            StreamInvoke dynamically executes a built-in function in the provider, which returns a stream
            of responses.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Call(Pulumirpc.CallRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Call dynamically executes a method in the provider associated with a component resource.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Call(Pulumirpc.CallRequest,Grpc.Core.CallOptions)">
            <summary>
            Call dynamically executes a method in the provider associated with a component resource.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.CallAsync(Pulumirpc.CallRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Call dynamically executes a method in the provider associated with a component resource.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.CallAsync(Pulumirpc.CallRequest,Grpc.Core.CallOptions)">
            <summary>
            Call dynamically executes a method in the provider associated with a component resource.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Check(Pulumirpc.CheckRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Check validates that the given property bag is valid for a resource of the given type and returns the inputs
            that should be passed to successive calls to Diff, Create, or Update for this resource. As a rule, the provider
            inputs returned by a call to Check should preserve the original representation of the properties as present in
            the program inputs. Though this rule is not required for correctness, violations thereof can negatively impact
            the end-user experience, as the provider inputs are using for detecting and rendering diffs.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Check(Pulumirpc.CheckRequest,Grpc.Core.CallOptions)">
            <summary>
            Check validates that the given property bag is valid for a resource of the given type and returns the inputs
            that should be passed to successive calls to Diff, Create, or Update for this resource. As a rule, the provider
            inputs returned by a call to Check should preserve the original representation of the properties as present in
            the program inputs. Though this rule is not required for correctness, violations thereof can negatively impact
            the end-user experience, as the provider inputs are using for detecting and rendering diffs.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.CheckAsync(Pulumirpc.CheckRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Check validates that the given property bag is valid for a resource of the given type and returns the inputs
            that should be passed to successive calls to Diff, Create, or Update for this resource. As a rule, the provider
            inputs returned by a call to Check should preserve the original representation of the properties as present in
            the program inputs. Though this rule is not required for correctness, violations thereof can negatively impact
            the end-user experience, as the provider inputs are using for detecting and rendering diffs.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.CheckAsync(Pulumirpc.CheckRequest,Grpc.Core.CallOptions)">
            <summary>
            Check validates that the given property bag is valid for a resource of the given type and returns the inputs
            that should be passed to successive calls to Diff, Create, or Update for this resource. As a rule, the provider
            inputs returned by a call to Check should preserve the original representation of the properties as present in
            the program inputs. Though this rule is not required for correctness, violations thereof can negatively impact
            the end-user experience, as the provider inputs are using for detecting and rendering diffs.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Diff(Pulumirpc.DiffRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Diff checks what impacts a hypothetical update will have on the resource's properties.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Diff(Pulumirpc.DiffRequest,Grpc.Core.CallOptions)">
            <summary>
            Diff checks what impacts a hypothetical update will have on the resource's properties.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.DiffAsync(Pulumirpc.DiffRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Diff checks what impacts a hypothetical update will have on the resource's properties.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.DiffAsync(Pulumirpc.DiffRequest,Grpc.Core.CallOptions)">
            <summary>
            Diff checks what impacts a hypothetical update will have on the resource's properties.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Create(Pulumirpc.CreateRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Create allocates a new instance of the provided resource and returns its unique ID afterwards.  (The input ID
            must be blank.)  If this call fails, the resource must not have been created (i.e., it is "transactional").
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Create(Pulumirpc.CreateRequest,Grpc.Core.CallOptions)">
            <summary>
            Create allocates a new instance of the provided resource and returns its unique ID afterwards.  (The input ID
            must be blank.)  If this call fails, the resource must not have been created (i.e., it is "transactional").
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.CreateAsync(Pulumirpc.CreateRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Create allocates a new instance of the provided resource and returns its unique ID afterwards.  (The input ID
            must be blank.)  If this call fails, the resource must not have been created (i.e., it is "transactional").
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.CreateAsync(Pulumirpc.CreateRequest,Grpc.Core.CallOptions)">
            <summary>
            Create allocates a new instance of the provided resource and returns its unique ID afterwards.  (The input ID
            must be blank.)  If this call fails, the resource must not have been created (i.e., it is "transactional").
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Read(Pulumirpc.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Read the current live state associated with a resource.  Enough state must be include in the inputs to uniquely
            identify the resource; this is typically just the resource ID, but may also include some properties.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Read(Pulumirpc.ReadRequest,Grpc.Core.CallOptions)">
            <summary>
            Read the current live state associated with a resource.  Enough state must be include in the inputs to uniquely
            identify the resource; this is typically just the resource ID, but may also include some properties.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.ReadAsync(Pulumirpc.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Read the current live state associated with a resource.  Enough state must be include in the inputs to uniquely
            identify the resource; this is typically just the resource ID, but may also include some properties.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.ReadAsync(Pulumirpc.ReadRequest,Grpc.Core.CallOptions)">
            <summary>
            Read the current live state associated with a resource.  Enough state must be include in the inputs to uniquely
            identify the resource; this is typically just the resource ID, but may also include some properties.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Update(Pulumirpc.UpdateRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Update updates an existing resource with new values.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Update(Pulumirpc.UpdateRequest,Grpc.Core.CallOptions)">
            <summary>
            Update updates an existing resource with new values.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.UpdateAsync(Pulumirpc.UpdateRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Update updates an existing resource with new values.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.UpdateAsync(Pulumirpc.UpdateRequest,Grpc.Core.CallOptions)">
            <summary>
            Update updates an existing resource with new values.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Delete(Pulumirpc.DeleteRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Delete tears down an existing resource with the given ID.  If it fails, the resource is assumed to still exist.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Delete(Pulumirpc.DeleteRequest,Grpc.Core.CallOptions)">
            <summary>
            Delete tears down an existing resource with the given ID.  If it fails, the resource is assumed to still exist.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.DeleteAsync(Pulumirpc.DeleteRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Delete tears down an existing resource with the given ID.  If it fails, the resource is assumed to still exist.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.DeleteAsync(Pulumirpc.DeleteRequest,Grpc.Core.CallOptions)">
            <summary>
            Delete tears down an existing resource with the given ID.  If it fails, the resource is assumed to still exist.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Construct(Pulumirpc.ConstructRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Construct creates a new instance of the provided component resource and returns its state.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Construct(Pulumirpc.ConstructRequest,Grpc.Core.CallOptions)">
            <summary>
            Construct creates a new instance of the provided component resource and returns its state.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.ConstructAsync(Pulumirpc.ConstructRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Construct creates a new instance of the provided component resource and returns its state.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.ConstructAsync(Pulumirpc.ConstructRequest,Grpc.Core.CallOptions)">
            <summary>
            Construct creates a new instance of the provided component resource and returns its state.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Cancel(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Cancel signals the provider to gracefully shut down and abort any ongoing resource operations.
            Operations aborted in this way will return an error (e.g., `Update` and `Create` will either return a
            creation error or an initialization error). Since Cancel is advisory and non-blocking, it is up
            to the host to decide how long to wait after Cancel is called before (e.g.)
            hard-closing any gRPC connection.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Cancel(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.CallOptions)">
            <summary>
            Cancel signals the provider to gracefully shut down and abort any ongoing resource operations.
            Operations aborted in this way will return an error (e.g., `Update` and `Create` will either return a
            creation error or an initialization error). Since Cancel is advisory and non-blocking, it is up
            to the host to decide how long to wait after Cancel is called before (e.g.)
            hard-closing any gRPC connection.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.CancelAsync(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Cancel signals the provider to gracefully shut down and abort any ongoing resource operations.
            Operations aborted in this way will return an error (e.g., `Update` and `Create` will either return a
            creation error or an initialization error). Since Cancel is advisory and non-blocking, it is up
            to the host to decide how long to wait after Cancel is called before (e.g.)
            hard-closing any gRPC connection.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.CancelAsync(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.CallOptions)">
            <summary>
            Cancel signals the provider to gracefully shut down and abort any ongoing resource operations.
            Operations aborted in this way will return an error (e.g., `Update` and `Create` will either return a
            creation error or an initialization error). Since Cancel is advisory and non-blocking, it is up
            to the host to decide how long to wait after Cancel is called before (e.g.)
            hard-closing any gRPC connection.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetPluginInfo(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetPluginInfo(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.CallOptions)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetPluginInfoAsync(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetPluginInfoAsync(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.CallOptions)">
            <summary>
            GetPluginInfo returns generic information about this plugin, like its version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Attach(Pulumirpc.PluginAttach,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Attach sends the engine address to an already running plugin.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.Attach(Pulumirpc.PluginAttach,Grpc.Core.CallOptions)">
            <summary>
            Attach sends the engine address to an already running plugin.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.AttachAsync(Pulumirpc.PluginAttach,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Attach sends the engine address to an already running plugin.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.AttachAsync(Pulumirpc.PluginAttach,Grpc.Core.CallOptions)">
            <summary>
            Attach sends the engine address to an already running plugin.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetMapping(Pulumirpc.GetMappingRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetMapping fetches the mapping for this resource provider, if any. A provider should return an empty
            response (not an error) if it doesn't have a mapping for the given key.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetMapping(Pulumirpc.GetMappingRequest,Grpc.Core.CallOptions)">
            <summary>
            GetMapping fetches the mapping for this resource provider, if any. A provider should return an empty
            response (not an error) if it doesn't have a mapping for the given key.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetMappingAsync(Pulumirpc.GetMappingRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetMapping fetches the mapping for this resource provider, if any. A provider should return an empty
            response (not an error) if it doesn't have a mapping for the given key.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetMappingAsync(Pulumirpc.GetMappingRequest,Grpc.Core.CallOptions)">
            <summary>
            GetMapping fetches the mapping for this resource provider, if any. A provider should return an empty
            response (not an error) if it doesn't have a mapping for the given key.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetMappings(Pulumirpc.GetMappingsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetMappings is an optional method that returns what mappings (if any) a provider supports. If a provider does not
            implement this method the engine falls back to the old behaviour of just calling GetMapping without a name.
            If this method is implemented than the engine will then call GetMapping only with the names returned from this method.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetMappings(Pulumirpc.GetMappingsRequest,Grpc.Core.CallOptions)">
            <summary>
            GetMappings is an optional method that returns what mappings (if any) a provider supports. If a provider does not
            implement this method the engine falls back to the old behaviour of just calling GetMapping without a name.
            If this method is implemented than the engine will then call GetMapping only with the names returned from this method.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetMappingsAsync(Pulumirpc.GetMappingsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetMappings is an optional method that returns what mappings (if any) a provider supports. If a provider does not
            implement this method the engine falls back to the old behaviour of just calling GetMapping without a name.
            If this method is implemented than the engine will then call GetMapping only with the names returned from this method.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.GetMappingsAsync(Pulumirpc.GetMappingsRequest,Grpc.Core.CallOptions)">
            <summary>
            GetMappings is an optional method that returns what mappings (if any) a provider supports. If a provider does not
            implement this method the engine falls back to the old behaviour of just calling GetMapping without a name.
            If this method is implemented than the engine will then call GetMapping only with the names returned from this method.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.ResourceProviderClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.BindService(Pulumirpc.ResourceProvider.ResourceProviderBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Pulumirpc.ResourceProvider.BindService(Grpc.Core.ServiceBinderBase,Pulumirpc.ResourceProvider.ResourceProviderBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Pulumirpc.ResourceReflection">
            <summary>Holder for reflection information generated from pulumi/resource.proto</summary>
        </member>
        <member name="P:Pulumirpc.ResourceReflection.Descriptor">
            <summary>File descriptor for pulumi/resource.proto</summary>
        </member>
        <member name="T:Pulumirpc.SupportsFeatureRequest">
            <summary>
            SupportsFeatureRequest allows a client to test if the resource monitor supports a certain feature, which it may use
            to control the format or types of messages it sends.
            </summary>
        </member>
        <member name="F:Pulumirpc.SupportsFeatureRequest.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Pulumirpc.SupportsFeatureRequest.Id">
            <summary>
            the ID of the feature to test support for.
            </summary>
        </member>
        <member name="F:Pulumirpc.SupportsFeatureResponse.HasSupportFieldNumber">
            <summary>Field number for the "hasSupport" field.</summary>
        </member>
        <member name="P:Pulumirpc.SupportsFeatureResponse.HasSupport">
            <summary>
            true when the resource monitor supports this feature.
            </summary>
        </member>
        <member name="T:Pulumirpc.ReadResourceRequest">
            <summary>
            ReadResourceRequest contains enough information to uniquely qualify and read a resource's state.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.Id">
            <summary>
            the ID of the resource to read.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.Type">
            <summary>
            the type of the resource object.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.Name">
            <summary>
            the name, for URN purposes, of the object.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.Parent">
            <summary>
            an optional parent URN that this child resource belongs to.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.Properties">
            <summary>
            optional state sufficient to uniquely identify the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.DependenciesFieldNumber">
            <summary>Field number for the "dependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.Dependencies">
            <summary>
            a list of URNs that this read depends on, as observed by the language host.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.ProviderFieldNumber">
            <summary>Field number for the "provider" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.Provider">
            <summary>
            an optional reference to the provider to use for this read.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.Version">
            <summary>
            the version of the provider to use when servicing this request.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.AcceptSecretsFieldNumber">
            <summary>Field number for the "acceptSecrets" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.AcceptSecrets">
            <summary>
            when true operations should return secrets as strongly typed.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.AdditionalSecretOutputsFieldNumber">
            <summary>Field number for the "additionalSecretOutputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.AdditionalSecretOutputs">
            <summary>
            a list of output properties that should also be treated as secret, in addition to ones we detect.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.AcceptResourcesFieldNumber">
            <summary>Field number for the "acceptResources" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.AcceptResources">
            <summary>
            when true operations should return resource references as strongly typed.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.PluginDownloadURLFieldNumber">
            <summary>Field number for the "pluginDownloadURL" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.PluginDownloadURL">
            <summary>
            the server url of the provider to use when servicing this request.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.PluginChecksumsFieldNumber">
            <summary>Field number for the "pluginChecksums" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.PluginChecksums">
            <summary>
            a map of checksums of the provider to use when servicing this request.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceRequest.SourcePositionFieldNumber">
            <summary>Field number for the "sourcePosition" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceRequest.SourcePosition">
            <summary>
            the optional source position of the user code that initiated the read.
            </summary>
        </member>
        <member name="T:Pulumirpc.ReadResourceResponse">
            <summary>
            ReadResourceResponse contains the result of reading a resource's state.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceResponse.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceResponse.Urn">
            <summary>
            the URN for this resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ReadResourceResponse.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.ReadResourceResponse.Properties">
            <summary>
            the state of the resource read from the live environment.
            </summary>
        </member>
        <member name="T:Pulumirpc.RegisterResourceRequest">
            <summary>
            RegisterResourceRequest contains information about a resource object that was newly allocated.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Type">
            <summary>
            the type of the object allocated.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Name">
            <summary>
            the name, for URN purposes, of the object.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Parent">
            <summary>
            an optional parent URN that this child resource belongs to.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.CustomFieldNumber">
            <summary>Field number for the "custom" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Custom">
            <summary>
            true if the resource is a custom, managed by a plugin's CRUD operations.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.ObjectFieldNumber">
            <summary>Field number for the "object" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Object">
            <summary>
            an object produced by the interpreter/source.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.ProtectFieldNumber">
            <summary>Field number for the "protect" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Protect">
            <summary>
            true if the resource should be marked protected.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.DependenciesFieldNumber">
            <summary>Field number for the "dependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Dependencies">
            <summary>
            a list of URNs that this resource depends on, as observed by the language host.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.ProviderFieldNumber">
            <summary>Field number for the "provider" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Provider">
            <summary>
            an optional reference to the provider to manage this resource's CRUD operations.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.PropertyDependenciesFieldNumber">
            <summary>Field number for the "propertyDependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.PropertyDependencies">
            <summary>
            a map from property keys to the dependencies of the property.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.DeleteBeforeReplaceFieldNumber">
            <summary>Field number for the "deleteBeforeReplace" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.DeleteBeforeReplace">
            <summary>
            true if this resource should be deleted before replacement.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Version">
            <summary>
            the version of the provider to use when servicing this request.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.IgnoreChangesFieldNumber">
            <summary>Field number for the "ignoreChanges" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.IgnoreChanges">
            <summary>
            a list of property selectors to ignore during updates.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.AcceptSecretsFieldNumber">
            <summary>Field number for the "acceptSecrets" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.AcceptSecrets">
            <summary>
            when true operations should return secrets as strongly typed.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.AdditionalSecretOutputsFieldNumber">
            <summary>Field number for the "additionalSecretOutputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.AdditionalSecretOutputs">
            <summary>
            a list of output properties that should also be treated as secret, in addition to ones we detect.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.AliasURNsFieldNumber">
            <summary>Field number for the "aliasURNs" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.AliasURNs">
            <summary>
            a list of additional URNs that should be considered the same.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.ImportIdFieldNumber">
            <summary>Field number for the "importId" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.ImportId">
            <summary>
            if set, this resource's state should be imported from the given ID.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.CustomTimeoutsFieldNumber">
            <summary>Field number for the "customTimeouts" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.CustomTimeouts">
            <summary>
            ability to pass a custom Timeout block.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.DeleteBeforeReplaceDefinedFieldNumber">
            <summary>Field number for the "deleteBeforeReplaceDefined" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.DeleteBeforeReplaceDefined">
            <summary>
            true if the deleteBeforeReplace property should be treated as defined even if it is false.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.SupportsPartialValuesFieldNumber">
            <summary>Field number for the "supportsPartialValues" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.SupportsPartialValues">
            <summary>
            true if the request is from an SDK that supports partially-known properties during preview.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.RemoteFieldNumber">
            <summary>Field number for the "remote" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Remote">
            <summary>
            true if the resource is a plugin-managed component resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.AcceptResourcesFieldNumber">
            <summary>Field number for the "acceptResources" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.AcceptResources">
            <summary>
            when true operations should return resource references as strongly typed.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.ProvidersFieldNumber">
            <summary>Field number for the "providers" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Providers">
            <summary>
            an optional reference to the provider map to manage this resource's CRUD operations.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.ReplaceOnChangesFieldNumber">
            <summary>Field number for the "replaceOnChanges" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.ReplaceOnChanges">
            <summary>
            a list of properties that if changed should force a replacement.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.PluginDownloadURLFieldNumber">
            <summary>Field number for the "pluginDownloadURL" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.PluginDownloadURL">
            <summary>
            the server URL of the provider to use when servicing this request.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.PluginChecksumsFieldNumber">
            <summary>Field number for the "pluginChecksums" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.PluginChecksums">
            <summary>
            a map of checksums expected for the provider plugin.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.RetainOnDeleteFieldNumber">
            <summary>Field number for the "retainOnDelete" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.RetainOnDelete">
            <summary>
            if true the engine will not call the resource providers delete method for this resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.AliasesFieldNumber">
            <summary>Field number for the "aliases" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Aliases">
            <summary>
            a list of additional aliases that should be considered the same.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.DeletedWithFieldNumber">
            <summary>Field number for the "deletedWith" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.DeletedWith">
            <summary>
            if set the engine will not call the resource providers delete method for this resource when specified resource is deleted.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.AliasSpecsFieldNumber">
            <summary>Field number for the "aliasSpecs" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.AliasSpecs">
            <summary>
            Indicates that alias specs are specified correctly according to the spec.
            Older versions of the Node.js SDK did not send alias specs correctly.
            If this is not set to true and the engine detects the request is from the
            Node.js runtime, the engine will transform incorrect alias specs into
            correct ones.
            Other SDKs that are correctly specifying alias specs could set this to
            true, but it's not necessary.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.SourcePositionFieldNumber">
            <summary>Field number for the "sourcePosition" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.SourcePosition">
            <summary>
            the optional source position of the user code that initiated the register.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.TransformsFieldNumber">
            <summary>Field number for the "transforms" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Transforms">
            <summary>
            a list of transforms to apply to the resource before registering it.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.SupportsResultReportingFieldNumber">
            <summary>Field number for the "supportsResultReporting" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.SupportsResultReporting">
            <summary>
            true if the request is from an SDK that supports the result field in the response.
            </summary>
        </member>
        <member name="T:Pulumirpc.RegisterResourceRequest.Types">
            <summary>Container for nested types declared in the RegisterResourceRequest message type.</summary>
        </member>
        <member name="T:Pulumirpc.RegisterResourceRequest.Types.PropertyDependencies">
            <summary>
            PropertyDependencies describes the resources that a particular property depends on.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.Types.PropertyDependencies.UrnsFieldNumber">
            <summary>Field number for the "urns" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Types.PropertyDependencies.Urns">
            <summary>
            A list of URNs this property depends on.
            </summary>
        </member>
        <member name="T:Pulumirpc.RegisterResourceRequest.Types.CustomTimeouts">
            <summary>
            CustomTimeouts allows a user to be able to create a set of custom timeout parameters.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.Types.CustomTimeouts.CreateFieldNumber">
            <summary>Field number for the "create" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Types.CustomTimeouts.Create">
            <summary>
            The create resource timeout represented as a string e.g. 5m.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.Types.CustomTimeouts.UpdateFieldNumber">
            <summary>Field number for the "update" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Types.CustomTimeouts.Update">
            <summary>
            The update resource timeout represented as a string e.g. 5m.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceRequest.Types.CustomTimeouts.DeleteFieldNumber">
            <summary>Field number for the "delete" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceRequest.Types.CustomTimeouts.Delete">
            <summary>
            The delete resource timeout represented as a string e.g. 5m.
            </summary>
        </member>
        <member name="T:Pulumirpc.RegisterResourceResponse">
            <summary>
            RegisterResourceResponse is returned by the engine after a resource has finished being initialized.  It includes the
            auto-assigned URN, the provider-assigned ID, and any other properties initialized by the engine.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceResponse.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceResponse.Urn">
            <summary>
            the URN assigned by the engine.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceResponse.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceResponse.Id">
            <summary>
            the unique ID assigned by the provider.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceResponse.ObjectFieldNumber">
            <summary>Field number for the "object" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceResponse.Object">
            <summary>
            the resulting object properties, including provider defaults.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceResponse.StableFieldNumber">
            <summary>Field number for the "stable" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceResponse.Stable">
            <summary>
            if true, the object's state is stable and may be trusted not to change.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceResponse.StablesFieldNumber">
            <summary>Field number for the "stables" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceResponse.Stables">
            <summary>
            an optional list of guaranteed-stable properties.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceResponse.PropertyDependenciesFieldNumber">
            <summary>Field number for the "propertyDependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceResponse.PropertyDependencies">
            <summary>
            a map from property keys to the dependencies of the property.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceResponse.ResultFieldNumber">
            <summary>Field number for the "result" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceResponse.Result">
            <summary>
            the reason, whether the resource registration was successful, failed, or skipped.
            </summary>
        </member>
        <member name="T:Pulumirpc.RegisterResourceResponse.Types">
            <summary>Container for nested types declared in the RegisterResourceResponse message type.</summary>
        </member>
        <member name="T:Pulumirpc.RegisterResourceResponse.Types.PropertyDependencies">
            <summary>
            PropertyDependencies describes the resources that a particular property depends on.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceResponse.Types.PropertyDependencies.UrnsFieldNumber">
            <summary>Field number for the "urns" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceResponse.Types.PropertyDependencies.Urns">
            <summary>
            A list of URNs this property depends on.
            </summary>
        </member>
        <member name="T:Pulumirpc.RegisterResourceOutputsRequest">
            <summary>
            RegisterResourceOutputsRequest adds extra resource outputs created by the program after registration has occurred.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceOutputsRequest.UrnFieldNumber">
            <summary>Field number for the "urn" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceOutputsRequest.Urn">
            <summary>
            the URN for the resource to attach output properties to.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterResourceOutputsRequest.OutputsFieldNumber">
            <summary>Field number for the "outputs" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterResourceOutputsRequest.Outputs">
            <summary>
            additional output properties to add to the existing resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceInvokeRequest.TokFieldNumber">
            <summary>Field number for the "tok" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceInvokeRequest.Tok">
            <summary>
            the function token to invoke.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceInvokeRequest.ArgsFieldNumber">
            <summary>Field number for the "args" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceInvokeRequest.Args">
            <summary>
            the arguments for the function invocation.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceInvokeRequest.ProviderFieldNumber">
            <summary>Field number for the "provider" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceInvokeRequest.Provider">
            <summary>
            an optional reference to the provider version to use for this invoke.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceInvokeRequest.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceInvokeRequest.Version">
            <summary>
            the version of the provider to use when servicing this request.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceInvokeRequest.AcceptResourcesFieldNumber">
            <summary>Field number for the "acceptResources" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceInvokeRequest.AcceptResources">
            <summary>
            when true operations should return resource references as strongly typed.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceInvokeRequest.PluginDownloadURLFieldNumber">
            <summary>Field number for the "pluginDownloadURL" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceInvokeRequest.PluginDownloadURL">
            <summary>
            an optional reference to the provider url to use for this invoke.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceInvokeRequest.PluginChecksumsFieldNumber">
            <summary>Field number for the "pluginChecksums" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceInvokeRequest.PluginChecksums">
            <summary>
            a map of checksums expected for the provider plugin.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceInvokeRequest.SourcePositionFieldNumber">
            <summary>Field number for the "sourcePosition" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceInvokeRequest.SourcePosition">
            <summary>
            the optional source position of the user code that initiated the invoke.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceCallRequest.TokFieldNumber">
            <summary>Field number for the "tok" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceCallRequest.Tok">
            <summary>
            the function token to invoke.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceCallRequest.ArgsFieldNumber">
            <summary>Field number for the "args" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceCallRequest.Args">
            <summary>
            the arguments for the function invocation.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceCallRequest.ArgDependenciesFieldNumber">
            <summary>Field number for the "argDependencies" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceCallRequest.ArgDependencies">
            <summary>
            a map from argument keys to the dependencies of the argument.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceCallRequest.ProviderFieldNumber">
            <summary>Field number for the "provider" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceCallRequest.Provider">
            <summary>
            an optional reference to the provider to use for this invoke.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceCallRequest.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceCallRequest.Version">
            <summary>
            the version of the provider to use when servicing this request.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceCallRequest.PluginDownloadURLFieldNumber">
            <summary>Field number for the "pluginDownloadURL" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceCallRequest.PluginDownloadURL">
            <summary>
            the pluginDownloadURL of the provider to use when servicing this request.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceCallRequest.PluginChecksumsFieldNumber">
            <summary>Field number for the "pluginChecksums" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceCallRequest.PluginChecksums">
            <summary>
            a map of checksums of the provider to use when servicing this request.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceCallRequest.SourcePositionFieldNumber">
            <summary>Field number for the "sourcePosition" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceCallRequest.SourcePosition">
            <summary>
            the optional source position of the user code that initiated the call.
            </summary>
        </member>
        <member name="T:Pulumirpc.ResourceCallRequest.Types">
            <summary>Container for nested types declared in the ResourceCallRequest message type.</summary>
        </member>
        <member name="T:Pulumirpc.ResourceCallRequest.Types.ArgumentDependencies">
            <summary>
            ArgumentDependencies describes the resources that a particular argument depends on.
            </summary>
        </member>
        <member name="F:Pulumirpc.ResourceCallRequest.Types.ArgumentDependencies.UrnsFieldNumber">
            <summary>Field number for the "urns" field.</summary>
        </member>
        <member name="P:Pulumirpc.ResourceCallRequest.Types.ArgumentDependencies.Urns">
            <summary>
            A list of URNs this argument depends on.
            </summary>
        </member>
        <member name="T:Pulumirpc.TransformResourceOptions">
            <summary>
            TransformResourceOptions is a subset of all resource options that are relevant to transforms.
            </summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.DependsOnFieldNumber">
            <summary>Field number for the "depends_on" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.ProtectFieldNumber">
            <summary>Field number for the "protect" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.IgnoreChangesFieldNumber">
            <summary>Field number for the "ignore_changes" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.ReplaceOnChangesFieldNumber">
            <summary>Field number for the "replace_on_changes" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.AliasesFieldNumber">
            <summary>Field number for the "aliases" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.ProviderFieldNumber">
            <summary>Field number for the "provider" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.CustomTimeoutsFieldNumber">
            <summary>Field number for the "custom_timeouts" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.PluginDownloadUrlFieldNumber">
            <summary>Field number for the "plugin_download_url" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.RetainOnDeleteFieldNumber">
            <summary>Field number for the "retain_on_delete" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.DeletedWithFieldNumber">
            <summary>Field number for the "deleted_with" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.DeleteBeforeReplaceFieldNumber">
            <summary>Field number for the "delete_before_replace" field.</summary>
        </member>
        <member name="P:Pulumirpc.TransformResourceOptions.HasDeleteBeforeReplace">
            <summary>Gets whether the "delete_before_replace" field is set</summary>
        </member>
        <member name="M:Pulumirpc.TransformResourceOptions.ClearDeleteBeforeReplace">
            <summary>Clears the value of the "delete_before_replace" field</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.AdditionalSecretOutputsFieldNumber">
            <summary>Field number for the "additional_secret_outputs" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.ProvidersFieldNumber">
            <summary>Field number for the "providers" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformResourceOptions.PluginChecksumsFieldNumber">
            <summary>Field number for the "plugin_checksums" field.</summary>
        </member>
        <member name="F:Pulumirpc.TransformRequest.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Pulumirpc.TransformRequest.Type">
            <summary>
            the type of the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.TransformRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Pulumirpc.TransformRequest.Name">
            <summary>
            the name of the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.TransformRequest.CustomFieldNumber">
            <summary>Field number for the "custom" field.</summary>
        </member>
        <member name="P:Pulumirpc.TransformRequest.Custom">
            <summary>
            true if the resource is a custom resource, else it's a component resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.TransformRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Pulumirpc.TransformRequest.Parent">
            <summary>
            the parent of the resource, this can't be changed by the transform.
            </summary>
        </member>
        <member name="F:Pulumirpc.TransformRequest.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.TransformRequest.Properties">
            <summary>
            the input properties of the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.TransformRequest.OptionsFieldNumber">
            <summary>Field number for the "options" field.</summary>
        </member>
        <member name="P:Pulumirpc.TransformRequest.Options">
            <summary>
            the options for the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.TransformResponse.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Pulumirpc.TransformResponse.Properties">
            <summary>
            the transformed input properties.
            </summary>
        </member>
        <member name="F:Pulumirpc.TransformResponse.OptionsFieldNumber">
            <summary>Field number for the "options" field.</summary>
        </member>
        <member name="P:Pulumirpc.TransformResponse.Options">
            <summary>
            the options for the resource.
            </summary>
        </member>
        <member name="F:Pulumirpc.RegisterProviderRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Pulumirpc.RegisterProviderRequest.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="F:Pulumirpc.RegisterProviderRequest.PluginDownloadUrlFieldNumber">
            <summary>Field number for the "plugin_download_url" field.</summary>
        </member>
        <member name="F:Pulumirpc.RegisterProviderRequest.PluginChecksumsFieldNumber">
            <summary>Field number for the "plugin_checksums" field.</summary>
        </member>
        <member name="F:Pulumirpc.RegisterProviderRequest.ParameterFieldNumber">
            <summary>Field number for the "parameter" field.</summary>
        </member>
        <member name="F:Pulumirpc.RegisterProviderResponse.RefFieldNumber">
            <summary>Field number for the "ref" field.</summary>
        </member>
        <member name="P:Pulumirpc.RegisterProviderResponse.Ref">
            <summary>
            The UUID package reference for this registered provider package.
            </summary>
        </member>
        <member name="F:Pulumirpc.ProviderParameter.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Pulumirpc.ProviderParameter.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="F:Pulumirpc.ProviderParameter.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="T:Pulumirpc.ResourceMonitor">
            <summary>
            ResourceMonitor is the interface a source uses to talk back to the planning monitor orchestrating the execution.
            </summary>
        </member>
        <member name="P:Pulumirpc.ResourceMonitor.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Pulumirpc.ResourceMonitor.ResourceMonitorBase">
            <summary>Base class for server-side implementations of ResourceMonitor</summary>
        </member>
        <member name="T:Pulumirpc.ResourceMonitor.ResourceMonitorClient">
            <summary>Client for ResourceMonitor</summary>
        </member>
        <member name="M:Pulumirpc.ResourceMonitor.ResourceMonitorClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for ResourceMonitor</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.ResourceMonitor.ResourceMonitorClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for ResourceMonitor that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.ResourceMonitor.ResourceMonitorClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Pulumirpc.ResourceMonitor.ResourceMonitorClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Pulumirpc.ResourceMonitor.ResourceMonitorClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Pulumirpc.ResourceMonitor.BindService(Pulumirpc.ResourceMonitor.ResourceMonitorBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Pulumirpc.ResourceMonitor.BindService(Grpc.Core.ServiceBinderBase,Pulumirpc.ResourceMonitor.ResourceMonitorBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Pulumirpc.SourceReflection">
            <summary>Holder for reflection information generated from pulumi/source.proto</summary>
        </member>
        <member name="P:Pulumirpc.SourceReflection.Descriptor">
            <summary>File descriptor for pulumi/source.proto</summary>
        </member>
        <member name="T:Pulumirpc.SourcePosition">
            <summary>
            A SourcePosition represents a position in a source file.
            </summary>
        </member>
        <member name="F:Pulumirpc.SourcePosition.UriFieldNumber">
            <summary>Field number for the "uri" field.</summary>
        </member>
        <member name="P:Pulumirpc.SourcePosition.Uri">
            <summary>
            The URI of the file. Currently only the file scheme with an absolute path is supported.
            </summary>
        </member>
        <member name="F:Pulumirpc.SourcePosition.LineFieldNumber">
            <summary>Field number for the "line" field.</summary>
        </member>
        <member name="P:Pulumirpc.SourcePosition.Line">
            <summary>
            The line in the file
            </summary>
        </member>
        <member name="F:Pulumirpc.SourcePosition.ColumnFieldNumber">
            <summary>Field number for the "column" field.</summary>
        </member>
        <member name="P:Pulumirpc.SourcePosition.Column">
            <summary>
            The column in the line
            </summary>
        </member>
        <member name="T:Pulumirpc.Testing.LanguageReflection">
            <summary>Holder for reflection information generated from pulumi/testing/language.proto</summary>
        </member>
        <member name="P:Pulumirpc.Testing.LanguageReflection.Descriptor">
            <summary>File descriptor for pulumi/testing/language.proto</summary>
        </member>
        <member name="F:Pulumirpc.Testing.GetLanguageTestsResponse.TestsFieldNumber">
            <summary>Field number for the "tests" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.PrepareLanguageTestsRequest.LanguagePluginNameFieldNumber">
            <summary>Field number for the "language_plugin_name" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.PrepareLanguageTestsRequest.LanguagePluginTargetFieldNumber">
            <summary>Field number for the "language_plugin_target" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.PrepareLanguageTestsRequest.SnapshotDirectoryFieldNumber">
            <summary>Field number for the "snapshot_directory" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.PrepareLanguageTestsRequest.TemporaryDirectoryFieldNumber">
            <summary>Field number for the "temporary_directory" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.PrepareLanguageTestsRequest.CoreSdkDirectoryFieldNumber">
            <summary>Field number for the "core_sdk_directory" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.PrepareLanguageTestsRequest.CoreSdkVersionFieldNumber">
            <summary>Field number for the "core_sdk_version" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.PrepareLanguageTestsRequest.SnapshotEditsFieldNumber">
            <summary>Field number for the "snapshot_edits" field.</summary>
        </member>
        <member name="T:Pulumirpc.Testing.PrepareLanguageTestsRequest.Types">
            <summary>Container for nested types declared in the PrepareLanguageTestsRequest message type.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.PrepareLanguageTestsRequest.Types.Replacement.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.PrepareLanguageTestsRequest.Types.Replacement.PatternFieldNumber">
            <summary>Field number for the "pattern" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.PrepareLanguageTestsRequest.Types.Replacement.Replacement_FieldNumber">
            <summary>Field number for the "replacement" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.PrepareLanguageTestsResponse.TokenFieldNumber">
            <summary>Field number for the "token" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.RunLanguageTestRequest.TokenFieldNumber">
            <summary>Field number for the "token" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.RunLanguageTestRequest.TestFieldNumber">
            <summary>Field number for the "test" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.RunLanguageTestResponse.SuccessFieldNumber">
            <summary>Field number for the "success" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.RunLanguageTestResponse.MessagesFieldNumber">
            <summary>Field number for the "messages" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.RunLanguageTestResponse.StdoutFieldNumber">
            <summary>Field number for the "stdout" field.</summary>
        </member>
        <member name="F:Pulumirpc.Testing.RunLanguageTestResponse.StderrFieldNumber">
            <summary>Field number for the "stderr" field.</summary>
        </member>
        <member name="T:Pulumirpc.Testing.LanguageTest">
            <summary>
            LanguageTest is the interface to the pulumi language test framework. This is _highly_ experimental and
            currently subject to breaking changes without warning.
            </summary>
        </member>
        <member name="P:Pulumirpc.Testing.LanguageTest.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Pulumirpc.Testing.LanguageTest.LanguageTestBase">
            <summary>Base class for server-side implementations of LanguageTest</summary>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestBase.GetLanguageTests(Pulumirpc.Testing.GetLanguageTestsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            GetLanguageTests returns a list of all the language tests.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestBase.PrepareLanguageTests(Pulumirpc.Testing.PrepareLanguageTestsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            PrepareLanguageTests prepares the engine to run language tests. It sets up a stable artifacts folder
            (which should be .gitignore'd) and fills it with the core SDK artifact.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestBase.RunLanguageTest(Pulumirpc.Testing.RunLanguageTestRequest,Grpc.Core.ServerCallContext)">
            <summary>
            RunLanguageTest runs a single test of the language plugin.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Pulumirpc.Testing.LanguageTest.LanguageTestClient">
            <summary>Client for LanguageTest</summary>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for LanguageTest</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for LanguageTest that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.GetLanguageTests(Pulumirpc.Testing.GetLanguageTestsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetLanguageTests returns a list of all the language tests.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.GetLanguageTests(Pulumirpc.Testing.GetLanguageTestsRequest,Grpc.Core.CallOptions)">
            <summary>
            GetLanguageTests returns a list of all the language tests.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.GetLanguageTestsAsync(Pulumirpc.Testing.GetLanguageTestsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetLanguageTests returns a list of all the language tests.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.GetLanguageTestsAsync(Pulumirpc.Testing.GetLanguageTestsRequest,Grpc.Core.CallOptions)">
            <summary>
            GetLanguageTests returns a list of all the language tests.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.PrepareLanguageTests(Pulumirpc.Testing.PrepareLanguageTestsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            PrepareLanguageTests prepares the engine to run language tests. It sets up a stable artifacts folder
            (which should be .gitignore'd) and fills it with the core SDK artifact.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.PrepareLanguageTests(Pulumirpc.Testing.PrepareLanguageTestsRequest,Grpc.Core.CallOptions)">
            <summary>
            PrepareLanguageTests prepares the engine to run language tests. It sets up a stable artifacts folder
            (which should be .gitignore'd) and fills it with the core SDK artifact.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.PrepareLanguageTestsAsync(Pulumirpc.Testing.PrepareLanguageTestsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            PrepareLanguageTests prepares the engine to run language tests. It sets up a stable artifacts folder
            (which should be .gitignore'd) and fills it with the core SDK artifact.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.PrepareLanguageTestsAsync(Pulumirpc.Testing.PrepareLanguageTestsRequest,Grpc.Core.CallOptions)">
            <summary>
            PrepareLanguageTests prepares the engine to run language tests. It sets up a stable artifacts folder
            (which should be .gitignore'd) and fills it with the core SDK artifact.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.RunLanguageTest(Pulumirpc.Testing.RunLanguageTestRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            RunLanguageTest runs a single test of the language plugin.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.RunLanguageTest(Pulumirpc.Testing.RunLanguageTestRequest,Grpc.Core.CallOptions)">
            <summary>
            RunLanguageTest runs a single test of the language plugin.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.RunLanguageTestAsync(Pulumirpc.Testing.RunLanguageTestRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            RunLanguageTest runs a single test of the language plugin.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.RunLanguageTestAsync(Pulumirpc.Testing.RunLanguageTestRequest,Grpc.Core.CallOptions)">
            <summary>
            RunLanguageTest runs a single test of the language plugin.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.LanguageTestClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.BindService(Pulumirpc.Testing.LanguageTest.LanguageTestBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Pulumirpc.Testing.LanguageTest.BindService(Grpc.Core.ServiceBinderBase,Pulumirpc.Testing.LanguageTest.LanguageTestBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Codegen.LoaderReflection">
            <summary>Holder for reflection information generated from pulumi/codegen/loader.proto</summary>
        </member>
        <member name="P:Codegen.LoaderReflection.Descriptor">
            <summary>File descriptor for pulumi/codegen/loader.proto</summary>
        </member>
        <member name="T:Codegen.GetSchemaRequest">
            <summary>
            GetSchemaRequest allows the engine to return a schema for a given package and version.
            </summary>
        </member>
        <member name="F:Codegen.GetSchemaRequest.PackageFieldNumber">
            <summary>Field number for the "package" field.</summary>
        </member>
        <member name="P:Codegen.GetSchemaRequest.Package">
            <summary>
            the package name for the schema being requested.
            </summary>
        </member>
        <member name="F:Codegen.GetSchemaRequest.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Codegen.GetSchemaRequest.Version">
            <summary>
            the version for the schema being requested, must be a valid semver or empty.
            </summary>
        </member>
        <member name="T:Codegen.GetSchemaResponse">
            <summary>
            GetSchemaResponse returns the schema data for the requested package.
            </summary>
        </member>
        <member name="F:Codegen.GetSchemaResponse.SchemaFieldNumber">
            <summary>Field number for the "schema" field.</summary>
        </member>
        <member name="P:Codegen.GetSchemaResponse.Schema">
            <summary>
            the JSON encoded schema.
            </summary>
        </member>
        <member name="T:Codegen.Loader">
            <summary>
            Loader is a service for getting schemas from the Pulumi engine for use in code generators and other tools.
            This is currently unstable and experimental.
            </summary>
        </member>
        <member name="P:Codegen.Loader.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Codegen.Loader.LoaderBase">
            <summary>Base class for server-side implementations of Loader</summary>
        </member>
        <member name="M:Codegen.Loader.LoaderBase.GetSchema(Codegen.GetSchemaRequest,Grpc.Core.ServerCallContext)">
            <summary>
            GetSchema tries to find a schema for the given package and version.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Codegen.Loader.LoaderClient">
            <summary>Client for Loader</summary>
        </member>
        <member name="M:Codegen.Loader.LoaderClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Loader</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Codegen.Loader.LoaderClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Loader that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Codegen.Loader.LoaderClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Codegen.Loader.LoaderClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Codegen.Loader.LoaderClient.GetSchema(Codegen.GetSchemaRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetSchema tries to find a schema for the given package and version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Codegen.Loader.LoaderClient.GetSchema(Codegen.GetSchemaRequest,Grpc.Core.CallOptions)">
            <summary>
            GetSchema tries to find a schema for the given package and version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Codegen.Loader.LoaderClient.GetSchemaAsync(Codegen.GetSchemaRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetSchema tries to find a schema for the given package and version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Codegen.Loader.LoaderClient.GetSchemaAsync(Codegen.GetSchemaRequest,Grpc.Core.CallOptions)">
            <summary>
            GetSchema tries to find a schema for the given package and version.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Codegen.Loader.LoaderClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Codegen.Loader.BindService(Codegen.Loader.LoaderBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Codegen.Loader.BindService(Grpc.Core.ServiceBinderBase,Codegen.Loader.LoaderBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Codegen.MapperReflection">
            <summary>Holder for reflection information generated from pulumi/codegen/mapper.proto</summary>
        </member>
        <member name="P:Codegen.MapperReflection.Descriptor">
            <summary>File descriptor for pulumi/codegen/mapper.proto</summary>
        </member>
        <member name="T:Codegen.GetMappingRequest">
            <summary>
            GetMappingRequest allows the engine to return ecosystem specific information to allow the converter to be
            convert provider types from a source markup to Pulumi.
            </summary>
        </member>
        <member name="F:Codegen.GetMappingRequest.ProviderFieldNumber">
            <summary>Field number for the "provider" field.</summary>
        </member>
        <member name="P:Codegen.GetMappingRequest.Provider">
            <summary>
            the provider name for the mapping being requested.
            </summary>
        </member>
        <member name="F:Codegen.GetMappingRequest.PulumiProviderFieldNumber">
            <summary>Field number for the "pulumi_provider" field.</summary>
        </member>
        <member name="P:Codegen.GetMappingRequest.PulumiProvider">
            <summary>
            the expected name of the pulumi provider that maps to the requested provider. Defaults to the same as 'provider'.
            </summary>
        </member>
        <member name="T:Codegen.GetMappingResponse">
            <summary>
            GetMappingResponse returns converter plugin specific data for the requested provider. This will normally be human
            readable JSON, but the engine doesn't mandate any form.
            </summary>
        </member>
        <member name="F:Codegen.GetMappingResponse.DataFieldNumber">
            <summary>Field number for the "data" field.</summary>
        </member>
        <member name="P:Codegen.GetMappingResponse.Data">
            <summary>
            the conversion plugin specific data (if any)
            </summary>
        </member>
        <member name="T:Codegen.Mapper">
            <summary>
            Mapper is a service for getting mappings from other ecosystems to Pulumi.
            This is currently unstable and experimental.
            </summary>
        </member>
        <member name="P:Codegen.Mapper.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Codegen.Mapper.MapperBase">
            <summary>Base class for server-side implementations of Mapper</summary>
        </member>
        <member name="M:Codegen.Mapper.MapperBase.GetMapping(Codegen.GetMappingRequest,Grpc.Core.ServerCallContext)">
            <summary>
            GetMapping tries to find a mapping for the given provider.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Codegen.Mapper.MapperClient">
            <summary>Client for Mapper</summary>
        </member>
        <member name="M:Codegen.Mapper.MapperClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Mapper</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Codegen.Mapper.MapperClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Mapper that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Codegen.Mapper.MapperClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Codegen.Mapper.MapperClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Codegen.Mapper.MapperClient.GetMapping(Codegen.GetMappingRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetMapping tries to find a mapping for the given provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Codegen.Mapper.MapperClient.GetMapping(Codegen.GetMappingRequest,Grpc.Core.CallOptions)">
            <summary>
            GetMapping tries to find a mapping for the given provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Codegen.Mapper.MapperClient.GetMappingAsync(Codegen.GetMappingRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            GetMapping tries to find a mapping for the given provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Codegen.Mapper.MapperClient.GetMappingAsync(Codegen.GetMappingRequest,Grpc.Core.CallOptions)">
            <summary>
            GetMapping tries to find a mapping for the given provider.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Codegen.Mapper.MapperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Codegen.Mapper.BindService(Codegen.Mapper.MapperBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Codegen.Mapper.BindService(Grpc.Core.ServiceBinderBase,Codegen.Mapper.MapperBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
    </members>
</doc>
